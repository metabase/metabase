name: Containerize Uberjar

on:
  workflow_call:
  workflow_dispatch:

jobs:
  get-container-info:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    name: Get container info
    outputs:
      editions: ${{ steps.ee-info.outputs.editions }}
      ee: ${{ toJson(fromJson(steps.build-matrix.outputs.result).ee) }}
      oss: ${{ toJson(fromJson(steps.build-matrix.outputs.result).oss) }}
    steps:
      - name: Check out the code
        uses: actions/checkout@v4
      - name: Get EE Docker info
        id: ee-info
        uses: ./.github/actions/get-docker-info
        with:
          edition: ee
      - name: Get OSS Docker info
        id: oss-info
        uses: ./.github/actions/get-docker-info
        with:
          edition: oss
      - name: Build matrix info
        id: build-matrix
        uses: actions/github-script@v7
        with:
          script: | # js
            const editions = JSON.parse('${{ steps.ee-info.outputs.editions }}');
            const result = {
              editions: editions,
              ee: {
                repo: '${{ steps.ee-info.outputs.repo }}',
                tag: '${{ steps.ee-info.outputs.tag }}'
              },
              oss: {
                repo: '${{ steps.oss-info.outputs.repo }}',
                tag: '${{ steps.oss-info.outputs.tag }}'
              }
            };
            console.log('Build matrix:', result);
            return result;

  containerize:
    needs: [get-container-info]
    if: needs.get-container-info.result == 'success'
    strategy:
      matrix:
        edition: ${{ fromJson(needs.get-container-info.outputs.editions) }}
    uses: ./.github/workflows/containerize-jar.yml
    secrets: inherit
    with:
      artifact-name: metabase-${{ matrix.edition }}-${{ github.event.inputs.commit || github.event.pull_request.head.sha || github.sha }}-uberjar
      commit: ${{ github.event.inputs.commit || github.sha }}
      repo: ${{ fromJson(needs.get-container-info.outputs[matrix.edition]).repo }}
      tag: ${{ fromJson(needs.get-container-info.outputs[matrix.edition]).tag }}
      release: "false"
      build-args: |
        GIT_COMMIT_SHA=${{ github.event.inputs.commit || github.sha }}

  run-trivy:
    needs: [get-container-info, containerize]
    strategy:
      matrix:
        edition: ${{ fromJson(needs.get-container-info.outputs.editions) }}
    runs-on: ubuntu-22.04
    name: Run Trivy vulnerability scanner
    steps:
      - name: Check out the code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.commit || github.sha }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.29.0
        env:
          TRIVY_OFFLINE_SCAN: true
          repo: ${{ fromJson(needs.get-container-info.outputs[matrix.edition]).repo }}
          tag: ${{ fromJson(needs.get-container-info.outputs[matrix.edition]).tag }}
        with:
          image-ref: docker.io/${{ env.repo }}:${{ env.tag }}
          format: sarif
          output: trivy-results.sarif
          version: "v0.57.1"
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"

  post-comment:
    needs: [get-container-info, containerize]
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-22.04
    name: Post PR comment
    steps:
      - name: Check out the code
        uses: actions/checkout@v4
      - name: Get Docker info for comment
        id: docker-info
        uses: ./.github/actions/get-docker-info
        with:
          branch: ${{ github.head_ref || github.ref_name }}
          edition: ee

      - name: Post PR comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: docker-build-status
          message: |
            âœ… Docker build completed for commit ${{ github.event.pull_request.head.sha || github.sha }}

            The uberjar has been built and containerized successfully.

            **Branch:** `${{ github.head_ref || github.ref_name }}`
            **Docker Image:** `${{ steps.docker-info.outputs.full_image }}`
            **Docker Hub:** [View on Docker Hub](https://hub.docker.com/r/${{ steps.docker-info.outputs.repo }}/tags?name=${{ steps.docker-info.outputs.tag }})
            **Triggered by:** @${{ github.actor }}

            Pull the image:
            ```bash
            docker pull ${{ steps.docker-info.outputs.full_image }}
            ```
