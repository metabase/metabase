org.quartz.scheduler.instanceName = MetabaseScheduler
org.quartz.scheduler.instanceId = AUTO
org.quartz.threadPool.threadCount = 4

# Don't phone home
org.quartz.scheduler.skipUpdateCheck: true
org.quartz.scheduler.classLoadHelper.class=metabase.task.DynamicClassLoadHelper

# Use the JDBC backend so we can cluster when running multiple instances!
# See http://www.quartz-scheduler.org/documentation/quartz-2.x/configuration/ConfigJDBCJobStoreClustering
#     http://www.quartz-scheduler.org/documentation/quartz-2.x/configuration/ConfigJobStoreTX.html
#     http://www.quartz-scheduler.org/documentation/quartz-2.x/configuration/ConfigDataSources.html
#     http://clojurequartz.info/articles/durable_quartz_stores.html
org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
org.quartz.jobStore.dataSource=db

org.quartz.jobStore.isClustered = true

org.quartz.dataSource.db.validationQuery=SELECT 1

# Useful for debugging when Quartz jobs run and when they misfire
#org.quartz.plugin.triggHistory.class = org.quartz.plugins.history.LoggingTriggerHistoryPlugin
#org.quartz.plugin.triggHistory.triggerFiredMessage = Trigger \{1\}.\{0\} fired job \{6\}.\{5\} at: \{4, date, HH:mm:ss MM/dd/yyyy}
#org.quartz.plugin.triggHistory.triggerCompleteMessage = Trigger \{1\}.\{0\} completed firing job \{6\}.\{5\} at \{4, date, HH:mm:ss MM/dd/yyyy\}.
