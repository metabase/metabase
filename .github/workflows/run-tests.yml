name: Run tests

on:
  push:
    branches:
      - "master"
      - "release-**"
  pull_request:
    types: [opened, synchronize, reopened]
  merge_group:

jobs:
  files-changed:
    if: ${{ !contains(github.event.pull_request.labels.*.name,'ci skip') }}
    name: Check which files changed
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    outputs:
      e2e_all: ${{ steps.changes.outputs.e2e_all }}
      e2e_all_files: ${{ steps.changes.outputs.e2e_all_files }}
      e2e_specs: ${{ steps.changes.outputs.e2e_specs }}
      e2e_specs_files: ${{ steps.changes.outputs.e2e_specs_files }}
      backend_all: ${{ steps.changes.outputs.backend_all }}
      frontend_all: ${{ steps.changes.outputs.frontend_all }}
      frontend_sources: ${{ steps.changes.outputs.frontend_sources }}
      documentation: ${{ steps.changes.outputs.documentation }}
      visualizations: ${{ steps.changes.outputs.visualizations }}
    steps:
      - uses: actions/checkout@v4
      - name: Test which files changed
        uses: dorny/paths-filter@v3.0.0
        id: changes
        with:
          token: ${{ github.token }}
          # comma separated list of files
          list-files: csv
          filters: .github/file-paths.yaml

  uberjar:
    needs: [files-changed]
    if: ${{ !cancelled() && !(needs.files-changed.outputs.documentation == 'true' && needs.files-changed.outputs.backend_all == 'false' && needs.files-changed.outputs.frontend_all == 'false' && needs.files-changed.outputs.e2e_all == 'false') }}
    uses: ./.github/workflows/uberjar.yml
    secrets: inherit
    with:
      source_changed: ${{ needs.files-changed.outputs.backend_all == 'true' || needs.files-changed.outputs.frontend_all == 'true' || needs.files-changed.outputs.visualizations == 'true' }}

  backend-tests:
    if: ${{ !cancelled() }}
    needs: [files-changed]
    uses: ./.github/workflows/backend.yml
    secrets: inherit
    with:
      skip: ${{ needs.files-changed.outputs.backend_all != 'true' && needs.files-changed.outputs.visualizations != 'true' }}

  semantic-search-tests:
    needs: files-changed
    uses: ./.github/workflows/semantic-search.yml
    secrets: inherit
    with:
      skip: ${{ needs.files-changed.outputs.backend_all != 'true' }}

  app-db-tests:
    needs: files-changed
    uses: ./.github/workflows/app-db.yml
    secrets: inherit
    with:
      skip: ${{ needs.files-changed.outputs.backend_all != 'true' }}

  driver-tests:
    needs: files-changed
    uses: ./.github/workflows/drivers.yml
    secrets: inherit
    with:
      skip: ${{ needs.files-changed.outputs.backend_all != 'true' }}

  frontend-tests:
    needs: files-changed
    uses: ./.github/workflows/frontend.yml
    secrets: inherit
    with:
      skip: ${{ needs.files-changed.outputs.frontend_all != 'true' }}
      skip-lint: ${{ needs.files-changed.outputs.frontend_all != 'true' && needs.files-changed.outputs.e2e_specs != 'true' }}

  e2e-tests:
    needs: [files-changed, uberjar]
    if: always() && !cancelled()
    uses: ./.github/workflows/e2e-tests.yml
    secrets: inherit
    with:
      skip: ${{ needs.files-changed.outputs.e2e_all != 'true' }}
      # here we pass result from files-changed, which is a list of files, comma separated
      # e.g. e2e/test/scenarios/onboarding/command-palette.cy.spec.js,e2e/test/scenarios/question/document-title.cy.spec.js
      # e2e_all_files includes all changes which trigger all e2e tests, if the list of changes files is included in the
      # list of changed specs files, then only specs are changed and we can run only those specs
      specs: ${{ needs.files-changed.outputs.e2e_all_files == needs.files-changed.outputs.e2e_specs_files && needs.files-changed.outputs.e2e_specs_files || '' }}

  sdk-tests:
    needs: files-changed
    uses: ./.github/workflows/embedding-sdk.yml
    secrets: inherit

  pr-env:
    needs: [uberjar]
    if: |
      !cancelled() &&
      contains(github.event.pull_request.labels.*.name, 'PR-Env')
    uses: ./.github/workflows/pr-env.yml
    secrets: inherit

  containerize:
    needs: [uberjar]
    if: |
      !cancelled() &&
      needs.uberjar.result == 'success' &&
      (
        (github.event_name == 'push' && contains(fromJson('["master", "metabot-v3-main", "internal-tools"]'), github.ref_name)) ||
        (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'build-docker-uberjar'))
      )
    uses: ./.github/workflows/containerize-uberjar.yml
    secrets: inherit
