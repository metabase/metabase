name: Containerize Uberjar

on:
  workflow_call:
  workflow_dispatch:

jobs:
  get-container-info:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    name: Get container info
    outputs:
      editions: ${{ toJson(fromJson(steps.info.outputs.result).editions) }}
      ee: ${{ toJson(fromJson(steps.info.outputs.result).ee) }}
      oss: ${{ toJson(fromJson(steps.info.outputs.result).oss) }}
    steps:
      - name: Get docker repo and tag
        id: info
        uses: actions/github-script@v7
        with:
          script: | # js
            const branch = '${{ github.head_ref || github.ref_name }}';
            const owner = '${{ github.repository_owner }}';

            console.log(`Branch: ${branch}`);

            if (branch === "master") {
              return {
                editions: ["ee", "oss"],
                ee: {
                  repo: `${owner}/metabase-enterprise-head`,
                  tag: "latest"
                },
                oss: {
                  repo: `${owner}/metabase-head`,
                  tag: "latest"
                }
              };
            }

            return {
              editions: ["ee"],
              ee: {
                repo: `${owner}/metabase-dev`,
                tag: branch.replaceAll("/", "-"), // slashes make docker sad
              },
            };

      - name: Print output
        run: |
          echo "${{ steps.info.outputs.result }}"

  containerize:
    needs: [get-container-info]
    if: needs.get-container-info.result == 'success'
    strategy:
      matrix:
        edition: ${{ fromJson(needs.get-container-info.outputs.editions) }}
    uses: ./.github/workflows/containerize-jar.yml
    secrets: inherit
    with:
      artifact-name: metabase-${{ matrix.edition }}-${{ github.event.inputs.commit || github.event.pull_request.head.sha || github.sha }}-uberjar
      commit: ${{ github.event.inputs.commit || github.sha }}
      repo: ${{ fromJson(needs.get-container-info.outputs[matrix.edition]).repo }}
      tag: ${{ fromJson(needs.get-container-info.outputs[matrix.edition]).tag }}
      release: "false"
      build-args: |
        GIT_COMMIT_SHA=${{ github.event.inputs.commit || github.sha }}

  run-trivy:
    needs: [get-container-info, containerize]
    strategy:
      matrix:
        edition: ${{ fromJson(needs.get-container-info.outputs.editions) }}
    runs-on: ubuntu-22.04
    name: Run Trivy vulnerability scanner
    steps:
      - name: Check out the code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.commit || github.sha }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.29.0
        env:
          TRIVY_OFFLINE_SCAN: true
          repo: ${{ fromJson(needs.get-container-info.outputs[matrix.edition]).repo }}
          tag: ${{ fromJson(needs.get-container-info.outputs[matrix.edition]).tag }}
        with:
          image-ref: docker.io/${{ env.repo }}:${{ env.tag }}
          format: sarif
          output: trivy-results.sarif
          version: "v0.57.1"
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"
