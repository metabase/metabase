databaseChangeLog:
  - property:
      name: timestamp_type
      value: timestamp with time zone
      dbms: postgresql,h2
  - property:
      name: timestamp_type
      value: timestamp(6)
      dbms: mysql,mariadb
  - property:
      name: blob.type
      value: blob
      dbms: mysql,h2,mariadb
  - property:
      name: blob.type
      value: bytea
      dbms: postgresql
  # In MySQL, use LONGTEXT instead of TEXT (#7006)
  - property:
      name: text.type
      value: text
      dbms: postgresql,h2
  - property:
      name: text.type
      value: longtext
      dbms: mysql,mariadb
  # databasechangelog is uppercase in MySQL and H2 but lower-case in Postgres for reasons
  - property:
      name: databasechangelog.name
      value: DATABASECHANGELOG
      dbms: h2,mysql,mariadb
  - property:
      name: databasechangelog.name
      value: databasechangelog
      dbms: postgresql

  - objectQuotingStrategy: QUOTE_ALL_OBJECTS

  - changeSet:
      id: v00.00-000
      author: qnkhuat
      comment: Initialze metabase
      preConditions:
        - onFail: MARK_RAN
        - not:
          - tableExists:
              tableName: core_user
      changes:
        - sqlFile:
            dbms: postgresql
            path: initialization/metabase_postgres.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: mysql,mariadb
            path: initialization/metabase_mysql.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: h2
            path: initialization/metabase_h2.sql
            relativeToChangelogFile: true

# Note on rollback: migrations for v45 onwards should always include a rollback key unless they are supported
# by Liquibase Auto Rollback. Most common changes are supported. See docs here:
#
#  https://docs.liquibase.com/workflows/liquibase-community/liquibase-auto-rollback.html

  - changeSet:
      id: v45.00-001
      author: snoe
      comment: Added 0.44.0 - writeback
      # This migration was previously numbered v44.00-012 but ultimately was not shipped with 44.
      preConditions:
        - onFail: MARK_RAN
        - or:
            # For some insane reason databasechangelog is upper-case in MySQL and MariaDB.
            - and:
                - dbms:
                    type: postgresql,h2
                - sqlCheck:
                    expectedResult: 0
                    sql: SELECT count(*) FROM databasechangelog WHERE id = 'v44.00-012';
            - and:
                - dbms:
                    type: mysql,mariadb
                - sqlCheck:
                    expectedResult: 0
                    sql: SELECT count(*) FROM `DATABASECHANGELOG` WHERE id = 'v44.00-012';
      changes:
        - createTable:
            tableName: action
            remarks: An action is something you can do, such as run a readwrite query
            columns:
              - column:
                  name: id
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  remarks: The timestamp of when the action was created
                  name: created_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  remarks: The timestamp of when the action was updated
                  name: updated_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  remarks: Type of action
                  name: type
                  type: ${text.type}
                  constraints:
                    nullable: false

  - changeSet:
      id: v45.00-002
      author: snoe
      comment: Added 0.44.0 - writeback
      # This migration was previously numbered v44.00-013 but ultimately was not shipped with 44.
      preConditions:
        - onFail: MARK_RAN
        - or:
            # For some insane reason databasechangelog is upper-case in MySQL and MariaDB.
            - and:
                - dbms:
                    type: postgresql,h2
                - sqlCheck:
                    expectedResult: 0
                    sql: SELECT count(*) FROM databasechangelog WHERE id = 'v44.00-013';
            - and:
                - dbms:
                    type: mysql,mariadb
                - sqlCheck:
                    expectedResult: 0
                    sql: SELECT count(*) FROM `DATABASECHANGELOG` WHERE id = 'v44.00-013';
      changes:
        - createTable:
            tableName: query_action
            remarks: A readwrite query type of action
            columns:
              - column:
                  name: action_id
                  type: int
                  remarks: The related action
                  constraints:
                    nullable: false
                    referencedTableName: action
                    referencedColumnNames: id
                    foreignKeyName: fk_query_action_ref_action_id
                    deleteCascade: true
              - column:
                  name: card_id
                  type: int
                  remarks: The related card
                  constraints:
                    nullable: false
                    referencedTableName: report_card
                    referencedColumnNames: id
                    foreignKeyName: fk_query_action_ref_card_id
                    deleteCascade: true

  - changeSet:
      id: v45.00-003
      author: snoe
      comment: Added 0.44.0 - writeback
      # This migration was previously numbered v44.00-014 but ultimately was not shipped with 44.
      preConditions:
        - onFail: MARK_RAN
        - or:
            # For some insane reason databasechangelog is upper-case in MySQL and MariaDB.
            - and:
                - dbms:
                    type: postgresql,h2
                - sqlCheck:
                    expectedResult: 0
                    sql: SELECT count(*) FROM databasechangelog WHERE id = 'v44.00-014';
            - and:
                - dbms:
                    type: mysql,mariadb
                - sqlCheck:
                    expectedResult: 0
                    sql: SELECT count(*) FROM `DATABASECHANGELOG` WHERE id = 'v44.00-014';
      changes:
        - addPrimaryKey:
            tableName: query_action
            columnNames: action_id, card_id
            constraintName: pk_query_action
      rollback: # will be deleted when table is deleted

  # note: some migrations which only added and deleted tables within v45 were removed, hence an ID gap here

  - changeSet:
      id: v45.00-011
      author: snoe
      comment: Added 0.44.0 - writeback
      # This migration was previously numbered v44.00-022 but ultimately was not shipped with 44.
      preConditions:
        - onFail: MARK_RAN
        - or:
            # For some insane reason databasechangelog is upper-case in MySQL and MariaDB.
            - and:
                - dbms:
                    type: postgresql,h2
                - sqlCheck:
                    expectedResult: 0
                    sql: SELECT count(*) FROM databasechangelog WHERE id = 'v44.00-022';
            - and:
                - dbms:
                    type: mysql,mariadb
                - sqlCheck:
                    expectedResult: 0
                    sql: SELECT count(*) FROM `DATABASECHANGELOG` WHERE id = 'v44.00-022';
      changes:
        - addColumn:
            columns:
              - column:
                  name: is_write
                  type: boolean
                  defaultValueBoolean: false
                  remarks: Indicates that this query will perform writes to a db
                  constraints:
                    nullable: false
            tableName: report_card

  - changeSet:
      id: v45.00-012
      author: snoe
      comment: Added 0.44.0 - writeback
      # This migration was previously numbered v44.00-031 but ultimately was not shipped with 44.
      preConditions:
        - onFail: MARK_RAN
        - or:
            # For some insane reason databasechangelog is upper-case in MySQL and MariaDB.
            - and:
                - dbms:
                    type: postgresql,h2
                - sqlCheck:
                    expectedResult: 0
                    sql: SELECT count(*) FROM databasechangelog WHERE id = 'v44.00-031';
            - and:
                - dbms:
                    type: mysql,mariadb
                - sqlCheck:
                    expectedResult: 0
                    sql: SELECT count(*) FROM `DATABASECHANGELOG` WHERE id = 'v44.00-031';
      changes:
        - createTable:
            tableName: http_action
            remarks: An http api call type of action
            columns:
              - column:
                  name: action_id
                  type: int
                  remarks: The related action
                  constraints:
                    nullable: false
                    referencedTableName: action
                    referencedColumnNames: id
                    foreignKeyName: fk_http_action_ref_action_id
                    deleteCascade: true
              - column:
                  name: name
                  type: varchar(254)
                  remarks: The name of this action
                  constraints:
                    nullable: false
              - column:
                  name: description
                  type: ${text.type}
                  remarks: An optional description for this action
              - column:
                  name: template
                  type: ${text.type}
                  remarks: A template that defines method,url,body,headers required to make an api call
                  constraints:
                    nullable: false
              - column:
                  name: response_handle
                  type: ${text.type}
                  remarks: A program to take an api response and transform to an appropriate response for emitters
              - column:
                  name: error_handle
                  type: ${text.type}
                  remarks: A program to take an api response to determine if an error occurred

  - changeSet:
      id: v45.00-013
      author: snoe
      comment: Added 0.44.0 - writeback
      # This migration was previously numbered v44.00-032 but ultimately was not shipped with 44.
      preConditions:
        - onFail: MARK_RAN
        - or:
            # For some insane reason databasechangelog is upper-case in MySQL and MariaDB.
            - and:
                - dbms:
                    type: postgresql,h2
                - sqlCheck:
                    expectedResult: 0
                    sql: SELECT count(*) FROM databasechangelog WHERE id = 'v44.00-032';
            - and:
                - dbms:
                    type: mysql,mariadb
                - sqlCheck:
                    expectedResult: 0
                    sql: SELECT count(*) FROM `DATABASECHANGELOG` WHERE id = 'v44.00-032';
      changes:
        - addPrimaryKey:
            tableName: http_action
            columnNames: action_id
            constraintName: pk_http_action
      rollback: # no rollback needed, will be deleted with table


  # note: some migrations which only added and deleted tables within v45 were removed, hence an ID gap here

  - changeSet:
      id: v45.00-022
      author: snoe
      comment: Added 0.45.0 - add app container
      changes:
        - createTable:
            tableName: app
            remarks: Defines top level concerns for App
            columns:
              - column:
                  name: id
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: entity_id
                  type: char(21)
                  remarks: Random NanoID tag for unique identity.
                  constraints:
                    nullable: false
                    unique: true
              - column:
                  name: collection_id
                  type: int
                  remarks: The associated collection
                  constraints:
                    nullable: false
                    referencedTableName: collection
                    referencedColumnNames: id
                    foreignKeyName: fk_app_ref_collection_id
                    deleteCascade: true
                    unique: true
              - column:
                  name: dashboard_id
                  type: int
                  remarks: The homepage of the app
              - column:
                  remarks: JSON for the navigation items of the app
                  name: nav_items
                  type: ${text.type}
              - column:
                  remarks: JSON for frontend related additions, such as styling
                  name: options
                  type: ${text.type}
              - column:
                  remarks: The timestamp of when the app was created
                  name: created_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  remarks: The timestamp of when the app was updated
                  name: updated_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false

  - changeSet:
      id: v45.00-023
      author: snoe
      comment: Added 0.45.0 - add app container
      changes:
        - addForeignKeyConstraint:
            baseTableName: app
            baseColumnNames: dashboard_id
            referencedTableName: report_dashboard
            referencedColumnNames: id
            constraintName: fk_app_ref_dashboard_id
            onDelete: SET NULL

  - changeSet:
      id: v45.00-025
      author: metamben
      comment: Added 0.45.0 - mark app pages
      changes:
        - addColumn:
            columns:
              - column:
                  name: is_app_page
                  type: boolean
                  defaultValueBoolean: false
                  remarks: Indicates that this dashboard serves as a page of an app
                  constraints:
                    nullable: false
            tableName: report_dashboard

  - changeSet:
      id: v45.00-026
      author: snoe
      comment: Added 0.45.0 - apps add action_id to report_dashboardcard
      changes:
        - addColumn:
            columns:
              - column:
                  name: action_id
                  type: int
                  remarks: The related action
            tableName: report_dashboardcard

  # FK constraint is added separately because deleteCascade doesn't work in addColumn -- see #14321
  - changeSet:
      id: v45.00-027
      author: snoe
      comment: Added 0.45.0 - apps add fk for action_id to report_dashboardcard
      changes:
        - addForeignKeyConstraint:
            baseTableName: report_dashboardcard
            baseColumnNames: action_id
            referencedTableName: action
            referencedColumnNames: id
            constraintName: fk_report_dashboardcard_ref_action_id
            onDelete: CASCADE

  - changeSet:
      id: v45.00-028
      author: camsaul
      comment: Added 0.45.0 -- rename DashboardCard sizeX to size_x. See https://github.com/metabase/metabase/issues/16344
      changes:
        - renameColumn:
            tableName: report_dashboardcard
            columnDataType: int
            oldColumnName: sizeX
            newColumnName: size_x

  - changeSet:
      id: v45.00-029
      author: camsaul
      comment: Added 0.45.0 -- rename DashboardCard size_y to size_y. See https://github.com/metabase/metabase/issues/16344
      changes:
        - renameColumn:
            tableName: report_dashboardcard
            columnDataType: int
            oldColumnName: sizeY
            newColumnName: size_y

  - changeSet:
      id: v45.00-030
      author: camsaul
      comment: Added 0.45.0 -- add default value to DashboardCard size_x -- this was previously done by Toucan
      changes:
        - addDefaultValue:
            tableName: report_dashboardcard
            columnName: size_x
            defaultValue: 2

  - changeSet:
      id: v45.00-031
      author: camsaul
      comment: Added 0.45.0 -- add default value to DashboardCard size_y -- this was previously done by Toucan
      changes:
        - addDefaultValue:
            tableName: report_dashboardcard
            columnName: size_y
            defaultValue: 2

  - changeSet:
      id: v45.00-032
      author: camsaul
      comment: Added 0.45.0 -- add default value for DashboardCard created_at (Postgres/H2)
      dbms: postgresql,h2
      preConditions:
        - onFail: MARK_RAN
        - dbms:
            type: postgresql,h2
      changes:
        - addDefaultValue:
            tableName: report_dashboardcard
            columnName: created_at
            columnDataType: ${timestamp_type}
            defaultValueComputed: current_timestamp

    # addDefaultValue with defaultValueComputed doesn't work for MySQL/MariaDB so we have to do this the hard way.
  - changeSet:
      id: v45.00-033
      author: camsaul
      comment: Added 0.45.0 -- add default value for DashboardCard created_at (MySQL/MariaDB)
      preConditions:
        - onFail: MARK_RAN
        - dbms:
            type: mysql,mariadb
      changes:
        - sql:
            sql: >-
              ALTER TABLE report_dashboardcard
              CHANGE created_at
              created_at timestamp(6) NOT NULL DEFAULT current_timestamp(6);
      rollback: # nothing to do, but required for sql

  - changeSet:
      id: v45.00-034
      author: camsaul
      comment: Added 0.45.0 -- add default value for DashboardCard updated_at (Postgres/H2)
      dbms: postgresql,h2
      preConditions:
        - onFail: MARK_RAN
        - dbms:
            type: postgresql,h2
      changes:
        - addDefaultValue:
            tableName: report_dashboardcard
            columnName: updated_at
            columnDataType: ${timestamp_type}
            defaultValueComputed: current_timestamp

  - changeSet:
      id: v45.00-035
      author: camsaul
      comment: Added 0.45.0 -- add default value for DashboardCard updated_at (MySQL/MariaDB)
      preConditions:
        - onFail: MARK_RAN
        - dbms:
            type: mysql,mariadb
      changes:
        - sql:
            sql: >-
              ALTER TABLE report_dashboardcard
              CHANGE updated_at
              updated_at timestamp(6) NOT NULL DEFAULT current_timestamp(6);
      rollback: # nothing to do

  - changeSet:
      id: v45.00-036
      author: snoe
      comment: Added 0.45.0 - add model action table
      changes:
        - createTable:
            tableName: model_action
            remarks: Ties actions to models
            columns:
              - column:
                  name: id
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: entity_id
                  type: char(21)
                  remarks: Random NanoID tag for unique identity.
                  constraints:
                    nullable: false
                    unique: true
              - column:
                  name: slug
                  type: varchar(254)
                  remarks: The referenceable name for this action
                  constraints:
                    nullable: false
              - column:
                  name: card_id
                  type: int
                  remarks: The associated model
                  constraints:
                    nullable: false
                    referencedTableName: report_card
                    referencedColumnNames: id
                    foreignKeyName: fk_model_action_ref_card_id
                    deleteCascade: true
              - column:
                  name: action_id
                  type: int
                  remarks: The associated action
                  constraints:
                    nullable: true
                    referencedTableName: action
                    referencedColumnNames: id
                    foreignKeyName: fk_model_action_ref_action_id
                    deleteCascade: true
              - column:
                  name: requires_pk
                  remarks: Indicates that the primary key(s) need to be passed in as parameters
                  type: boolean
                  defaultValueBoolean: false
                  constraints:
                    nullable: false
              - column:
                  name: parameter_mappings
                  type: ${text.type}
                  remarks: Mappings for primary keys to action parameters
              - column:
                  name: visualization_settings
                  type: ${text.type}
                  remarks: Settings for rendering the action
  - changeSet:
      id: v45.00-037
      author: snoe
      comment: Added 0.45.0 - model action
      changes:
        - addUniqueConstraint:
            tableName: model_action
            columnNames: card_id, slug
            constraintName: unique_model_action_card_id_slug
      rollback: # will be deleted with table

  # The next 4 values add default values for Database `created_at` and `updated_at`; previously this was handled by
  # Toucan but it's more convenient to do this at the application database level instead -- it facilitates stuff like
  # schema migration tests that don't use Toucan, or other manual scripting
  - changeSet:
      id: v45.00-038
      author: camsaul
      comment: Added 0.45.0 -- add default value for Database created_at (Postgres/H2)
      dbms: postgresql,h2
      preConditions:
        - onFail: MARK_RAN
        - dbms:
            type: postgresql,h2
      changes:
        - addDefaultValue:
            tableName: metabase_database
            columnName: created_at
            columnDataType: ${timestamp_type}
            defaultValueComputed: current_timestamp

    # addDefaultValue with defaultValueComputed doesn't work for MySQL/MariaDB so we have to do this the hard way.
  - changeSet:
      id: v45.00-039
      author: camsaul
      comment: Added 0.45.0 -- add default value for Database created_at (MySQL/MariaDB)
      preConditions:
        - onFail: MARK_RAN
        - dbms:
            type: mysql,mariadb
      changes:
        - sql:
            sql: >-
              ALTER TABLE metabase_database
              CHANGE created_at
              created_at timestamp(6) NOT NULL DEFAULT current_timestamp(6);
      rollback: # nothing to do

  - changeSet:
      id: v45.00-040
      author: camsaul
      comment: Added 0.45.0 -- add default value for Database updated_at (Postgres/H2)
      dbms: postgresql,h2
      preConditions:
        - onFail: MARK_RAN
        - dbms:
            type: postgresql,h2
      changes:
        - addDefaultValue:
            tableName: metabase_database
            columnName: updated_at
            columnDataType: ${timestamp_type}
            defaultValueComputed: current_timestamp

  - changeSet:
      id: v45.00-041
      author: camsaul
      comment: Added 0.45.0 -- add default value for Database updated_at (MySQL/MariaDB)
      preConditions:
        - onFail: MARK_RAN
        - dbms:
            type: mysql,mariadb
      changes:
        - sql:
            sql: >-
              ALTER TABLE metabase_database
              CHANGE updated_at
              updated_at timestamp(6) NOT NULL DEFAULT current_timestamp(6);
      rollback: # nothing to do

  # It was probably an oversight, but while we validated Database `details` in the API layer it was not a required/NOT
  # NULL column in the application Database itself. No problem; let's add it now that we've noticed it.
  #
  # MySQL (at least 5.7) won't let us have nice things:
  #
  # https://dev.mysql.com/doc/refman/5.7/en/data-type-defaults.html
  #
  # The BLOB, TEXT, GEOMETRY, and JSON data types cannot be assigned a default value.
  #
  # Because of this restriction we will just have to update existing NULL values in SQL and then add a NOT NULL
  # restriction separately; we can use Toucan `pre-insert` to set defaults values when saving things.
  - changeSet:
      id: v45.00-042
      author: camsaul
      comment: Added 0.45.0 -- add default value for Database with NULL details
      changes:
        - sql:
            sql: >-
              UPDATE metabase_database SET details = '{}' WHERE details IS NULL;
      rollback: # nothing to do, since a '{}' is okay for v44

  - changeSet:
      id: v45.00-043
      author: camsaul
      comment: Added 0.45.0 -- make Database details NOT NULL
      changes:
        - addNotNullConstraint:
            columnDataType: ${text.type}
            tableName: metabase_database
            columnName: details

  - changeSet:
      id: v45.00-044
      author: metamben
      comment: Added 0.45.0 -- create app permission graph revision table
      changes:
        - createTable:
            tableName: app_permission_graph_revision
            remarks: 'Used to keep track of changes made to app permissions.'
            columns:
              - column:
                  name: id
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: before
                  type: ${text.type}
                  remarks: 'Serialized JSON of the apps graph before the changes.'
                  constraints:
                    nullable: false
              - column:
                  name: after
                  type: ${text.type}
                  remarks: 'Serialized JSON of the apps graph after the changes.'
                  constraints:
                    nullable: false
              - column:
                  name: user_id
                  type: int
                  remarks: 'The ID of the admin who made this set of changes.'
                  constraints:
                    nullable: false
                    referencedTableName: core_user
                    referencedColumnNames: id
                    foreignKeyName: fk_app_permission_graph_revision_user_id
              - column:
                  name: created_at
                  type: ${timestamp_type}
                  remarks: 'The timestamp of when these changes were made.'
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: remark
                  type: ${text.type}
                  remarks: 'Optional remarks explaining why these changes were made.'

  # note: some migrations which only added and deleted tables within v45 were removed, hence an ID gap here

  # Add created_at to Collection
  - changeSet:
      id: v45.00-048
      author: camsaul
      comment: Added 0.45.0 -- add created_at to Collection
      changes:
        - addColumn:
            tableName: collection
            columns:
              - column:
                  name: created_at
                  type: ${timestamp_type}
                  remarks: Timestamp of when this Collection was created.
                  constraints:
                    nullable: false
                  defaultValueComputed: current_timestamp

  # Seed Collection created_at for Personal Collections with the date_joined of the User that owns them.
  - changeSet:
      id: v45.00-049
      author: camsaul
      comment: Added 0.45.0 -- set Collection.created_at to User.date_joined for Personal Collections
      validCheckSum: 8:df2097d176fad99c142c5dd75ce8a3db
      changes:
        - sql:
            dbms: postgresql
            sql: >-
              UPDATE collection c
              SET created_at = u.date_joined
              FROM core_user u
              WHERE c.personal_owner_id = u.id;
        - sql:
            dbms: mysql,mariadb
            sql: >-
              UPDATE collection c
              INNER JOIN core_user u
              ON c.personal_owner_id = u.id
              SET c.created_at = u.date_joined;
        - sql:
            dbms: h2
            sql: >-
              UPDATE collection c
              SET created_at = (
                SELECT u.date_joined
                FROM core_user u
                WHERE c.personal_owner_id = u.id
              )
              WHERE c.personal_owner_id IS NOT NULL;
      rollback: # nothing to roll back, but required for sql change types

  # seed Collection created_at based on the max created at of child objects
  #
  # At the time of this writing, the following Models can appear in a Collection:
  #
  # - App
  # - Card
  # - Dashboard
  # - Pulse
  # - Timeline
  # - NativeQuerySnippet
  - changeSet:
      id: v45.00-050
      author: camsaul
      validCheckSum: ANY
      comment: Added 0.45.0 -- seed Collection.created_at with value of oldest item for non-Personal Collections
      changes:
        - sql:
            dbms: postgresql
            sql: >-
              UPDATE collection c
              SET created_at = created_ats.created_at
              FROM (
                SELECT min(created_at) AS created_at, collection_id
                FROM (
                  SELECT created_at, collection_id FROM app                  UNION ALL
                  SELECT created_at, collection_id FROM report_card          UNION ALL
                  SELECT created_at, collection_id FROM report_dashboard     UNION ALL
                  SELECT created_at, collection_id FROM pulse                UNION ALL
                  SELECT created_at, collection_id FROM timeline             UNION ALL
                  SELECT created_at, collection_id FROM native_query_snippet
                ) created_ats
                GROUP BY collection_id
              ) created_ats
              WHERE c.id = created_ats.collection_id
                AND c.personal_owner_id IS NULL;
        - sql:
            dbms: mysql,mariadb
            sql: >-
              UPDATE collection c
              LEFT JOIN (
                SELECT min(created_at) AS created_at, collection_id
                FROM (
                  SELECT created_at, collection_id FROM app                  UNION ALL
                  SELECT created_at, collection_id FROM report_card          UNION ALL
                  SELECT created_at, collection_id FROM report_dashboard     UNION ALL
                  SELECT created_at, collection_id FROM pulse                UNION ALL
                  SELECT created_at, collection_id FROM timeline             UNION ALL
                  SELECT created_at, collection_id FROM native_query_snippet
                ) created_ats
                GROUP BY collection_id
              ) created_ats
              ON c.id = created_ats.collection_id
              SET c.created_at = created_ats.created_at
              WHERE c.personal_owner_id IS NULL
                AND created_ats.created_at IS NOT NULL;
        - sql:
            dbms: h2
            # I would have preferred using MERGE ... USING instead of WHERE EXISTS ... but it's broken in 1.4.197
            # because of https://github.com/h2database/h2database/issues/1034, which is fixed in 1.4.198. So this will
            # have to do for now, even if it's a little ugly.
            sql: >-
              WITH created_ats AS (
                SELECT min(created_at) AS created_at, collection_id
                FROM (
                  SELECT created_at, collection_id FROM app                  UNION ALL
                  SELECT created_at, collection_id FROM report_card          UNION ALL
                  SELECT created_at, collection_id FROM report_dashboard     UNION ALL
                  SELECT created_at, collection_id FROM pulse                UNION ALL
                  SELECT created_at, collection_id FROM timeline             UNION ALL
                  SELECT created_at, collection_id FROM native_query_snippet
                ) created_ats
                GROUP BY collection_id
              )
              UPDATE collection c
              SET created_at = (
                SELECT created_ats.created_at
                FROM created_ats
                WHERE created_ats.collection_id = c.id
              )
              WHERE EXISTS (
                SELECT created_ats.collection_id
                FROM created_ats
                WHERE c.id = created_ats.collection_id
                  AND c.personal_owner_id IS NULL
              );
      rollback: # rollback is a no-op for most seed migrations, but required for sql change type

  - changeSet:
      id: v45.00-051
      author: qnkhuat
      comment: >-
        Added 0.45.0 - modify type of collection_permission_graph_revision.after from text to ${text.type}
        on mysql,mariadb
      changes:
        - modifyDataType:
            tableName: collection_permission_graph_revision
            columnName: after
            newDataType: ${text.type}
      rollback:
        - modifyDataType:
            tableName: collection_permission_graph_revision
            columnName: after
            newDataType: text
      preConditions:
        - onFail: MARK_RAN
        - dbms:
            type: mysql,mariadb

  - changeSet:
      id: v45.00-052
      author: qnkhuat
      comment: >-
        Added 0.45.0 - modify type of collection_permission_graph_revision.before from text to ${text.type}
        on mysql,mariadb
      changes:
        - modifyDataType:
            tableName: collection_permission_graph_revision
            columnName: before
            newDataType: ${text.type}
      rollback:
        - modifyDataType:
            tableName: collection_permission_graph_revision
            columnName: before
            newDataType: text
      preConditions:
        - onFail: MARK_RAN
        - dbms:
            type: mysql,mariadb

  - changeSet:
      id: v45.00-053
      author: qnkhuat
      comment: >-
        Added 0.45.0 - modify type of collection_permission_graph_revision.remark from text to ${text.type}
        on mysql,mariadb
      changes:
        - modifyDataType:
            tableName: collection_permission_graph_revision
            columnName: remark
            newDataType: ${text.type}
      rollback:
        - modifyDataType:
            tableName: collection_permission_graph_revision
            columnName: remark
            newDataType: text
      preConditions:
        - onFail: MARK_RAN
        - dbms:
            type: mysql,mariadb

  - changeSet:
      id: v45.00-054
      author: qnkhuat
      comment: >-
        Added 0.45.0 - modify type of permissions_revision.after from text to ${text.type}
        on mysql,mariadb
      changes:
        - modifyDataType:
            tableName: permissions_revision
            columnName: after
            newDataType: ${text.type}
      rollback:
        - modifyDataType:
            tableName: permissions_revision
            columnName: after
            newDataType: text
      preConditions:
        - onFail: MARK_RAN
        - dbms:
            type: mysql,mariadb

  - changeSet:
      id: v45.00-055
      author: qnkhuat
      comment: >-
        Added 0.45.0 - modify type of permissions_revision.before from text to ${text.type}
        on mysql,mariadb
      changes:
        - modifyDataType:
            tableName: permissions_revision
            columnName: before
            newDataType: ${text.type}
      rollback:
        - modifyDataType:
            tableName: permissions_revision
            columnName: before
            newDataType: text
      preConditions:
        - onFail: MARK_RAN
        - dbms:
            type: mysql,mariadb

  - changeSet:
      id: v45.00-056
      author: qnkhuat
      comment: >-
        Added 0.45.0 - modify type of permissions_revision.remark from text to ${text.type}
        on mysql,mariadb
      changes:
        - modifyDataType:
            tableName: permissions_revision
            columnName: remark
            newDataType: ${text.type}
      rollback:
        - modifyDataType:
            tableName: permissions_revision
            columnName: remark
            newDataType: text
      preConditions:
        - onFail: MARK_RAN
        - dbms:
            type: mysql,mariadb

  - changeSet:
      id: v45.00-057
      author: qnkhuat
      comment: >-
        Added 0.45.0 - modify type of secret.value from blob to longblob
        on mysql,mariadb
      changes:
        - modifyDataType:
            tableName: secret
            columnName: value
            newDataType: longblob
      rollback:
        - modifyDataType:
            tableName: secret
            columnName: value
            newDataType: ${blob.type}
      preConditions:
        - onFail: MARK_RAN
        - dbms:
            type: mysql,mariadb

  - changeSet:
      id: v46.00-000
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - createTable:
            tableName: implicit_action
            remarks: An action with dynamic parameters based on the underlying model
            columns:
              - column:
                  name: action_id
                  type: int
                  remarks: The associated action
                  constraints:
                    nullable: false
                    referencedTableName: action
                    referencedColumnNames: id
                    foreignKeyName: fk_implicit_action_action_id
                    deleteCascade: true
              - column:
                  name: kind
                  type: ${text.type}
                  remarks: The kind of implicit action create/update/delete
                  constraints:
                    nullable: false

  - changeSet:
      id: v46.00-001
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - addColumn:
            tableName: action
            columns:
              - column:
                  name: model_id
                  remarks: The associated model
                  type: int

  - changeSet:
      id: v46.00-002
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - addColumn:
            tableName: action
            columns:
              - column:
                  name: name
                  remarks: The name of the action
                  type: varchar(254)

  - changeSet:
      id: v46.00-003
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - addColumn:
            tableName: action
            columns:
              - column:
                  name: description
                  remarks: The description of the action
                  type: ${text.type}

  - changeSet:
      id: v46.00-004
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - addColumn:
            tableName: action
            columns:
              - column:
                  name: parameters
                  remarks: The saved parameters for this action
                  type: ${text.type}

  - changeSet:
      id: v46.00-005
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - addColumn:
            tableName: action
            columns:
              - column:
                  name: parameter_mappings
                  remarks: The saved parameter mappings for this action
                  type: ${text.type}
  - changeSet:
      id: v46.00-006
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - addColumn:
            tableName: action
            columns:
              - column:
                  name: visualization_settings
                  remarks: The UI visualization_settings for this action
                  type: ${text.type}

  - changeSet:
      id: v46.00-007
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - addForeignKeyConstraint:
            baseTableName: action
            baseColumnNames: model_id
            referencedTableName: report_card
            referencedColumnNames: id
            constraintName: fk_action_model_id

  - changeSet:
      id: v46.00-008
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - addColumn:
            tableName: query_action
            columns:
              - column:
                  name: database_id
                  remarks: The associated database
                  type: int

  - changeSet:
      id: v46.00-009
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - addColumn:
            tableName: query_action
            columns:
              - column:
                  name: dataset_query
                  remarks: The MBQL writeback query
                  type: ${text.type}

  - changeSet:
      id: v46.00-010
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - addForeignKeyConstraint:
            baseTableName: query_action
            baseColumnNames: database_id
            referencedTableName: metabase_database
            referencedColumnNames: id
            constraintName: fk_query_action_database_id
            onDelete: CASCADE

  - changeSet:
      id: v46.00-011
      author: snoe
      validCheckSum: ANY
      comment: Added 0.46.0 - Unify action representation
      changes:
        - sql:
            dbms: mysql,mariadb
            sql: >-
              ALTER TABLE query_action DROP PRIMARY KEY, ADD PRIMARY KEY pk_query_action (action_id);
        - sql:
            dbms: h2
            sql: >-
              ALTER TABLE query_action DROP PRIMARY KEY;
              ALTER TABLE query_action ADD CONSTRAINT pk_query_action PRIMARY KEY (action_id);
        - sql:
            dbms: postgresql
            sql: >-
              ALTER TABLE query_action DROP CONSTRAINT pk_query_action;
              ALTER TABLE query_action ADD CONSTRAINT pk_query_action PRIMARY KEY (action_id);
      rollback:
        - sql:
            dbms: mysql,mariadb
            sql: >-
              ALTER TABLE query_action DROP PRIMARY KEY, ADD PRIMARY KEY pk_query_action (action_id, card_id);
        - sql:
            dbms: h2
            sql: >-
              ALTER TABLE query_action DROP CONSTRAINT fk_query_action_ref_action_id;
              ALTER TABLE query_action DROP PRIMARY KEY;
              ALTER TABLE query_action ADD CONSTRAINT fk_query_action_ref_action_id FOREIGN KEY (action_id) REFERENCES action(id) ON DELETE CASCADE;
              ALTER TABLE query_action ADD CONSTRAINT pk_query_action PRIMARY KEY (action_id, card_id);
        - sql:
            dbms: postgresql
            sql: >-
              ALTER TABLE query_action DROP CONSTRAINT pk_query_action;
              ALTER TABLE query_action ADD CONSTRAINT pk_query_action PRIMARY KEY (action_id, card_id);

  - changeSet:
      id: v46.00-012
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - dropNotNullConstraint:
            tableName: query_action
            columnDataType: int
            columnName: card_id

  # migration for developers and internal use of actions created in 45 during a short period.
  - changeSet:
      id: v46.00-013
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      validCheckSum: ANY
      changes:
        - sql:
            sql: >-
              INSERT INTO action (type, model_id, name)
              SELECT 'implicit', card_id, slug
              FROM model_action
              WHERE action_id is null AND slug in ('insert','update','delete');

              INSERT INTO implicit_action (action_id, kind)
              SELECT
                id,
                case name
                  when 'insert' then 'row/create'
                  when 'update' then 'row/update'
                  when 'delete' then 'row/delete'
                end
              FROM action
              WHERE type = 'implicit';

              UPDATE action
              SET model_id = (SELECT card_id
                              FROM model_action
                              WHERE model_action.action_id = action.id)
              WHERE model_id is null;

              DELETE FROM action WHERE model_id is null;

              UPDATE report_dashboardcard
              SET action_id = (SELECT action.id
                               FROM action
                               LEFT JOIN implicit_action ON implicit_action.action_id = action.id
                               WHERE action.model_id = report_dashboardcard.card_id
                               AND coalesce((
                                  CASE implicit_action.kind
                                     WHEN 'row/create' THEN 'insert'
                                     WHEN 'row/delete' THEN 'delete'
                                     WHEN 'row/update' THEN 'update'
                                  END), ('action_' || action.id)) =
                                  substring(report_dashboardcard.visualization_settings,
                                    position('"action_slug":"' in report_dashboardcard.visualization_settings)+15,
                                    position('"' in
                                      substring(report_dashboardcard.visualization_settings,
                                        position('"action_slug":"' in visualization_settings)+15)) - 1))
              WHERE report_dashboardcard.visualization_settings like '%action_slug%';

              UPDATE query_action SET
                dataset_query = (select dataset_query from report_card where report_card.id = query_action.card_id),
                database_id = (select database_id from report_card where report_card.id = query_action.card_id);

              UPDATE action SET
                name = (
                  select name
                  from query_action
                  inner join report_card on report_card.id = query_action.card_id
                  where query_action.action_id = action.id),
                description = (
                  select description
                  from query_action
                  inner join report_card on report_card.id = query_action.card_id
                  where query_action.action_id = action.id),
                parameters = (
                  select parameters
                  from query_action
                  inner join report_card on report_card.id = query_action.card_id
                  where query_action.action_id = action.id),
                parameter_mappings = (
                  select parameter_mappings
                  from query_action
                  inner join report_card on report_card.id = query_action.card_id
                  where query_action.action_id = action.id),
                visualization_settings = (
                  select visualization_settings
                  from query_action
                  inner join report_card on report_card.id = query_action.card_id
                  where query_action.action_id = action.id)
              WHERE type = 'query';
      rollback: # no-op, we do not care to preserve actions from 46->45

  - changeSet:
      id: v46.00-014
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - dropForeignKeyConstraint:
            baseTableName: query_action
            constraintName: fk_query_action_ref_card_id
      rollback:

  - changeSet:
      id: v46.00-015
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - dropColumn:
            tableName: query_action
            columnName: card_id

      rollback:
        - addColumn:
            tableName: query_action
            columns:
              - column:
                  name: card_id
                  type: int
                  remarks: The related card
                  constraints:
                    nullable: false
                    referencedTableName: report_card
                    referencedColumnNames: id
                    foreignKeyName: fk_query_action_ref_card_id
                    deleteCascade: true

  - changeSet:
      id: v46.00-016
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - sql:
            sql: >-
              DELETE FROM report_card
              WHERE is_write = true;

              DELETE FROM model_action;
      rollback: # we do not care to preserve actions from 46->45
        - sql:
            sql: >-
              DELETE FROM report_dashboardcard WHERE action_id is not null;
              DELETE FROM action;

  - changeSet:
      id: v46.00-017
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - dropColumn:
            tableName: http_action
            columnName: name
      rollback:
        - addColumn:
            tableName: http_action
            columns:
              - column:
                  name: name
                  type: varchar(254)
                  remarks: The name of this action
                  constraints:
                    nullable: false

  - changeSet:
      id: v46.00-018
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - dropColumn:
            tableName: http_action
            columnName: description
      rollback:
        - addColumn:
            tableName: http_action
            columns:
              - column:
                  name: description
                  type: ${text.type}
                  remarks: An optional description for this action

  - changeSet:
      id: v46.00-019
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - dropColumn:
            tableName: report_card
            columnName: is_write
      rollback:
        - addColumn:
            columns:
              - column:
                  name: is_write
                  type: boolean
                  defaultValueBoolean: false
                  remarks: Indicates that this query will perform writes to a db
                  constraints:
                    nullable: false
            tableName: report_card

  - changeSet:
      id: v46.00-020
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - addNotNullConstraint:
            tableName: query_action
            columnName: database_id
            columnDataType: int

  - changeSet:
      id: v46.00-021
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - addNotNullConstraint:
            tableName: query_action
            columnName: dataset_query
            columnDataType: ${text.type}

  - changeSet:
      id: v46.00-022
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - addNotNullConstraint:
            tableName: query_action
            columnName: dataset_query
            columnDataType: ${text.type}

  - changeSet:
      id: v46.00-023
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - addNotNullConstraint:
            tableName: action
            columnName: model_id
            columnDataType: int

  - changeSet:
      id: v46.00-024
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - addNotNullConstraint:
            tableName: action
            columnName: name
            columnDataType: varchar(254)

  - changeSet:
      id: v46.00-025
      author: snoe
      comment: Added 0.46.0 - Unify action representation
      changes:
        - dropTable:
            tableName: model_action
      rollback:
        - createTable:
            tableName: model_action
            remarks: Ties actions to models
            columns:
              - column:
                  name: id
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: entity_id
                  type: char(21)
                  remarks: Random NanoID tag for unique identity.
                  constraints:
                    nullable: false
                    unique: true
              - column:
                  name: slug
                  type: varchar(254)
                  remarks: The referenceable name for this action
                  constraints:
                    nullable: false
              - column:
                  name: card_id
                  type: int
                  remarks: The associated model
                  constraints:
                    nullable: false
                    referencedTableName: report_card
                    referencedColumnNames: id
                    foreignKeyName: fk_model_action_ref_card_id
                    deleteCascade: true
              - column:
                  name: action_id
                  type: int
                  remarks: The associated action
                  constraints:
                    nullable: true
                    referencedTableName: action
                    referencedColumnNames: id
                    foreignKeyName: fk_model_action_ref_action_id
                    deleteCascade: true
              - column:
                  name: requires_pk
                  remarks: Indicates that the primary key(s) need to be passed in as parameters
                  type: boolean
                  defaultValueBoolean: false
                  constraints:
                    nullable: false
              - column:
                  name: parameter_mappings
                  type: ${text.type}
                  remarks: Mappings for primary keys to action parameters
              - column:
                  name: visualization_settings
                  type: ${text.type}
                  remarks: Settings for rendering the action

  - changeSet:
      id: v46.00-026
      author: metamben
      comment: Added 0.46.0 -- add field for tracking DBMS versions
      changes:
        - addColumn:
            tableName: metabase_database
            columns:
              - column:
                  name: dbms_version
                  type: ${text.type}
                  remarks: 'A JSON object describing the flavor and version of the DBMS.'

  - changeSet:
      id: v46.00-027
      author: snoe
      comment: Added 0.46.0 -- add last_used_at to FieldValues
      changes:
        - addColumn:
            tableName: metabase_fieldvalues
            columns:
              - column:
                  name: last_used_at
                  type: ${timestamp_type}
                  remarks: Timestamp of when these FieldValues were last used.
                  constraints:
                    nullable: false
                  defaultValueComputed: current_timestamp

  - changeSet:
      id: v46.00-028
      author: tsmacdonald
      comment: Added 0.46.0 -- Join table connecting cards to dashboards/cards's parameters that need custom filter values from the card
      changes:
        - createTable:
            tableName: parameter_card
            remarks: "Join table connecting cards to entities (dashboards, other cards, etc.) that use the values generated by the card for filter values"
            columns:
              - column:
                  name: id
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: updated_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  remarks: "most recent modification time"
                  constraints:
                    nullable: false
              - column:
                  name: created_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  remarks: "creation time"
                  constraints:
                    nullable: false
              - column:
                  name: card_id
                  type: int
                  remarks: "ID of the card generating the values"
                  constraints:
                    nullable: false
              - column:
                  name: parameterized_object_type
                  type: varchar(32)
                  remarks: "Type of the entity consuming the values (dashboard, card, etc.)"
                  constraints:
                    nullable: false
              - column:
                  name: parameterized_object_id
                  type: int
                  remarks: "ID of the entity consuming the values"
                  constraints:
                    nullable: false
              - column:
                  name: parameter_id
                  type: varchar(32)
                  remarks: "The parameter ID"
                  constraints:
                    nullable: false

  # Make Dimension <=> Field a 1t1 relationship. Replace unique field_id + name with unique field_id.
  # See issue #27054.
  - changeSet:
      id: v46.00-029
      author: camsaul
      comment: Make Dimension <=> Field a 1t1 relationship. Drop unique constraint on field_id + name. (1/3)
      changes:
        - dropUniqueConstraint:
            tableName: dimension
            constraintName: unique_dimension_field_id_name
      rollback:
        - addUniqueConstraint:
            tableName: dimension
            constraintName: unique_dimension_field_id_name
            columnNames: field_id, name

  - changeSet:
      id: v46.00-030
      author: camsaul
      comment: Make Dimension <=> Field a 1t1 relationship. Delete duplicate entries. (2/3)
      changes:
        - sql:
            # Which rows to keep is not 100% clear. I decided to keep newer entries, by ID. I considered keeping new
            # entries by `updated_at` but the SQL for doing that across the three databases was such a hairball and
            # having duplicates in the first place was such an edge case I decided this approach is fine for now. The
            # `row_number()` window function would have made this easier to do but we haven't merged H2 v2 yet.
            #
            # Writing the query with these unnecessary subselects is stupid, but MySQL 5.7 doesn't work without them.
            # See https://metaboat.slack.com/archives/CKZEMT1MJ/p1670624514320419 for more info
            sql: >-
              DELETE FROM dimension
              WHERE field_id IN (
                SELECT field_id
                FROM (
                  SELECT field_id
                  FROM dimension
                  GROUP BY field_id
                  HAVING COUNT(*) > 1
                ) duplicates
              )
              AND id NOT IN (
                SELECT id FROM (
                  SELECT max(id) AS id
                  FROM dimension
                  GROUP BY field_id
                ) most_recents
              );
      rollback: # don't need to roll back anything, deleting duplicate entries doesn't need to be reversed.

  - changeSet:
      id: v46.00-031
      author: camsaul
      comment: Make Dimension <=> Field a 1t1 relationship. Add unique constraint on field_id. (3/3)
      changes:
        - addUniqueConstraint:
            tableName: dimension
            columnNames: field_id
            constraintName: unique_dimension_field_id
        # this change can roll back automatically.

  - changeSet:
      id: v46.00-032
      author: tsmacdonald
      comment: Added 0.46.0 -- Unique parameter_card
      changes:
        - addUniqueConstraint:
            tableName: parameter_card
            columnNames: parameterized_object_id, parameterized_object_type, parameter_id
            constraintName: unique_parameterized_object_card_parameter

  - changeSet:
      id: v46.00-033
      author: tsmacdonald
      comment: Added 0.46.0 -- parameter_card index on connected object
      changes:
        - createIndex:
            tableName: parameter_card
            columns:
              - column:
                  name: parameterized_object_id
            indexName: idx_parameter_card_parameterized_object_id

  - changeSet:
      id: v46.00-034
      author: tsmacdonald
      comment: Added 0.46.0 -- parameter_card index on connected card
      changes:
        - createIndex:
            tableName: parameter_card
            columns:
              - column:
                  name: card_id
            indexName: idx_parameter_card_card_id

  - changeSet:
      id: v46.00-035
      author: tsmacdonald
      comment: Added 0.46.0 - parameter_card.card_id foreign key
      changes:
        - addForeignKeyConstraint:
            baseTableName: parameter_card
            baseColumnNames: card_id
            referencedTableName: report_card
            referencedColumnNames: id
            constraintName: fk_parameter_card_ref_card_id
            onDelete: CASCADE

  - changeSet:
      id: v46.00-036
      author: metamben
      comment: App containers are removed in 0.46.0
      changes:
        - dropTable:
            tableName: app_permission_graph_revision
      rollback:
        - createTable:
            tableName: app_permission_graph_revision
            remarks: 'Used to keep track of changes made to app permissions.'
            columns:
              - column:
                  name: id
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: before
                  type: ${text.type}
                  remarks: 'Serialized JSON of the apps graph before the changes.'
                  constraints:
                    nullable: false
              - column:
                  name: after
                  type: ${text.type}
                  remarks: 'Serialized JSON of the apps graph after the changes.'
                  constraints:
                    nullable: false
              - column:
                  name: user_id
                  type: int
                  remarks: 'The ID of the admin who made this set of changes.'
                  constraints:
                    nullable: false
                    referencedTableName: core_user
                    referencedColumnNames: id
                    foreignKeyName: fk_app_permission_graph_revision_user_id
              - column:
                  name: created_at
                  type: ${timestamp_type}
                  remarks: 'The timestamp of when these changes were made.'
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: remark
                  type: ${text.type}
                  remarks: 'Optional remarks explaining why these changes were made.'

  - changeSet:
      id: v46.00-037
      author: metamben
      comment: App pages are removed in 0.46.0
      changes:
        - dropColumn:
            tableName: report_dashboard
            columnName: is_app_page
      rollback:
        - addColumn:
            columns:
              - column:
                  name: is_app_page
                  type: boolean
                  defaultValueBoolean: false
                  remarks: Indicates that this dashboard serves as a page of an app
                  constraints:
                    nullable: false
            tableName: report_dashboard

  - changeSet:
      id: v46.00-038
      author: metamben
      comment: App containers are removed in 0.46.0
      changes:
        - dropTable:
            tableName: app
      rollback:
        - createTable:
            tableName: app
            remarks: Defines top level concerns for App
            columns:
              - column:
                  name: id
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: entity_id
                  type: char(21)
                  remarks: Random NanoID tag for unique identity.
                  constraints:
                    nullable: false
                    unique: true
              - column:
                  name: collection_id
                  type: int
                  remarks: The associated collection
                  constraints:
                    nullable: false
                    referencedTableName: collection
                    referencedColumnNames: id
                    foreignKeyName: fk_app_ref_collection_id
                    deleteCascade: true
                    unique: true
              - column:
                  name: dashboard_id
                  type: int
                  remarks: The homepage of the app
              - column:
                  remarks: JSON for the navigation items of the app
                  name: nav_items
                  type: ${text.type}
              - column:
                  remarks: JSON for frontend related additions, such as styling
                  name: options
                  type: ${text.type}
              - column:
                  remarks: The timestamp of when the app was created
                  name: created_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  remarks: The timestamp of when the app was updated
                  name: updated_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
        - addForeignKeyConstraint:
            baseTableName: app
            baseColumnNames: dashboard_id
            referencedTableName: report_dashboard
            referencedColumnNames: id
            constraintName: fk_app_ref_dashboard_id
            onDelete: SET NULL

  - changeSet:
      id: v46.00-039
      author: qnkhuat
      comment: Added 0.46.0 - add entity_id to parameter_card
      changes:
        - addColumn:
            columns:
            - column:
                remarks: Random NanoID tag for unique identity.
                name: entity_id
                type: char(21)
                constraints:
                  nullable: true
                  unique: true
            tableName: parameter_card

  - changeSet:
      id: v46.00-040
      author: tsmacdonald
      comment: Added 0.46.0 -- Bump default dashcard size to 4x4
      changes:
        - addDefaultValue:
            tableName: report_dashboardcard
            columnName: size_x
            defaultValue: 4

  - changeSet:
      id: v46.00-041
      author: tsmacdonald
      comment: Added 0.46.0 -- Bump default dashcard size to 4x4
      changes:
        - addDefaultValue:
            tableName: report_dashboardcard
            columnName: size_y
            defaultValue: 4

  - changeSet:
      id: v46.00-042
      author: tsmacdonald
      comment: Added 0.46.0 -- index query_execution.executor_id
      changes:
        - createIndex:
            tableName: query_execution
            columns:
              - column:
                  name: executor_id
            indexName: idx_query_execution_executor_id

  - changeSet:
      id: v46.00-043
      author: tsmacdonald
      comment: Added 0.46.0 -- index query_execution.context
      changes:
        - createIndex:
            tableName: query_execution
            columns:
              - column:
                  name: context
            indexName: idx_query_execution_context

  - changeSet:
      id: v46.00-045
      author: calherries
      comment: Added 0.46.0 -- add public_uuid to action.
      changes:
        - addColumn:
            tableName: action
            columns:
              - column:
                  name: public_uuid
                  type: char(36)
                  remarks: 'Unique UUID used to in publically-accessible links to this Action.'
                  constraints:
                    unique: true

  - changeSet:
      id: v46.00-051
      author: calherries
      comment: Added 0.46.0 -- drop defaults for dashcard's position and size
      changes:
        - dropDefaultValue:
            tableName: report_dashboardcard
            columnName: row
      rollback:
        - addDefaultValue:
            tableName: report_dashboardcard
            columnName: row
            defaultValueNumeric: 4

  - changeSet:
      id: v46.00-052
      author: calherries
      comment: Added 0.46.0 -- drop defaults for dashcard's position and size
      changes:
        - dropDefaultValue:
            tableName: report_dashboardcard
            columnName: col
      rollback:
        - addDefaultValue:
            tableName: report_dashboardcard
            columnName: col
            defaultValueNumeric: 4

  - changeSet:
      id: v46.00-053
      author: calherries
      comment: Added 0.46.0 -- drop defaults for dashcard's position and size
      changes:
        - dropDefaultValue:
            tableName: report_dashboardcard
            columnName: size_x
      rollback:
        - addDefaultValue:
            tableName: report_dashboardcard
            columnName: size_x
            defaultValueNumeric: 4

  - changeSet:
      id: v46.00-054
      author: calherries
      comment: Added 0.46.0 -- drop defaults for dashcard's position and size
      changes:
        - dropDefaultValue:
            tableName: report_dashboardcard
            columnName: size_y
      rollback:
        - addDefaultValue:
            tableName: report_dashboardcard
            columnName: size_y
            defaultValueNumeric: 4

  - changeSet:
      id: v46.00-055
      author: calherries
      comment: Added 0.46.0 -- add made_public_by_id
      changes:
        - addColumn:
            tableName: action
            columns:
              - column:
                  name: made_public_by_id
                  type: int
                  remarks: 'The ID of the User who first publically shared this Action.'

  - changeSet:
      id: v46.00-056
      author: calherries
      comment: Added 0.46.0 -- add public_uuid and made_public_by_id to action. public_uuid is indexed
      changes:
        - createIndex:
            tableName: action
            indexName: idx_action_public_uuid
            columns:
              column:
                name: public_uuid

  - changeSet:
      id: v46.00-057
      author: dpsutton
      comment: Added 0.46.0 -- parameter_card.parameter_id long enough to hold a uuid
      changes:
        - modifyDataType:
            tableName: parameter_card
            columnName: parameter_id
            newDataType: varchar(36)
      rollback: #nothing to do, char(32) or char(36) are equivalent

  - changeSet:
      id: v46.00-058
      author: calherries
      comment: Added 0.46.0 -- add FK constraint for action.made_public_by_id with core_user.id
      changes:
        - addForeignKeyConstraint:
            baseTableName: action
            baseColumnNames: made_public_by_id
            referencedTableName: core_user
            referencedColumnNames: id
            constraintName: fk_action_made_public_by_id
            onDelete: CASCADE

  - changeSet:
      id: v46.00-059
      author: tsmacdonald
      comment: Added 0.46.0 -- add actions.creator_id
      changes:
        - addColumn:
            tableName: action
            columns:
              - column:
                  name: creator_id
                  type: int
                  remarks: 'The user who created the action'
      rollback:
        - dropColumn:
            tableName: action
            columnName: creator_id

  - changeSet:
      id: v46.00-060
      author: tsmacdonald
      comment: Added 0.46.0 -- action.creator_id index
      changes:
        - createIndex:
            tableName: action
            columns:
              - column:
                  name: creator_id
            indexName: idx_action_creator_id
      rollback:
        - dropIndex:
            tableName: action
            indexName: idx_action_creator_id

  - changeSet:
      id: v46.00-061
      author: tsmacdonald
      comment: Added 0.46.0 -- action.creator_id index
      changes:
        - addForeignKeyConstraint:
            baseTableName: action
            baseColumnNames: creator_id
            referencedTableName: core_user
            referencedColumnNames: id
            constraintName: fk_action_creator_id
            nullable: false

  - changeSet:
      id: v46.00-062
      author: tsmacdonald
      comment: Added 0.46.0 -- add actions.archived
      changes:
        - addColumn:
            tableName: action
            columns:
              - column:
                  name: archived
                  type: boolean
                  defaultValueBoolean: false
                  remarks: 'Whether or not the action has been archived'
                  constraints:
                    nullable: false
      rollback:
        - dropColumn:
            tableName: action
            columnName: archived

  - changeSet:
      id: v46.00-064
      author: noahmoss
      comment: Added 0.46.0 -- rename `group_table_access_policy` to `sandboxes`
      changes:
        - renameTable:
            newTableName: sandboxes
            oldTableName: group_table_access_policy

  - changeSet:
      id: v46.00-065
      author: noahmoss
      comment: Added 0.46.0 -- add `permission_id` to `sandboxes`
      changes:
      - addColumn:
          tableName: sandboxes
          columns:
          - column:
              name: permission_id
              type: int
              remarks: The ID of the corresponding permissions path for this sandbox

  - changeSet:
      id: v46.00-070
      author: calherries
      comment: Added 0.46.0 - add entity_id column to action
      changes:
        - addColumn:
            columns:
            - column:
                remarks: Random NanoID tag for unique identity.
                name: entity_id
                type: char(21)
                constraints:
                  nullable: true
                  unique: true
            tableName: action

  - changeSet:
      id: v46.00-074
      author: metamben
      comment: Added 0.46.0 -- increase precision of updated_at of report_card
      changes:
        - modifyDataType:
            tableName: report_card
            columnName: updated_at
            newDataType: ${timestamp_type}
      rollback:
        - modifyDataType:
            tableName: report_card
            columnName: updated_at
            newDataType: DATETIME

  - changeSet:
      id: v46.00-079
      author: john-metabase
      comment: Added 0.46.0 -- migrates Databases using deprecated and removed presto driver to presto-jdbc
      changes:
        - sql: UPDATE metabase_database SET engine = 'presto-jdbc' WHERE engine = 'presto'
      rollback: # nothing to do, since we don't know which drivers used to be presto

  - changeSet:
      id: v46.00-080
      author: noahmoss
      comment: Migrate data permission paths from v1 to v2 (splitting them into separate data and query permissions)
      changes:
        - customChange:
            class: "metabase.db.custom_migrations.SplitDataPermissions"

  - changeSet:
      id: v46.00-084
      author: qnkhuat
      comment: Added 0.46.0 - CASCADE delete for action.model_id
      changes:
        - dropForeignKeyConstraint:
            baseTableName: action
            constraintName: fk_action_model_id
      rollback:
        - addForeignKeyConstraint:
            baseTableName: action
            baseColumnNames: model_id
            referencedTableName: report_card
            referencedColumnNames: id
            constraintName: fk_action_model_id
            onDelete: CASCADE

  - changeSet:
      id: v46.00-085
      author: qnkhuat
      comment: Added 0.46.0 - CASCADE delete for action.model_id
      changes:
        - addForeignKeyConstraint:
            baseTableName: action
            baseColumnNames: model_id
            referencedTableName: report_card
            referencedColumnNames: id
            constraintName: fk_action_model_id
            onDelete: CASCADE

  - changeSet:
      id: v46.00-086
      author: calherries
      comment: Added 0.46.0 - Delete the abandonment email task
      changes:
        - customChange:
            class: "metabase.db.custom_migrations.DeleteAbandonmentEmailTask"

  - changeSet:
      id: v46.00-088
      author: noahmoss
      comment: Added 0.46.5 -- backfill `permission_id` values in `sandboxes`. This is a fixed verison of v46.00-066
               which has been removed, since it had a bug that blocked a customer from upgrading.
      changes:
        - sql: >-
            UPDATE sandboxes s
            SET permission_id = (
              SELECT p.id
              FROM permissions p
              WHERE
                p.object = CONCAT('/db/',
                                  (SELECT t.db_id FROM metabase_table t WHERE t.id = s.table_id),
                                  '/schema/',
                                  (SELECT t.schema FROM metabase_table t WHERE t.id = s.table_id),
                                  '/table/',
                                  s.table_id,
                                  '/query/segmented/')
                AND p.group_id = s.group_id
              LIMIT 1
            )
            WHERE permission_id IS NULL;
      rollback:
        # not required, new values added here do not need to be dropped

  - changeSet:
      id: v46.00-089
      author: noahmoss
      comment: Added 0.46.5 -- remove orphaned entries in `sandboxes`
      changes:
        - sql: >-
            DELETE FROM sandboxes
            WHERE permission_id IS NULL;
      rollback: # not required, orphaned sandboxes should not be re-added to the DB

  - changeSet:
      id: v46.00-090
      author: noahmoss
      comment: Add foreign key constraint on sandboxes.permission_id
      # This is a revised version of a prior migration (v46.00-075) so it may fail due to the FK constriant already existing
      failOnError: false
      changes:
        - addForeignKeyConstraint:
            baseTableName: sandboxes
            baseColumnNames: permission_id
            referencedTableName: permissions
            referencedColumnNames: id
            constraintName: fk_sandboxes_ref_permissions
            onDelete: CASCADE

  - changeSet:
      id: v47.00-001
      author: calherries
      comment: Added 0.47.0 -- set base-type to type/JSON for JSON database-types for postgres and mysql
      changes:
        - sql:
            sql: >-
              UPDATE metabase_field f
              SET base_type = 'type/JSON'
              WHERE EXISTS (
                SELECT *
                FROM metabase_database d
                JOIN metabase_table t ON t.db_id = d.id
                WHERE f.table_id = t.id
                  AND lower(f.database_type) in ('json', 'jsonb')
                  AND d.engine in ('postgres', 'mysql')
              )
      rollback:
        - sql:
            dbms: postgresql
            sql: >-
              UPDATE metabase_field f
              SET base_type = case when d.engine = 'postgres' then 'type/Structured' else 'type/SerializedJSON' end
              FROM metabase_database d
              JOIN metabase_table t ON t.db_id = d.id
              WHERE f.table_id = t.id
                AND lower(f.database_type) in ('json', 'jsonb')
                AND d.engine in ('postgres', 'mysql')
        - sql:
            dbms: mysql,mariadb
            sql: >-
              UPDATE metabase_field f
              JOIN metabase_table t ON f.table_id = t.id
              JOIN metabase_database d ON t.db_id = d.id
              SET base_type = case when d.engine = 'postgres' then 'type/Structured' else 'type/SerializedJSON' end
              WHERE lower(f.database_type) in ('json', 'jsonb')
                AND d.engine in ('postgres', 'mysql')
        - sql:
            dbms: h2
            sql: >-
              MERGE INTO metabase_field f
              USING (
                SELECT f.id, case when d.engine = 'postgres' then 'type/Structured' else 'type/SerializedJSON' end as base_type
                FROM metabase_field f
                JOIN metabase_table t ON f.table_id = t.id
                JOIN metabase_database d ON t.db_id = d.id
                WHERE lower(f.database_type) in ('json', 'jsonb')
                  AND d.engine in ('postgres', 'mysql')
              ) as updates
              ON f.id = updates.id
              WHEN MATCHED THEN
                UPDATE SET f.base_type = updates.base_type;

  - changeSet:
      id: v47.00-002
      author: calherries
      comment: Added 0.47.0 - Add json_unfolding column to metabase_field
      changes:
        - addColumn:
            columns:
            - column:
                remarks: 'Enable/disable JSON unfolding for a field'
                name: json_unfolding
                type: boolean
                defaultValueBoolean: false
                constraints:
                  nullable: false
            tableName: metabase_field

  - changeSet:
      id: v47.00-003
      author: calherries
      comment: Added 0.47.0 - Populate metabase_field.json_unfolding based on base_type
      changes:
        - sql:
            sql: >-
              UPDATE metabase_field
              SET json_unfolding = true
              WHERE base_type = 'type/JSON';
      rollback: # nothing to do, since json_unfolding is new in 47

  - changeSet:
      id: v47.00-004
      author: qnkhuat
      comment: Added 0.47.0 - Add auto_incremented to metabase_field
      changes:
        - addColumn:
            tableName: metabase_field
            columns:
              - column:
                  name: database_is_auto_increment
                  type: boolean
                  remarks: Indicates this field is auto incremented
                  defaultValueBoolean: false
                  constraints:
                    nullable: false

  - changeSet:
      id: v47.00-005
      author: winlost
      comment: Added 0.47.0 - Add auto_apply_filters to dashboard
      changes:
        - addColumn:
            tableName: report_dashboard
            columns:
              - column:
                  name: auto_apply_filters
                  type: boolean
                  remarks: Whether or not to auto-apply filters on a dashboard
                  defaultValueBoolean: true
                  constraints:
                    nullable: false

  - changeSet:
      id: v47.00-006
      author: qnkhuat
      comment: Added 0.47.0 - Add dashboard_tab table
      changes:
        - createTable:
            tableName: dashboard_tab
            remarks: "Join table connecting dashboard to dashboardcards"
            columns:
              - column:
                  name: id
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: dashboard_id
                  type: int
                  remarks: The dashboard that a tab is on
                  constraints:
                    nullable: false
                    referencedTableName: report_dashboard
                    referencedColumnNames: id
                    foreignKeyName: fk_dashboard_tab_ref_dashboard_id
                    deleteCascade: true
              - column:
                  name: name
                  remarks: Displayed name of the tab
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  name: position
                  remarks: Position of the tab with respect to others tabs in dashboard
                  type: int
                  constraints:
                    nullable: false
              - column:
                  name: entity_id
                  type: char(21)
                  remarks: Random NanoID tag for unique identity.
                  constraints:
                    nullable: false
                    unique: true
              - column:
                  name: created_at
                  remarks: The timestamp at which the tab was created
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  remarks: The timestamp at which the tab was last updated
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false

  - changeSet:
      id: v47.00-007
      author: qnkhuat
      comment: Added 0.47.0 -- add report_dashboardcard.dashboard_tab_id
      changes:
        - addColumn:
            tableName: report_dashboardcard
            columns:
              - column:
                  name: dashboard_tab_id
                  type: int
                  remarks: The referenced tab id that dashcard is on, it's nullable for dashboard with no tab
                  constraints:
                    nullable: true

  - changeSet:
      id: v47.00-008
      author: qnkhuat
      comment: Added 0.47.0 -- add report_dashboardcard.dashboard_tab_id fk constraint
      changes:
        - addForeignKeyConstraint:
            baseTableName: report_dashboardcard
            baseColumnNames: dashboard_tab_id
            referencedTableName: dashboard_tab
            referencedColumnNames: id
            constraintName: fk_report_dashboardcard_ref_dashboard_tab_id
            deleteCascade: true

  - changeSet:
      id: v47.00-009
      author: qwef
      comment: Added 0.47.0 - Replace user google_auth and ldap_auth columns with sso_source values
      changes:
        - sql:
            sql: UPDATE core_user SET sso_source = 'google' WHERE google_auth = true;
      rollback:
        - sql:
            sql: UPDATE core_user SET google_auth = true, sso_source = NULL WHERE sso_source = 'google';

  - changeSet:
      id: v47.00-010
      author: tsmacdonald
      comment: Added 0.47.0 - Make metabase_table.name long enough for H2 names
      changes:
        - modifyDataType:
            tableName: metabase_table
            columnName: name
            newDataType: varchar(256)
      rollback: # no rollback needed, varchar(256) is backwards compatible

  - changeSet:
      id: v47.00-011
      author: tsmacdonald
      comment: Added 0.47.0 - Make metabase_table.display_name long enough for H2 names
      changes:
        - modifyDataType:
            tableName: metabase_table
            columnName: display_name
            newDataType: varchar(256)
      rollback: # no rollback needed, varchar(256) is backwards compatible

  - changeSet:
      id: v47.00-012
      author: qwef
      comment: Added 0.47.0 - Replace user google_auth and ldap_auth columns with sso_source values
      changes:
        - dropColumn:
            tableName: core_user
            columnName: google_auth
      rollback:
        - addColumn:
            tableName: core_user
            columns:
              - column:
                  name: google_auth
                  type: boolean
                  defaultValueBoolean: false
                  constraints:
                    nullable: false

  - changeSet:
      id: v47.00-013
      author: qwef
      comment: Added 0.47.0 - Replace user google_auth and ldap_auth columns with sso_source values
      changes:
        - sql:
            sql: UPDATE core_user SET sso_source = 'ldap' WHERE ldap_auth = true;
      rollback:
        - sql:
            sql: UPDATE core_user SET ldap_auth = true, sso_source = NULL WHERE sso_source = 'ldap';

  - changeSet:
      id: v47.00-014
      author: qwef
      comment: Added 0.47.0 - Replace user google_auth and ldap_auth columns with sso_source values
      changes:
        - dropColumn:
            tableName: core_user
            columnName: ldap_auth
      rollback:
        - addColumn:
            tableName: core_user
            columns:
              - column:
                  name: ldap_auth
                  type: boolean
                  defaultValueBoolean: false
                  constraints:
                    nullable: false

  - changeSet:
      id: v47.00-015
      author: escherize
      comment: added 0.47.0 - Add is_audit to metabase_database
      changes:
        - addColumn:
            tableName: metabase_database
            columns:
              - column:
                  name: is_audit
                  type: boolean
                  defaultValueBoolean: false
                  remarks: 'Only the app db, visible to admins via auditing should have this set true.'
                  constraints:
                    nullable: false

  - changeSet:
      id: v47.00-016
      author: calherres
      comment: Added 0.47.0 - Migrate the report_card.visualization_settings.column_settings field refs from legacy format
      changes:
        - customChange:
            class: "metabase.db.custom_migrations.MigrateLegacyColumnSettingsFieldRefs"

  - changeSet:
      id: v47.00-018
      author: dpsutton
      comment: Indexed Entities information table
      changes:
        - createTable:
            tableName: model_index
            remarks: 'Used to keep track of which models have indexed columns.'
            columns:
              - column:
                  name: id
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: model_id
                  type: int
                  remarks: 'The ID of the indexed model.'
              - column:
                  name: pk_ref
                  type: ${text.type}
                  remarks: 'Serialized JSON of the primary key field ref.'
                  constraints:
                    nullable: false
              - column:
                  name: value_ref
                  type: ${text.type}
                  remarks: 'Serialized JSON of the label field ref.'
                  constraints:
                    nullable: false
              - column:
                  name: schedule
                  type: ${text.type}
                  remarks: 'The cron schedule for when value syncing should happen.'
                  constraints:
                    nullable: false
              - column:
                  name: state
                  type: ${text.type}
                  remarks: 'The status of the index: initializing, indexed, error, overflow.'
                  constraints:
                    nullable: false
              - column:
                  name: indexed_at
                  type: ${timestamp_type}
                  remarks: 'When the status changed'
                  constraints:
                    nullable: true
              - column:
                  name: error
                  type: ${text.type}
                  remarks: 'The error message if the status is error.'
                  constraints:
                    nullable: true
              - column:
                  name: created_at
                  type: ${timestamp_type}
                  remarks: 'The timestamp of when these changes were made.'
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  remarks: 'ID of the user who created the event'
                  name: creator_id
                  type: int
                  constraints:
                    nullable: false
                    references: core_user(id)
                    foreignKeyName: fk_model_index_creator_id
                    deleteCascade: true
      rollback:
        - dropTable:
            tableName: model_index

  - changeSet:
      id: v47.00-019
      author: dpsutton
      comment: Indexed Entities values table
      changes:
        - createTable:
            tableName: model_index_value
            remarks: 'Used to keep track of the values indexed in a model'
            columns:
              - column:
                  name: model_index_id
                  type: int
                  remarks: 'The ID of the indexed model.'
              - column:
                  name: model_pk
                  type: int
                  remarks: 'The primary key of the indexed value'
                  constraints:
                    nullable: false
              - column:
                  name: name
                  type: ${text.type}
                  remarks: 'The label to display identifying the indexed value.'
                  constraints:
                    nullable: false
      rollback:
        - dropTable:
            tableName: model_index_value

  - changeSet:
      id: v47.00-020
      author: dpsutton
      comment: Add unique constraint on index_id and pk
      changes:
        - addUniqueConstraint:
            tableName: model_index_value
            constraintName: unique_model_index_value_model_index_id_model_pk
            columnNames: model_index_id, model_pk
      rollback:
        - dropUniqueConstraint:
            tableName: model_index_value
            constraintName: unique_model_index_value_model_index_id_model_pk

  - changeSet:
      id: v47.00-023
      author: dpsutton
      comment: Added 0.47.0 -- model_index index
      changes:
        - createIndex:
            tableName: model_index
            columns:
              - column:
                  name: model_id
            indexName: idx_model_index_model_id

  - changeSet:
      id: v47.00-024
      author: dpsutton
      comment: Added 0.47.0 -- model_index foriegn key to report_card
      changes:
        - addForeignKeyConstraint:
            baseTableName: model_index
            baseColumnNames: model_id
            referencedTableName: report_card
            referencedColumnNames: id
            constraintName: fk_model_index_model_id
            nullable: false
            deleteCascade: true

  - changeSet:
      id: v47.00-025
      author: dpsutton
      comment: Added 0.47.0 -- model_index_value foriegn key to model_index
      changes:
        - addForeignKeyConstraint:
            baseTableName: model_index_value
            baseColumnNames: model_index_id
            referencedTableName: model_index
            referencedColumnNames: id
            constraintName: fk_model_index_value_model_id
            nullable: false
            deleteCascade: true

  - changeSet:
      id: v47.00-026
      author: noahmoss
      comment: Added 0.47.0 - New table for connection impersonation policies
      changes:
        - createTable:
            tableName: connection_impersonations
            remarks: Table for holding connection impersonation policies
            columns:
              - column:
                  name: id
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: db_id
                  type: int
                  remarks: 'ID of the database this connection impersonation policy affects'
                  constraints:
                    nullable: false
                    referencedTableName: metabase_database
                    referencedColumnNames: id
                    foreignKeyName: fk_conn_impersonation_db_id
                    deleteCascade: true
              - column:
                  name: group_id
                  type: int
                  remarks: 'ID of the permissions group this connection impersonation policy affects'
                  constraints:
                    nullable: false
                    referencedTableName: permissions_group
                    referencedColumnNames: id
                    foreignKeyName: fk_conn_impersonation_group_id
                    deleteCascade: true
              - column:
                  name: attribute
                  type: ${text.type}
                  remarks: 'User attribute associated with the database role to use for this connection impersonation policy'

  - changeSet:
      id: v47.00-027
      author: calherries
      comment: Added 0.47.0 - Migrate field_ref in report_card.result_metadata from legacy format
      changes:
        - customChange:
            class: "metabase.db.custom_migrations.MigrateLegacyResultMetadataFieldRefs"

  - changeSet:
      id: v47.00-028
      author: calherries
      comment: Added 0.47.0 - Add join-alias to the report_card.visualization_settings.column_settings field refs
      changes:
        - customChange:
            class: "metabase.db.custom_migrations.AddJoinAliasToVisualizationSettingsFieldRefs"

  - changeSet:
      id: v47.00-029
      author: qnkhuat
      comment: Added 0.47.0 - Stack cards vertically for dashboard with tabs on downgrade
      changes:
        - customChange:
            class: "metabase.db.custom_migrations.DowngradeDashboardTab"

  - changeSet:
      id: v47.00-030
      author: escherize
      comment: Added 0.47.0 - Type column for collections for instance-analytics
      changes:
        - addColumn:
            tableName: collection
            columns:
              - column:
                  name: type
                  type: varchar(256)
                  defaultValue: null
                  remarks: 'This is used to differentiate instance-analytics collections from all other collections.'

  - changeSet:
      id: v47.00-031
      author: qnkhuat
      comment: Added 0.47.0 - migrate dashboard grid size from 18 to 24
      validCheckSum: 8:ad9bdb62df65cf26a5a9892a82779ea7
      changes:
          # new_size_x = size_x + ((col + size_x + 1) // 3) - ((col + 1) // 3)
          # new_col    = col + ((col + 1) // 3)
          - sql:
              dbms: postgresql
              sql: >-
                  update report_dashboardcard set size_x = size_x + floor(cast(size_x + col + 1  as decimal) / 3) - floor(cast(col + 1 as decimal) / 3);
                  update report_dashboardcard set col    = col + floor(cast(col + 1 as decimal) / 3);
          - sql:
              dbms: mysql,mariadb,h2
              sql: >-
                  update report_dashboardcard set size_x = size_x + floor(cast(size_x + col + 1  as decimal) / 3) - floor(cast(col + 1 as decimal) / 3);
                  update report_dashboardcard set col    = col + floor(cast(col + 1 as decimal) / 3);

      rollback:
          # new_size_x = size_x - ((size_x + col + 1) // 4 - (col + 1) // 4) for size_x > 1
          # new_col    = col - (col + 1) // 4
          # for size_x, we keep it as it is, because it can't be smaller right?
          - sql:
              dbms: postgresql
              sql: >-
                  update report_dashboardcard set size_x = size_x - (floor(cast(size_x + col + 1 as decimal) / 4) - floor(cast(col + 1 as decimal) / 4)) where size_x <> 1;
                  update report_dashboardcard set col    = col - floor(cast(col + 1 as decimal) / 4);

          - sql:
              dbms: mysql,mariadb,h2
              sql: >-
                  update report_dashboardcard set size_x = size_x - (floor(cast(size_x + col + 1 as decimal) / 4) - floor(cast(col + 1 as decimal) / 4)) where size_x <> 1;
                  update report_dashboardcard set col    = col - floor(cast(col + 1 as decimal) / 4);

  - changeSet:
      id: v47.00-032
      author: qnkhuat
      comment: Added 0.47.0 - migrate dashboard grid size from 18 to 24 for revisions
      validCheckSum: ANY
      changes:
        - customChange:
            class: "metabase.db.custom_migrations.RevisionDashboardMigrateGridFrom18To24"

  - changeSet:
      id: v47.00-033
      author: calherries
      comment: Added 0.47.0 - Migrate field refs in visualization_settings.column_settings keys from legacy format
      changes:
        - customChange:
            class: "metabase.db.custom_migrations.RevisionMigrateLegacyColumnSettingsFieldRefs"

  - changeSet:
      id: v47.00-034
      author: calherries
      comment: Added 0.47.0 - Add join-alias to the visualization_settings.column_settings field refs in card revisions
      changes:
        - customChange:
            class: "metabase.db.custom_migrations.RevisionAddJoinAliasToColumnSettingsFieldRefs"

  - changeSet:
      id: v47.00-035
      author: calherries
      comment: Added 0.47.0 - Drop foreign key constraint on implicit_action.action_id
      changes:
        - dropForeignKeyConstraint:
            baseTableName: implicit_action
            constraintName: fk_implicit_action_action_id
      rollback:
        - addForeignKeyConstraint:
            baseTableName: implicit_action
            baseColumnNames: action_id
            referencedTableName: action
            referencedColumnNames: id
            constraintName: fk_implicit_action_action_id
            onDelete: CASCADE

  - changeSet:
      id: v47.00-036
      author: calherries
      comment: Added 0.47.0 - Set primary key to action_id for implicit_action table
      changes:
        - addPrimaryKey:
            tableName: implicit_action
            columnNames: action_id
            constraintName: pk_implicit_action

  - changeSet:
      id: v47.00-037
      author: calherries
      comment: Added 0.47.0 - Add foreign key constraint on implicit_action.action_id
      changes:
        - addForeignKeyConstraint:
            baseTableName: implicit_action
            baseColumnNames: action_id
            referencedTableName: action
            referencedColumnNames: id
            constraintName: fk_implicit_action_action_id
            onDelete: CASCADE

  - changeSet:
      id: v47.00-043
      author: calherres
      comment: Added 0.47.0 - Migrate report_dashboardcard.visualization_settings.column_settings field refs from legacy format
      changes:
        - customChange:
            class: "metabase.db.custom_migrations.MigrateLegacyDashboardCardColumnSettingsFieldRefs"

  - changeSet:
      id: v47.00-044
      author: calherries
      comment: Added 0.47.0 - Add join-alias to the report_dashboardcard.visualization_settings.column_settings field refs
      changes:
        - customChange:
            class: "metabase.db.custom_migrations.AddJoinAliasToDashboardCardColumnSettingsFieldRefs"

  - changeSet:
      id: v47.00-045
      author: calherres
      comment: Added 0.47.0 - Migrate dashboard revision dashboard cards' visualization_settings.column_settings field refs from legacy format
      changes:
        - customChange:
            class: "metabase.db.custom_migrations.RevisionMigrateLegacyDashboardCardColumnSettingsFieldRefs"

  - changeSet:
      id: v47.00-046
      author: calherries
      comment: Added 0.47.0 - Add join-alias to dashboard revision dashboard cards' visualization_settings.column_settings field refs
      changes:
        - customChange:
            class: "metabase.db.custom_migrations.RevisionAddJoinAliasToDashboardCardColumnSettingsFieldRefs"

  - changeSet:
      id: v47.00-050
      author: tsmacdonald
      comment: Added 0.47.0 - table.is_upload
      changes:
        - addColumn:
            tableName: metabase_table
            columns:
              - column:
                  name: is_upload
                  type: boolean
                  defaultValueBoolean: false
                  remarks: 'Was the table created from user-uploaded (i.e., from a CSV) data?'
                  constraints:
                    nullable: false

  - changeSet:
      id: v47.00-051
      author: noahmoss
      comment: Added 0.47.0 - Drop foreign key constraint on connection_impersonations.db_id
      changes:
        - dropForeignKeyConstraint:
            baseTableName: connection_impersonations
            constraintName: fk_conn_impersonation_db_id
      rollback:
        - addForeignKeyConstraint:
            baseTableName: connection_impersonations
            baseColumnNames: db_id
            referencedTableName: metabase_database
            referencedColumnNames: id
            constraintName: fk_conn_impersonation_db_id
            onDelete: CASCADE

  - changeSet:
      id: v47.00-052
      author: noahmoss
      comment: Added 0.47.0 - Drop foreign key constraint on connection_impersonations.group_id
      changes:
        - dropForeignKeyConstraint:
            baseTableName: connection_impersonations
            constraintName: fk_conn_impersonation_group_id
      rollback:
        - addForeignKeyConstraint:
            baseTableName: connection_impersonations
            baseColumnNames: group_id
            referencedTableName: permissions_group
            referencedColumnNames: id
            constraintName: fk_conn_impersonation_group_id
            onDelete: CASCADE

  - changeSet:
      id: v47.00-053
      author: noahmoss
      comment: Added 0.47.0 -- connection_impersonations index for db_id column
      changes:
        - createIndex:
            tableName: connection_impersonations
            columns:
              - column:
                  name: db_id
            indexName: idx_conn_impersonations_db_id

  - changeSet:
      id: v47.00-054
      author: noahmoss
      comment: Added 0.47.0 -- connection_impersonations index for group_id column
      changes:
        - createIndex:
            tableName: connection_impersonations
            columns:
              - column:
                  name: group_id
            indexName: idx_conn_impersonations_group_id

  - changeSet:
      id: v47.00-055
      author: noahmoss
      comment: Added 0.47.0 - unique constraint for connection impersonations
      changes:
        - addUniqueConstraint:
            tableName: connection_impersonations
            columnNames: group_id, db_id
            constraintName: conn_impersonation_unique_group_id_db_id
      rollback:
        - dropUniqueConstraint:
            tableName: connection_impersonations
            constraintName: conn_impersonation_unique_group_id_db_id

  - changeSet:
      id: v47.00-056
      author: noahmoss
      comment: Added 0.47.0 - re-add foreign key constraint on connection_impersonations.db_id
      changes:
        - addForeignKeyConstraint:
            baseTableName: connection_impersonations
            baseColumnNames: db_id
            referencedTableName: metabase_database
            referencedColumnNames: id
            constraintName: fk_conn_impersonation_db_id
            onDelete: CASCADE

  - changeSet:
      id: v47.00-057
      author: noahmoss
      comment: Added 0.47.0 - re-add foreign key constraint on connection_impersonations.group_id
      changes:
        - addForeignKeyConstraint:
            baseTableName: connection_impersonations
            baseColumnNames: group_id
            referencedTableName: permissions_group
            referencedColumnNames: id
            constraintName: fk_conn_impersonation_group_id
            onDelete: CASCADE

  - changeSet:
      id: v47.00-058
      author: qnkhuat
      comment: 'Drop parameter_card.entity_id'
      preConditions:
        - onFail: MARK_RAN
        - columnExists:
            tableName: parameter_card
            columnName: entity_id
      changes:
        - dropColumn:
            tableName: parameter_card
            columnName: entity_id
      rollback:
        - addColumn:
            tableName: parameter_card
            columns:
              - column:
                  remarks: Random NanoID tag for unique identity.
                  name: entity_id
                  type: char(21)
                  constraints:
                    nullable: true
                    unique: true

  - changeSet:
      id: v48.00-001
      author: qnkhuat
      comment: Added 0.47.0 - Migrate database.options to database.settings
      changes:
        - customChange:
            class: "metabase.db.custom_migrations.MigrateDatabaseOptionsToSettings"

  - changeSet:
      id: v48.00-002
      author: qnkhuat
      comment: Added 0.47.0 - drop metabase_database.options
      changes:
        - dropColumn:
            tableName: metabase_database
            columnName: options
      rollback:
        - addColumn:
            tableName: metabase_database
            columns:
              - column:
                  name: options
                  type: ${text.type}
                  remarks: "Serialized JSON containing various options like QB behavior."

  - changeSet:
      id: v48.00-003
      author: qnkhuat
      comment: Added 0.48.0 - drop computation_job_result table
      preConditions:
        - onFail: MARK_RAN
        - tableExists:
            tableName: computation_job_result
      changes:
          - dropTable:
              tableName: computation_job_result
      rollback: # no rollback needed since this table has been unused since 2018

  - changeSet:
      id: v48.00-004
      author: qnkhuat
      comment: Added 0.48.0 - drop computation_job table
      preConditions:
        - onFail: MARK_RAN
        - tableExists:
            tableName: computation_job
      changes:
          - dropTable:
              tableName: computation_job
      rollback: # no rollback needed since this table has been unused since 2018

  - changeSet:
      id: v48.00-005
      author: qnkhuat
      comment: Added 0.48.0 - Add query_execution.action_id
      changes:
        - addColumn:
            tableName: query_execution
            columns:
              - column:
                  name: action_id
                  type: integer
                  remarks: 'The ID of the action associated with this query execution, if any.'

  - changeSet:
      id: v48.00-006
      author: qnkhuat
      comment: Added 0.48.0 - Index query_execution.action_id
      changes:
        - createIndex:
            tableName: query_execution
            indexName: idx_query_execution_action_id
            columns:
              column:
                name: action_id

  - changeSet:
      id: v48.00-007
      author: qnkhuat
      comment: Added 0.48.0 - Add revision.most_recent
      changes:
        - addColumn:
            tableName: revision
            columns:
              - column:
                  name: most_recent
                  type: boolean
                  defaultValueBoolean: false
                  remarks: 'Whether a revision is the most recent one'
                  constraints:
                    nullable: false

  - changeSet:
      id: v48.00-008
      author: qnkhuat
      comment: Set revision.most_recent = true for latest revisions
      changes:
        - sql:
            dbms: postgresql,h2
            sql: >-
              UPDATE revision r
              SET most_recent = true
              WHERE (model, model_id, timestamp) IN (
                                 SELECT model, model_id, MAX(timestamp)
                                 FROM revision
                                 GROUP BY model, model_id);
          # mysql and mariadb does not allow update on a table that is in the select part
          # so it we join for them
        - sql:
            dbms: mysql,mariadb
            sql: >-
              UPDATE revision r
              JOIN (
                  SELECT model, model_id, MAX(timestamp) AS max_timestamp
                  FROM revision
                  GROUP BY model, model_id
              ) AS subquery
              ON r.model = subquery.model AND r.model_id = subquery.model_id AND r.timestamp = subquery.max_timestamp
              SET r.most_recent = true;
      rollback: # nothing to do since the most_recent will be dropped anyway


  - changeSet:
      id: v48.00-009
      author: calherries
      comment: Added 0.48.0 - Create table_privileges table
      changes:
        - createTable:
            tableName: table_privileges
            remarks: Table for user and role privileges by table
            columns:
              - column:
                  name: table_id
                  type: int
                  remarks: 'Table ID'
                  constraints:
                    foreignKeyName: fk_table_privileges_table_id
                    nullable: false
                    referencedTableName: metabase_table
                    referencedColumnNames: id
                    deleteCascade: true
              - column:
                  name: role
                  type: varchar(255)
                  remarks: 'Role name. NULL indicates the privileges are the current user''s'
              - column:
                  name: select
                  type: boolean
                  remarks: 'Privilege to select from the table'
                  constraints:
                    nullable: false
                  defaultValue: false
              - column:
                  name: update
                  type: boolean
                  remarks: 'Privilege to update records in the table'
                  constraints:
                    nullable: false
                  defaultValue: false
              - column:
                  name: insert
                  type: boolean
                  remarks: 'Privilege to insert records into the table'
                  constraints:
                    nullable: false
                  defaultValue: false
              - column:
                  name: delete
                  type: boolean
                  remarks: 'Privilege to delete records from the table'
                  constraints:
                    nullable: false
                  defaultValue: false
            uniqueConstraints:
              - unique:
                  columnNames: table_id, role
                  name: uq_table_privileges_table_id_role


  - changeSet:
      id: v48.00-010
      author: qnkhuat
      comment: Remove ON UPDATE for revision.timestamp on mysql, mariadb
      preConditions:
          # If preconditions fail (i.e., dbms is not mysql or mariadb) then mark this migration as 'ran'
          - onFail: MARK_RAN
          - dbms:
              type: mysql,mariadb
      changes:
          - sql:
                sql: ALTER TABLE `revision` CHANGE `timestamp` `timestamp` timestamp(6) NOT NULL DEFAULT current_timestamp(6);
      rollback: # no need

  - changeSet:
      id: v48.00-011
      author: qnkhuat
      comment: Index revision.most_recent
      changes:
        - createIndex:
            tableName: revision
            indexName: idx_revision_most_recent
            columns:
              column:
                name: most_recent

  - changeSet:
      id: v48.00-013
      author: qnkhuat
      comment: Index unindexed FKs for postgres
      preConditions:
        - onFail: MARK_RAN
        - dbms:
            type: postgresql
      changes:
          - sql:
              sql: >-
                  CREATE INDEX IF NOT EXISTS idx_action_made_public_by_id ON action (made_public_by_id);
                  CREATE INDEX IF NOT EXISTS idx_action_model_id ON action (model_id);
                  CREATE INDEX IF NOT EXISTS idx_application_permissions_revision_user_id ON application_permissions_revision (user_id);
                  CREATE INDEX IF NOT EXISTS idx_collection_permission_graph_revision_user_id ON collection_permission_graph_revision (user_id);
                  CREATE INDEX IF NOT EXISTS idx_core_session_user_id ON core_session (user_id);
                  CREATE INDEX IF NOT EXISTS idx_dashboard_tab_dashboard_id ON dashboard_tab (dashboard_id);
                  CREATE INDEX IF NOT EXISTS idx_dimension_human_readable_field_id ON dimension (human_readable_field_id);
                  CREATE INDEX IF NOT EXISTS idx_metabase_database_creator_id ON metabase_database (creator_id);
                  CREATE INDEX IF NOT EXISTS idx_model_index_creator_id ON model_index (creator_id);
                  CREATE INDEX IF NOT EXISTS idx_native_query_snippet_creator_id ON native_query_snippet (creator_id);
                  CREATE INDEX IF NOT EXISTS idx_permissions_revision_user_id ON permissions_revision (user_id);
                  CREATE INDEX IF NOT EXISTS idx_persisted_info_creator_id ON persisted_info (creator_id);
                  CREATE INDEX IF NOT EXISTS idx_persisted_info_database_id ON persisted_info (database_id);
                  CREATE INDEX IF NOT EXISTS idx_pulse_dashboard_id ON pulse (dashboard_id);
                  CREATE INDEX IF NOT EXISTS idx_pulse_card_dashboard_card_id ON pulse_card (dashboard_card_id);
                  CREATE INDEX IF NOT EXISTS idx_pulse_channel_recipient_pulse_channel_id ON pulse_channel_recipient (pulse_channel_id);
                  CREATE INDEX IF NOT EXISTS idx_pulse_channel_recipient_user_id ON pulse_channel_recipient (user_id);
                  CREATE INDEX IF NOT EXISTS idx_query_action_database_id ON query_action (database_id);
                  CREATE INDEX IF NOT EXISTS idx_report_card_database_id ON report_card (database_id);
                  CREATE INDEX IF NOT EXISTS idx_report_card_made_public_by_id ON report_card (made_public_by_id);
                  CREATE INDEX IF NOT EXISTS idx_report_card_table_id ON report_card (table_id);
                  CREATE INDEX IF NOT EXISTS idx_report_dashboard_made_public_by_id ON report_dashboard (made_public_by_id);
                  CREATE INDEX IF NOT EXISTS idx_report_dashboardcard_action_id ON report_dashboardcard (action_id);
                  CREATE INDEX IF NOT EXISTS idx_report_dashboardcard_dashboard_tab_id ON report_dashboardcard (dashboard_tab_id);
                  CREATE INDEX IF NOT EXISTS idx_revision_user_id ON revision (user_id);
                  CREATE INDEX IF NOT EXISTS idx_sandboxes_card_id ON sandboxes (card_id);
                  CREATE INDEX IF NOT EXISTS idx_sandboxes_permission_id ON sandboxes (permission_id);
                  CREATE INDEX IF NOT EXISTS idx_secret_creator_id ON secret (creator_id);
                  CREATE INDEX IF NOT EXISTS idx_timeline_creator_id ON timeline (creator_id);
                  CREATE INDEX IF NOT EXISTS idx_timeline_event_creator_id ON timeline_event (creator_id);
      rollback: # no need

  - changeSet:
      id: v48.00-014
      author: calherries
      comment: Added 0.48.0 - Create table_privileges.table_id index
      preConditions:
        - onFail: MARK_RAN
        - dbms:
            type: postgresql
      changes:
        - createIndex:
            indexName: idx_table_privileges_table_id
            tableName: table_privileges
            columns:
              - column:
                  name: table_id
      rollback: # not needed, it will be removed with the table

  - changeSet:
      id: v48.00-015
      author: calherries
      comment: Added 0.48.0 - Create table_privileges.role index
      changes:
        - createIndex:
            indexName: idx_table_privileges_role
            tableName: table_privileges
            columns:
              - column:
                  name: role
      rollback: # not needed, it will be removed with the table

  - changeSet:
      id: v48.00-016
      author: calherries
      comment: Added 0.48.0 - Change the type of collection.slug to varchar(510)
      changes:
        - modifyDataType:
            tableName: collection
            columnName: slug
            newDataType: varchar(510)
      rollback:
        - modifyDataType:
            tableName: collection
            columnName: slug
            newDataType: varchar(254)

  - changeSet:
      id: v48.00-018
      author: noahmoss
      comment: Add new recent_views table
      changes:
        - createTable:
            tableName: recent_views
            remarks: Used to store recently viewed objects for each user
            columns:
              - column:
                  name: id
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: user_id
                  type: int
                  remarks: The user associated with this view
                  constraints:
                    nullable: false
                    referencedTableName: core_user
                    referencedColumnNames: id
                    foreignKeyName: fk_recent_views_ref_user_id
              - column:
                  name: model
                  type: varchar(16)
                  remarks: The name of the model that was viewed
                  constraints:
                    nullable: false
              - column:
                  name: model_id
                  type: int
                  remarks: The ID of the model that was viewed
                  constraints:
                    nullable: false
              - column:
                  name: timestamp
                  type: DATETIME
                  remarks: The time a view was recorded
                  constraints:
                    nullable: false

  - changeSet:
      id: v48.00-019
      author: nemanjaglumac
      comment: 'Collection color is removed in 0.48.0'
      changes:
        - dropColumn:
            tableName: collection
            columnName: color
      rollback:
        - addColumn:
            tableName: collection
            columns:
              - column:
                  name: color
                  type: char(7)
                  remarks: 'Seven-character hex color for this Collection, including the preceding hash sign.'
                  constraints:
                    nullable: false
                  defaultValue: '#31698A'
  - changeSet:
      id: v48.00-020
      author: noahmoss
      comment: Added 0.48.0 - Create recent_views.user_id index
      changes:
        - createIndex:
            indexName: idx_recent_views_user_id
            tableName: recent_views
            columns:
              - column:
                  name: user_id
      rollback: # not needed, it will be removed with the table

  - changeSet:
      id: v48.00-021
      author: piranha
      comment: 'Cards store Metabase version used to create them'
      changes:
        - addColumn:
            tableName: report_card
            columns:
              - column:
                  name: metabase_version
                  type: varchar(100)
                  remarks: 'Metabase version used to create the card.'

  - changeSet:
      id: v48.00-022
      author: johnswanson
      comment: Migrate migrate-click-through to a custom migration
      preConditions:
        - onFail: MARK_RAN
        - sqlCheck:
            expectedResult: 0
            sql: SELECT count(*) FROM data_migrations WHERE id = 'migrate-click-through';
      changes:
        - customChange:
            class: "metabase.db.custom_migrations.MigrateClickThrough"

  - changeSet:
      id: v48.00-023
      author: piranha
      comment: Data migration migrate-remove-admin-from-group-mapping-if-needed
      preConditions:
        - onFail: MARK_RAN
        - sqlCheck:
            expectedResult: 0
            sql: SELECT count(*) FROM data_migrations WHERE id = 'migrate-remove-admin-from-group-mapping-if-needed';
      changes:
        - customChange:
            class: "metabase.db.custom_migrations.MigrateRemoveAdminFromGroupMappingIfNeeded"

  - changeSet:
      id: v48.00-024
      author: piranha
      comment: All data migrations were transferred to custom_migrations!
      changes:
        - dropTable:
            tableName: data_migrations
      rollback:
        - sql:
            sql: >-
              CREATE TABLE data_migrations (
                id varchar(254) primary key,
                timestamp ${timestamp_type} not null
              );
              INSERT INTO data_migrations VALUES
                  ('set-card-database-and-table-ids', current_timestamp),
                  ('set-mongodb-databases-ssl-false', current_timestamp),
                  ('set-default-schemas', current_timestamp),
                  ('set-admin-email', current_timestamp),
                  ('remove-database-sync-activity-entries', current_timestamp),
                  ('remove-duplicate-fk-entries', current_timestamp),
                  ('update-dashboards-to-new-grid', current_timestamp),
                  ('migrate-field-visibility-type', current_timestamp),
                  ('fix-dashboard-cards-without-positions', current_timestamp),
                  ('migrate-fk-metadata', current_timestamp),
                  ('create-raw-tables', current_timestamp),
                  ('migrate-base-types', current_timestamp),
                  ('migrate-field-types', current_timestamp),
                  ('fix-invalid-field-types', current_timestamp),
                  ('add-users-to-default-permissions-groups', current_timestamp),
                  ('add-admin-group-root-entry', current_timestamp),
                  ('add-databases-to-magic-permissions-groups', current_timestamp),
                  ('fix-legacy-magic-group-names', current_timestamp),
                  ('remove-trailing-slashes-from-site-url-setting', current_timestamp),
                  ('copy-site-url-setting-and-remove-trailing-slashes', current_timestamp),
                  ('migrate-query-executions', current_timestamp),
                  ('drop-old-query-execution-table', current_timestamp),
                  ('ensure-protocol-specified-in-site-url', current_timestamp),
                  ('populate-card-database-id', current_timestamp),
                  ('migrate-humanization-setting', current_timestamp),
                  ('populate-card-read-permissions', current_timestamp),
                  ('mark-category-fields-as-list', current_timestamp),
                  ('repopulate-card-read-permissions', current_timestamp),
                  ('add-legacy-sql-directive-to-bigquery-sql-cards', current_timestamp),
                  ('clear-ldap-user-local-passwords', current_timestamp),
                  ('add-migrated-collections', current_timestamp),
                  ('migrate-map-regions', current_timestamp),
                  ('migrate-click-through', current_timestamp),
                  ('migrate-remove-admin-from-group-mapping-if-needed', current_timestamp);

  - changeSet:
      id: v48.00-025
      author: piranha
      comment: 'Revisions store Metabase version used to create them'
      changes:
        - addColumn:
            tableName: revision
            columns:
              - column:
                  name: metabase_version
                  type: varchar(100)
                  remarks: 'Metabase version used to create the revision.'

  - changeSet:
      id: v48.00-026
      author: lbrdnk
      comment: Set semantic_type with value type/Number to null (#18754)
      changes:
        - update:
            tableName: metabase_field
            columns:
              - column:
                  name: semantic_type
                  value: NULL
            where: semantic_type = 'type/Number'
      rollback:

  # this is a no op, it was previously used to Drop parameter_card.entity_id,
  # now it's moved to v47.00-058
  # this is still here because we want the change set id to be consistent
  # see #35239 for details
  - changeSet:
      id: v48.00-027
      author: qnkhuat
      validCheckSum: ANY
      comment: 'No op migration'
      changes:
        - sql:
          sql: SELECT 1;
      rollback:

  - changeSet:
      id: v48.00-028
      author: noahmoss
      comment: Add new audit_log table
      changes:
        - createTable:
            tableName: audit_log
            remarks: Used to store application events for auditing use cases
            columns:
              - column:
                  name: id
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: topic
                  type: varchar(32)
                  remarks: The topic of a given audit event
                  constraints:
                    nullable: false
              - column:
                  name: timestamp
                  type: ${timestamp_type}
                  remarks: The time an event was recorded
                  constraints:
                    nullable: false
              - column:
                  name: end_timestamp
                  type: ${timestamp_type}
                  remarks: The time an event ended, if applicable
                  constraints:
                    nullable: true
              - column:
                  name: user_id
                  type: int
                  remarks: The user who performed an action or triggered an event
                  constraints:
                    nullable: true
              - column:
                  name: model
                  type: varchar(32)
                  remarks: The name of the model this event applies to (e.g. Card, Dashboard), if applicable
                  constraints:
                    nullable: true
              - column:
                  name: model_id
                  type: int
                  remarks: The ID of the model this event applies to, if applicable
                  constraints:
                    nullable: true
              - column:
                  name: details
                  type: ${text.type}
                  remarks: A JSON map with metadata about the event
                  constraints:
                    nullable: false

  - changeSet:
      id: v48.00-029
      author: noahmoss
      comment: Added 0.48.0 - new view v_audit_log
      changes:
        - sqlFile:
            dbms: postgresql
            path: instance_analytics_views/audit_log/v1/postgres-audit_log.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: mysql,mariadb
            path: instance_analytics_views/audit_log/v1/mysql-audit_log.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: h2
            path: instance_analytics_views/audit_log/v1/h2-audit_log.sql
            relativeToChangelogFile: true
      rollback:
        - sql:
            sql: drop view if exists v_audit_log;

  - changeSet:
      id: v48.00-030
      author: noahmoss
      comment: Added 0.48.0 - new view v_content
      changes:
        - sqlFile:
            dbms: postgresql
            path: instance_analytics_views/content/v1/postgres-content.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: mysql,mariadb
            path: instance_analytics_views/content/v1/mysql-content.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: h2
            path: instance_analytics_views/content/v1/h2-content.sql
            relativeToChangelogFile: true
      rollback:
        - sql:
            sql: drop view if exists v_content;

  - changeSet:
      id: v48.00-031
      author: noahmoss
      comment: Added 0.48.0 - new view v_dashboardcard
      changes:
        - sqlFile:
            path: instance_analytics_views/dashboardcard/v1/dashboardcard.sql
            relativeToChangelogFile: true
      rollback:
        - sql:
            sql: drop view if exists v_dashboardcard;

  - changeSet:
      id: v48.00-032
      author: noahmoss
      comment: Added 0.48.0 - new view v_group_members
      changes:
        - sqlFile:
            path: instance_analytics_views/group_members/v1/group_members.sql
            relativeToChangelogFile: true
      rollback:
        - sql:
            sql: drop view if exists v_group_members;

  - changeSet:
      id: v48.00-033
      author: noahmoss
      comment: Added 0.48.0 - new view v_subscriptions for postgres
      changes:
        - sqlFile:
            dbms: postgresql
            path: instance_analytics_views/subscriptions/v1/postgres-subscriptions.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: mysql,mariadb
            path: instance_analytics_views/subscriptions/v1/mysql-subscriptions.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: h2
            path: instance_analytics_views/subscriptions/v1/h2-subscriptions.sql
            relativeToChangelogFile: true
      rollback:
        - sql:
            sql: drop view if exists v_subscriptions;

  - changeSet:
      id: v48.00-034
      author: noahmoss
      comment: Added 0.48.0 - new view v_users
      changes:
        - sqlFile:
            dbms: postgresql
            path: instance_analytics_views/users/v1/postgres-users.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: mysql,mariadb
            path: instance_analytics_views/users/v1/mysql-users.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: h2
            path: instance_analytics_views/users/v1/h2-users.sql
            relativeToChangelogFile: true
      rollback:
        - sql:
            sql: drop view if exists v_users;

  - changeSet:
      id: v48.00-035
      author: noahmoss
      comment: Added 0.48.0 - new view v_alerts
      changes:
        - sqlFile:
            dbms: postgresql
            path: instance_analytics_views/alerts/v1/postgres-alerts.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: mysql,mariadb
            path: instance_analytics_views/alerts/v1/mysql-alerts.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: h2
            path: instance_analytics_views/alerts/v1/h2-alerts.sql
            relativeToChangelogFile: true
      rollback:
        - sql:
            sql: drop view if exists v_alerts;

  - changeSet:
      id: v48.00-036
      author: noahmoss
      comment: Added 0.48.0 - new view v_databases
      changes:
        - sqlFile:
            path: instance_analytics_views/databases/v1/databases.sql
            relativeToChangelogFile: true
      rollback:
        - sql:
            sql: drop view if exists v_databases;

  - changeSet:
      id: v48.00-037
      author: noahmoss
      comment: Added 0.48.0 - new view v_fields
      changes:
        - sqlFile:
            dbms: postgresql
            path: instance_analytics_views/fields/v1/postgres-fields.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: mysql,mariadb
            path: instance_analytics_views/fields/v1/mysql-fields.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: h2
            path: instance_analytics_views/fields/v1/h2-fields.sql
            relativeToChangelogFile: true
      rollback:
        - sql:
            sql: drop view if exists v_fields;

  - changeSet:
      id: v48.00-038
      author: noahmoss
      comment: Added 0.48.0 - new view v_query_log
      changes:
        - sqlFile:
            dbms: postgresql
            path: instance_analytics_views/query_log/v1/postgres-query_log.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: mysql,mariadb
            path: instance_analytics_views/query_log/v1/mysql-query_log.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: h2
            path: instance_analytics_views/query_log/v1/h2-query_log.sql
            relativeToChangelogFile: true
      rollback:
        - sql:
            sql: drop view if exists v_query_log;

  - changeSet:
      id: v48.00-039
      author: noahmoss
      comment: Added 0.48.0 - new view v_tables
      changes:
        - sqlFile:
            dbms: postgresql
            path: instance_analytics_views/tables/v1/postgres-tables.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: mysql,mariadb
            path: instance_analytics_views/tables/v1/mysql-tables.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: h2
            path: instance_analytics_views/tables/v1/h2-tables.sql
            relativeToChangelogFile: true
      rollback:
        - sql:
            sql: drop view if exists v_tables;

  - changeSet:
      id: v48.00-040
      author: noahmoss
      comment: Added 0.48.0 - new view v_view_log
      changes:
        - sqlFile:
            dbms: postgresql
            path: instance_analytics_views/view_log/v1/postgres-view_log.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: mysql,mariadb
            path: instance_analytics_views/view_log/v1/mysql-view_log.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: h2
            path: instance_analytics_views/view_log/v1/h2-view_log.sql
            relativeToChangelogFile: true
      rollback:
        - sql:
            sql: drop view if exists v_view_log;

  - changeSet:
      id: v48.00-045
      author: qwef
      comment: Added 0.48.0 - add is_sandboxed to query_execution
      changes:
        - addColumn:
            tableName: query_execution
            columns:
              - column:
                  name: is_sandboxed
                  type: boolean
                  remarks: "Is query from a sandboxed user"
                  constraints:
                    nullable: true

  - changeSet:
      id: v48.00-046
      author: noahmoss
      comment: Added 0.48.0 - new indexes to optimize audit v2 queries
      changes:
        - sqlFile:
            dbms: postgresql
            path: instance_analytics_views/indexes/v1/postgres-indexes.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: mysql
            path: instance_analytics_views/indexes/v1/mysql-indexes.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: mariadb
            path: instance_analytics_views/indexes/v1/mariadb-indexes.sql
            relativeToChangelogFile: true
        - sqlFile:
            dbms: h2
            path: instance_analytics_views/indexes/v1/h2-indexes.sql
            relativeToChangelogFile: true
      rollback:
        # Only MySQL needes a rollback because all the other DBs support "CREATE INDEX IF NOT EXISTS"
        - sqlFile:
            dbms: mysql
            path: instance_analytics_views/indexes/v1/mysql-rollback.sql
            relativeToChangelogFile: true

  - changeSet:
      id: v48.00-047
      author: noahmoss
      comment: Drop foreign key on recent_views so that it can be recreated with onDelete policy
      changes:
        - dropForeignKeyConstraint:
            baseTableName: recent_views
            constraintName: fk_recent_views_ref_user_id
      rollback:
        - addForeignKeyConstraint:
            baseTableName: recent_views
            constraintName: fk_recent_views_ref_user_id
            referencedTableName: core_user
            baseColumnNames: user_id
            referencedColumnNames: id
            onDelete: CASCADE

  - changeSet:
      id: v48.00-048
      author: noahmoss
      comment: Add foreign key on recent_views with onDelete CASCADE
      changes:
        - addForeignKeyConstraint:
            baseTableName: recent_views
            constraintName: fk_recent_views_ref_user_id
            referencedTableName: core_user
            baseColumnNames: user_id
            referencedColumnNames: id
            onDelete: CASCADE
      rollback:
        - dropForeignKeyConstraint:
            baseTableName: recent_views
            constraintName: fk_recent_views_ref_user_id

  - changeSet:
      id: v48.00-049
      author: noahmoss
      comment: Migrate data from activity to audit_log
      changes:
        - sql:
            dbms: postgresql
            sql: >-
              INSERT INTO audit_log (topic, timestamp, user_id, model, model_id, details)
              SELECT
                topic,
                timestamp,
                user_id,
                model,
                model_id,
                details::jsonb || json_strip_nulls(json_build_object('database_id', database_id, 'table_id', table_id))::jsonb
              FROM activity;
        - sql:
            dbms: mysql,mariadb
            sql: >-
              INSERT INTO audit_log (topic, timestamp, user_id, model, model_id, details)
              SELECT
                  topic,
                  timestamp,
                  user_id,
                  model,
                  model_id,
                  JSON_MERGE(
                      details,
                      JSON_OBJECT('database_id', database_id, 'table_id', table_id)
                  )
              FROM activity;
        - sql:
            dbms: h2
            sql: >-
              INSERT INTO audit_log (topic, timestamp, user_id, model, model_id, details)
              SELECT
                  topic,
                  timestamp,
                  user_id,
                  model,
                  model_id,
                  JSON_OBJECT(
                    'database_id': database_id,
                    'table_id': table_id
                    ABSENT ON NULL
                  )
              FROM activity;
      rollback: # not necessary

  - changeSet:
      id: v48.00-050
      author: noahmoss
      comment: Added 0.48.0 - no-op migration to remove audit DB and collection on downgrade
      changes:
        - comment: "No operation performed for this changeset on execution."
      rollback:
        - sql: DELETE FROM metabase_database WHERE is_audit = TRUE;
        - sql: DELETE FROM collection WHERE type = 'instance_analytics';

  - changeSet:
      id: v48.00-051
      author: calherries
      comment: Migrate metabase_field when the fk target field is inactive
      changes:
        - sql:
            dbms: mariadb,mysql
            sql: >-
              UPDATE metabase_field AS a
              JOIN metabase_field AS b ON b.id = a.fk_target_field_id
              SET a.fk_target_field_id = NULL,
                  a.semantic_type = NULL
              WHERE b.active = FALSE;
        - sql:
            dbms: postgresql,h2
            sql: >-
              UPDATE metabase_field
              SET fk_target_field_id = NULL,
                  semantic_type = NULL
              WHERE fk_target_field_id IN (
                  SELECT id
                  FROM metabase_field
                  WHERE active = FALSE
              );
      rollback: # no change

  - changeSet:
      id: v48.00-053
      author: johnswanson
      comment: Increase length of `activity.model` to fit longer model names
      changes:
        - modifyDataType:
            tableName: activity
            columnName: model
            newDataType: VARCHAR(32)
      rollback: # not necessary

  - changeSet:
      id: v48.00-054
      author: escherize
      comment: Added 0.48.0 - no-op migration to remove Internal Metabase User on downgrade
      changes:
        - comment: "No operation performed for this changeset on execution."
      rollback:
        - sql: DELETE FROM core_user WHERE id = 13371338;

  - changeSet:
      id: v48.00-056
      author: noahmoss
      comment: 'Adjust view_log schema for Audit Log v2'
      changes:
        - addColumn:
            tableName: view_log
            columns:
              - column:
                  name: has_access
                  type: boolean
                  constraints:
                    nullable: true
                  remarks: 'Whether the user who initiated the view had read access to the item being viewed.'

  - changeSet:
      id: v48.00-057
      author: noahmoss
      comment: 'Adjust view_log schema for Audit Log v2'
      changes:
        - addColumn:
            tableName: view_log
            columns:
              - column:
                  name: context
                  type: varchar(32)
                  constraints:
                    nullable: true
                  remarks: 'The context of the view, can be collection, question, or dashboard. Only for cards.'

  - changeSet:
      id: v48.00-059
      author: qwef
      comment: 'Update the namespace of any audit collections that are already loaded'
      changes:
        - sql:
            sql: UPDATE collection SET namespace = 'analytics' WHERE entity_id = 'okNLSZKdSxaoG58JSQY54' OR entity_id = 'vG58R8k-QddHWA7_47umn'
      rollback: # not necessary

  # >>>>>>>>>> DO NOT ADD NEW MIGRATIONS BELOW THIS LINE! ADD THEM ABOVE <<<<<<<<<<


########################################################################################################################
#
# ADVICE:
#
# 1) Run ./bin/lint-migrations-file.sh to run core.spec checks against any changes you make here. Liquibase is pretty
#    forgiving and won't complain if you accidentally mix up things like deleteCascade and onDelete: CASCADE. CI runs
#    this check but it's nicer to know now instead of waiting for CI.
#
#   1a) Ensure your changes are compatible with Liquibase rollback. See comments starting with
#       0.45 migrations for more notes. Rollback to 0.44 and forwards to the latest migration is tested
#       automatically and the migrations linter will check for the presence of rollback where required as
#       much as possible.
#
# 2) Please post a message in the Metabase Slack #migrations channel to let others know you are creating a new
#    migration so someone else doesn't steal your ID number
#
# 3) Migrations IDs should follow the format
#
#    vMM.mm-NNN
#
#    where
#
#    M = major version
#    m = minor version
#    N = migration number relative to that major+minor version
#
#   e.g. the first migration added to 0.42.0 should be numbered v42.00-000 and the second migration should be numbered
#   v42.00-001. The first migration for 0.42.1 should be numbered v42.01-000, and so forth.
#
#   This numbering scheme was adopted beginning with version 0.42.0 so that we could go back and add migrations to patch
#   releases without the ID sequence getting wildly out of order. See PR #18821 for more information.
#
# PLEASE KEEP THIS MESSAGE AT THE BOTTOM OF THIS FILE!!!!! Add new migrations above the message.
#
########################################################################################################################
