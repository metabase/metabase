name: Auto E2E Stress Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "**/*.cy.spec.js"
      - "**/*.cy.spec.ts"
jobs:
  detect-and-run-tests:
    name: Detect and Run Stress Tests
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write
      # Needed to trigger workflows
      actions: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare frontend environment
        uses: ./.github/actions/prepare-frontend

      - name: Find and run affected tests
        run: |
          echo "Running cypress-test-finder against base branch: $BASE_BRANCH"
          echo "Using head ref: $HEAD_REF"

          # Run with --execute to automatically trigger workflows
          node ./.github/scripts/cypress-test-finder.js --base="origin/$BASE_BRANCH" --ref="$HEAD_REF" --execute
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_BRANCH: ${{ github.event.pull_request.base.ref }}
          HEAD_REF: ${{ github.head_ref || github.ref_name }}

      - name: Add or Update PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            try {
              // Get workflow run URL to link in the comment
              const runUrl = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;

              // Create comment content
              let commentBody = `## ðŸ”„ E2E Stress Tests Triggered\n\n`;
              commentBody += `I've automatically triggered stress tests for the Cypress tests affected by this PR.\n\n`;
              commentBody += `[View details in the workflow run](${runUrl})\n\n`;
              commentBody += `Each affected test will run 20 times to ensure it's stable and not flaky.\n`;
              commentBody += `Check the [Actions tab](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions) for individual test workflow runs.`;

              // Look for an existing comment from this workflow
              const comments = await github.rest.issues.listComments({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
              });

              const botComments = comments.data.filter(comment =>
                comment.user.login === 'github-actions[bot]' &&
                comment.body.includes('ðŸ”„ E2E Stress Tests Triggered')
              );

              if (botComments.length > 0) {
                // Update the most recent comment
                const commentId = botComments[botComments.length - 1].id;
                await github.rest.issues.updateComment({
                  comment_id: commentId,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: commentBody
                });
                console.log('Updated existing PR comment about triggered stress tests');
              } else {
                // Create a new comment if none exists
                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: commentBody
                });
                console.log('Added new PR comment about triggered stress tests');
              }
            } catch (error) {
              console.error('Error managing PR comment:', error);
            }
