name: Prepare cypress environment
description: Cypress preparation steps

inputs:
  working-directory:
    description: "Optional working directory for yarn commands"
    required: false
    default: "."

outputs:
  chrome-path:
    description: Path to the custom Chrome executable
    value: ${{ steps.setup-chrome.outputs.chrome-path }}
  blocked-tests:
    description: String containing blocked Cypress tests (to be used by the Cypress grep plugin)
    value: ${{ steps.kill-switch.outputs.blocked-tests }}

runs:
  using: "composite"
  steps:
    - name: Install Chrome v111
      uses: browser-actions/setup-chrome@v1
      with:
        # https://chromium.cypress.io/linux/stable/111.0.5563.146
        chrome-version: 1097615
      id: setup-chrome

    - name: Fetch CI config
      shell: bash
      run: |
        curl -o ci-test-config.json https://raw.githubusercontent.com/metabase/metabase/refs/heads/master/ci-test-config.json

    - name: Get a list of disabled Cypress tests from the CI config
      id: kill-switch
      continue-on-error: true
      uses: actions/github-script@v7
      with:
        script: | #js
          const fs = require('fs');
          const configPath = "ci-test-config.json"

          const config = fs.existsSync(configPath)
            ? JSON.parse(fs.readFileSync(configPath, "utf8"))
            : {};

          console.log("CONFIG", config)

          const { getBlockedCypressTests } = require('${{ github.workspace }}/.github/scripts/grep-blocked-tests.js');

          const blockedTests = getBlockedCypressTests(config);
          console.log("BLOCKED", blockedTests)
          core.setOutput('blocked-tests', blockedTests);

    - name: Check to see if dependencies should be cached
      if: ${{ contains(github.event.head_commit.message, '[ci nocache]') }}
      run: echo "Commit message includes [ci nocache]; dependencies will NOT be cached"
      shell: bash
    - name: Get Cypress cache
      uses: actions/cache@v4
      if: ${{ !contains(github.event.head_commit.message, '[ci nocache]') }}
      with:
        path: ~/.cache/Cypress
        key: ${{ runner.os }}-Cypress-${{ hashFiles('**/yarn.lock') }}
    - name: Ensure that Cypress executable is ready
      run: |
        yarn cypress install
        yarn cypress cache path
        yarn cypress cache list
        yarn cypress verify
      shell: bash
      working-directory: ${{ inputs.working-directory }}
