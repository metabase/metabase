name: Set Announcement URL
run-name: Set Announcement URL - ${{ inputs.announcement-url }}

on:
  workflow_dispatch:
    inputs:
      announcement-url:
        description: 'The URL of the announcement'
        type: string
        required: true

jobs:
  set-announce-url:
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - name: Validate inputs
        uses: actions/github-script@v6
        with:
          script: |
            const announcementUrl = '${{ inputs.announcement-url }}';

            if (!announcementUrl.includes('http')) {
              throw new Error(`announcement-url must be a valid URL, got: ${announcementUrl}`);
            }

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_RELEASE_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_RELEASE_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Update announcement url
        uses: actions/github-script@v6
        id: announce_url
        with:
          result-encoding: string
          script: |
            // TODO: move this to the release/ directory when it exists
            const fs = require('fs');

            const announcementUrl = '${{ inputs.announcement-url }}';

            const OSSversionInfo = await fetch(`http://${{ vars.AWS_S3_PUBLIC_BUCKET }}.s3.us-east-1.amazonaws.com/version-info.json`).then(r => r.json());
            const EEversionInfo = await fetch(`http://${{ vars.AWS_S3_PUBLIC_BUCKET }}.s3.us-east-1.amazonaws.com/version-info-ee.json`).then(r => r.json());

            OSSversionInfo.latest.announcement_url = announcementUrl;
            EEversionInfo.latest.announcement_url = announcementUrl;

            fs.writeFileSync('version-info.json', JSON.stringify(OSSversionInfo));
            fs.writeFileSync('version-info-ee.json', JSON.stringify(EEversionInfo));

      - name: Upload new version-info.json to s3
        run: |
          aws s3 cp version-info.json s3://${{ vars.AWS_S3_PUBLIC_BUCKET }}/version-info.json
          aws s3 cp version-info-ee.json s3://${{ vars.AWS_S3_PUBLIC_BUCKET }}/version-info-ee.json
      - name: Create cloudfront invalidation for version-info.json and version-info-ee.json
        run: |
          aws cloudfront create-invalidation \
          --distribution-id ${{ vars.AWS_CLOUDFRONT_PUBLIC_ID }} \
          --paths "/version-info.json" "/version-info-ee.json"

