var window=global;var $CLJS=require("./cljs_env.js");require("./cljs.core.js");require("./shadow.js.shim.module$moment.js");require("./shadow.js.shim.module$moment_timezone.js");require("./clojure.set.js");require("./metabase.mbql.schema.helpers.js");require("./metabase.mbql.schema.macros.js");require("./schema.core.js");
'use strict';var Eo,Go,No,Qo,So,To,Uo,Vo,Xo,Yo,Zo,$o,cp,dp,ep,fp,gp,ip,jp,hO,iO,jO,mO,nO,oO,pO,qO,rO,sO,tO,uO,vO,wO,xO,zO,AO,BO,CO,DO,EO,FO,GO,HO,IO,KO,LO,MO,NO,OO,PO,QO,RO,SO,TO,WO,XO,YO,$O,aP,bP,cP,dP,eP,fP,gP,hP,lP,mP,nP,oP,qP,rP,wP,xP,yP,zP,BP,CP,EP,FP,GP,HP,IP,JP,OP,PP,QP,SP,VP,WP,XP,YP,$P,aQ,bQ,cQ,dQ,eQ,gQ,jQ,kQ,lQ,mQ,nQ,qQ,rQ,sQ,uQ,vQ,wQ,xQ,yQ,zQ,AQ,BQ,CQ,DQ,FQ,GQ,HQ,JQ,KQ,LQ,MQ,NQ,OQ,PQ,QQ,SQ,TQ,UQ,VQ,WQ,XQ,ZQ,cR,dR,eR,fR,gR,hR,jR,kR,lR,mR,oR,pR,qR,rR,sR,uR,vR,wR,xR,yR,AR,BR,CR,DR,ER,IR,JR,
LR,NR,OR,PR,QR,TR,VR,WR,YR,ZR,$R,aS,bS,dS,eS,fS,hS,iS,jS,kS,lS,mS,nS,X,oS,pS,qS,sS,tS,uS,vS,wS,xS,yS,zS,AS,BS,CS,DS,FS,HS,IS,KS,LS,MS,NS,OS,QS,RS,SS,TS,VS,WS,XS,YS,ZS,$S,bT,cT,dT,fT,gT,hT,iT,jT,kT,lT,mT,nT,oT,pT,qT,rT,sT,tT,uT,vT,wT,xT,yT,zT,AT,BT,CT,DT,ET,GT,HT,IT,KT,MT,NT,OT,PT,RT,ST,UT,VT,WT,YT,$T,aU,cU,dU,gU,hU,iU,jU,kU,lU,mU,nU,oU,qU,rU,sU,tU,uU,wU,xU,yU,zU,BU,CU,DU,EU,FU,HU,JU,LU,MU,NU,PU,QU,RU,SU,UU,VU,XU,YU,ZU,aV,bV,cV,dV,fV,gV,hV,jV,kV,lV,mV,nV,oV,pV,qV,rV,sV,tV,uV,vV,wV,xV,yV,zV,AV,BV,DV,
EV,FV,GV,IV,JV,KV,LV,MV,NV,OV,PV,QV,RV,SV,UV,VV,XV,YV,ZV,$V,bW,cW,dW,eW,gW,hW,iW,kW,lW,mW,nW,pW,qW,rW,sW,tW,uW,vW,wW,xW,yW,zW,BW,CW,DW,EW,FW,GW,LW,MW,NW,OW,QW,RW,SW,TW,UW,VW,WW,YW,$W;Eo=function(a,b){if(null!=a&&null!=a.Cc)a=a.Cc(a,b);else{var c=Eo[$CLJS.sa(null==a?null:a)];if(null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else if(c=Eo._,null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else throw $CLJS.Oa("ISet.-disjoin",a);}return a};
Go=function(a,b){if(null!=a&&null!=a.Lb)a=a.Lb(a,b);else{var c=Go[$CLJS.sa(null==a?null:a)];if(null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else if(c=Go._,null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else throw $CLJS.Oa("CoreSpec.checker",a);}return a};No=function(a,b){var c=new $CLJS.n(null,3,[$CLJS.UM,a,$CLJS.WM,!1,$CLJS.VM,$CLJS.vh.g($CLJS.ie)],null);return a.h?a.h(b,c):a.call(null,b,c)};
$CLJS.Oo=function(a,b){return $CLJS.qd(function(c,d){var e=$CLJS.I(d,0,null);d=$CLJS.I(d,1,null);return $CLJS.fd(a,e)?$CLJS.Cg.j(c,d,$CLJS.K.h(a,e)):c},$CLJS.fe.j($CLJS.sh,a,$CLJS.bg(b)),b)};Qo=function(a,b,c){return new $CLJS.Ld(null,function(){var d=$CLJS.y(c);if(d){var e=$CLJS.Po(a,d);return a===$CLJS.D(e)?$CLJS.Jd(e,Qo(a,b,$CLJS.Ih(b,d))):null}return null},null)};$CLJS.Ro=function(a,b){return new $CLJS.Zm(a,!1,b,null,null,null)};So=function(a){return new $CLJS.Jm(a,null,null,null)};
To=function(a,b,c,d){this.tb=a;this.C=b;this.l=c;this.B=d;this.A=2230716170;this.M=139264};Uo=function(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return Uo.o(0<b.length?new $CLJS.lc(b.slice(0),0,null):null)};Vo=function(a,b,c,d,e){this.ab=a;this.cb=b;this.C=c;this.l=d;this.B=e;this.A=2230716170;this.M=139264};Xo=function(a,b,c){return Wo.o($CLJS.G([a,b,$CLJS.Ho(!0),c]))};Yo=function(a,b,c,d){this.ib=a;this.C=b;this.l=c;this.B=d;this.A=2230716170;this.M=139264};
Zo=function(a){if(!(null!=a?a.A&32768||$CLJS.gc===a.Rd||(a.A?0:$CLJS.Ma($CLJS.Fo,a)):$CLJS.Ma($CLJS.Fo,a)))throw Error($CLJS.kl("Not an IDeref: %s",$CLJS.G([a])));return new Yo(a,null,null,null)};$o=function(a,b,c,d){this.U=a;this.C=b;this.l=c;this.B=d;this.A=2230716170;this.M=139264};$CLJS.ap=function(a){return new $o(a,null,null,null)};$CLJS.bp=function(a){return $CLJS.Li.h($CLJS.zl,No(function(b,c){return Go($CLJS.um(b),c)},a))};
cp=function(a,b){if($CLJS.Zc(b)){var c=$CLJS.I(b,0,null),d=$CLJS.I(b,1,null);switch(c instanceof $CLJS.M?c.T:null){case "optional":return new $CLJS.Zm($CLJS.ap(d),!0,a,null,null,null);case "rest":return $CLJS.Em(d,a);default:return $CLJS.Ro(b,a)}}else return $CLJS.Ro(b,a)};
dp=function(a,b){return $CLJS.Ue($CLJS.Jd($CLJS.Ro($CLJS.Am(a),a),function(){return function e(d){return new $CLJS.Ld(null,function(){for(;;){var f=$CLJS.y(d);if(f){if($CLJS.ad(f)){var g=$CLJS.Rb(f),l=$CLJS.D(g),k=$CLJS.Od(l);a:for(var m=0;;)if(m<l){var r=$CLJS.Pc(g,m),v=$CLJS.I(r,0,null);r=$CLJS.I(r,1,null);v=cp(v,r);k.add(v);m+=1}else{g=!0;break a}return g?$CLJS.Rd($CLJS.Td(k),e($CLJS.Sb(f))):$CLJS.Rd($CLJS.Td(k),null)}g=$CLJS.z(f);k=$CLJS.I(g,0,null);g=$CLJS.I(g,1,null);return $CLJS.Jd(cp(k,g),
e($CLJS.qc(f)))}return null}},null)}(Qo(2,2,b))}()))};ep=function(a,b){var c=$CLJS.Wc(b);return c?(c=$CLJS.z(b)instanceof $CLJS.M)?$CLJS.Uc(a)?(b=$CLJS.z(b),a=$CLJS.ig(a),a.g?a.g(b):a.call(null,b)):$CLJS.E.h(a,$CLJS.z(b)):c:c};
fp=function(a){return $CLJS.Em($CLJS.fe.h(Wo,$CLJS.ud($CLJS.th,function(){return function d(c){return new $CLJS.Ld(null,function(){for(;;){var e=$CLJS.y(c);if(e){if($CLJS.ad(e)){var f=$CLJS.Rb(e),g=$CLJS.D(f),l=$CLJS.Od(g);a:for(var k=0;;)if(k<g){var m=$CLJS.Pc(f,k),r=$CLJS.I(m,0,null);m=$CLJS.I(m,1,null);l.add(new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.wi(ep,r),m],null));k+=1}else{f=!0;break a}return f?$CLJS.Rd($CLJS.Td(l),d($CLJS.Sb(e))):$CLJS.Rd($CLJS.Td(l),null)}f=$CLJS.z(e);l=$CLJS.I(f,0,null);f=$CLJS.I(f,
1,null);return $CLJS.Jd(new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.wi(ep,l),f],null),d($CLJS.qc(e)))}return null}},null)}(a)}())),["Must be a valid instance of one of these clauses: ",$CLJS.Ko(", ",$CLJS.xg.h($CLJS.z,a))].join(""))};gp=function(a){return $CLJS.Gm(a,$CLJS.y,"Non-empty")};ip=function(a){return $CLJS.y(a)?$CLJS.fe.h($CLJS.hp,a):!0};jp=function(a){return"string"===typeof a?$CLJS.Zg.h(Date.parse(a),NaN):null};
$CLJS.Ll.prototype.Lb=$CLJS.ra(34,function(){var a=this;return function(b){var c=a.Y.g?a.Y.g(b):a.Y.call(null,b);return $CLJS.p(c)?c:b}});
$CLJS.Rl.prototype.Lb=$CLJS.ra(33,function(a,b){var c=this,d=this,e=$CLJS.qd(function(f,g){return $CLJS.Ql(g,b,f)},function(f){return $CLJS.xl($CLJS.sl(d,f,new $CLJS.Jg(function(){var g=$CLJS.nl(f);return c.Va.g?c.Va.g(g):c.Va.call(null,g)}),null))},$CLJS.Hd(c.options));return $CLJS.p(c.Ua)?function(f){var g=c.Y.g?c.Y.g(f):c.Y.call(null,f);if($CLJS.p(g))return g;g=e.g?e.g(f):e.call(null,f);if($CLJS.yl(g))return g;f=$CLJS.p($CLJS.WM.g(b))?g:f;f=c.Ua.g?c.Ua.g(f):c.Ua.call(null,f);return $CLJS.p(f)?
f:g}:function(f){var g=c.Y.g?c.Y.g(f):c.Y.call(null,f);return $CLJS.p(g)?g:e.g?e.g(f):e.call(null,f)}});
$CLJS.bm.prototype.Lb=$CLJS.ra(32,function(a,b){var c=this,d=$CLJS.p($CLJS.WM.g(b))?c.Oe:function(){return null},e=$CLJS.Yl(c.elements,b,function(f,g){return g});return function(f){var g=c.Y.g?c.Y.g(f):c.Y.call(null,f);if($CLJS.p(g))return g;var l=$CLJS.vh.g($CLJS.Te);g=e.h?e.h(l,f):e.call(null,l,f);l=$CLJS.pb(l);var k=(k=$CLJS.y(g))?k:$CLJS.se($CLJS.yl,l);return $CLJS.p(k)?$CLJS.xl(c.Wa.j?c.Wa.j(f,l,g):c.Wa.call(null,f,l,g)):d.g?d.g(l):d.call(null,l)}});
$CLJS.R.prototype.Cc=$CLJS.ra(9,function(a,b){return new $CLJS.R(this.K,$CLJS.jb(this.Ab,b),null)});var kp={},lp={},mp={},np=function np(a){switch(arguments.length){case 1:return np.g(arguments[0]);case 2:return np.h(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return np.o(arguments[0],arguments[1],new $CLJS.lc(c.slice(2),0,null))}};np.g=function(a){return a};np.h=function(a,b){return null==a?null:Eo(a,b)};
np.o=function(a,b,c){for(;;){if(null==a)return null;a=np.h(a,b);if($CLJS.p(c))b=$CLJS.z(c),c=$CLJS.C(c);else return a}};np.I=function(a){var b=$CLJS.z(a),c=$CLJS.C(a);a=$CLJS.z(c);c=$CLJS.C(c);return this.o(b,a,c)};np.J=2;
var op=function op(a){switch(arguments.length){case 1:return op.g(arguments[0]);case 2:return op.h(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return op.o(arguments[0],arguments[1],new $CLJS.lc(c.slice(2),0,null))}};op.g=function(a){return a};op.h=function(a,b){for(;;)if($CLJS.D(b)<$CLJS.D(a)){var c=a;a=b;b=c}else return $CLJS.qd(function(d,e){return function(f,g){return $CLJS.fd(e,g)?f:np.h(f,g)}}(a,b),a,a)};
op.o=function(a,b,c){a=$CLJS.yi(function(d){return-$CLJS.D(d)},$CLJS.Gd.o(c,b,$CLJS.G([a])));return $CLJS.qd(op,$CLJS.z(a),$CLJS.qc(a))};op.I=function(a){var b=$CLJS.z(a),c=$CLJS.C(a);a=$CLJS.z(c);c=$CLJS.C(c);return this.o(b,a,c)};op.J=2;$CLJS.h=To.prototype;$CLJS.h.ga=function(a,b){return this.N(null,b,null)};$CLJS.h.N=function(a,b,c){switch(b instanceof $CLJS.M?b.T:null){case "vs":return this.tb;default:return $CLJS.K.j(this.l,b,c)}};
$CLJS.h.oa=function(a,b,c){return $CLJS.qd(function(d,e){var f=$CLJS.I(e,0,null);e=$CLJS.I(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};$CLJS.h.S=function(a,b,c){return $CLJS.rg(b,function(d){return $CLJS.rg(b,$CLJS.wg,""," ","",c,d)},"#schema.core.EnumSchema{",", ","}",c,$CLJS.th.h(new $CLJS.P(null,1,5,$CLJS.Q,[new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.GN,this.tb],null)],null),this.l))};
$CLJS.h.ia=function(){return new $CLJS.kf(this,1,new $CLJS.P(null,1,5,$CLJS.Q,[$CLJS.GN],null),$CLJS.p(this.l)?$CLJS.Wb(this.l):$CLJS.oe())};$CLJS.h.Z=function(){return this.C};$CLJS.h.ba=function(){return 1+$CLJS.D(this.l)};$CLJS.h.X=function(){var a=this.B;return null!=a?a:this.B=a=2002701468^$CLJS.vc(this)};$CLJS.h.W=function(a,b){return null!=b&&this.constructor===b.constructor&&$CLJS.E.h(this.tb,b.tb)&&$CLJS.E.h(this.l,b.l)};
$CLJS.h.ra=function(a,b){return $CLJS.fd(new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.GN,null],null),null),b)?$CLJS.sh.h($CLJS.sb($CLJS.uf.h($CLJS.ie,this),this.C),b):new To(this.tb,this.C,$CLJS.ke($CLJS.sh.h(this.l,b)),null)};$CLJS.h.ma=function(a,b){switch(b instanceof $CLJS.M?b.T:null){case "vs":return!0;default:return $CLJS.fd(this.l,b)}};
$CLJS.h.V=function(a,b,c){return $CLJS.p($CLJS.O.h?$CLJS.O.h($CLJS.GN,b):$CLJS.O.call(null,$CLJS.GN,b))?new To(c,this.C,this.l,null):new To(this.tb,this.C,$CLJS.Cg.j(this.l,b,c),null)};$CLJS.h.$=function(){return $CLJS.y($CLJS.th.h(new $CLJS.P(null,1,5,$CLJS.Q,[new $CLJS.gd($CLJS.GN,this.tb)],null),this.l))};$CLJS.h.aa=function(a,b){return new To(this.tb,b,this.l,this.B)};$CLJS.h.ca=function(a,b){return $CLJS.Zc(b)?this.V(null,$CLJS.Pc(b,0),$CLJS.Pc(b,1)):$CLJS.qd($CLJS.Xa,this,b)};
$CLJS.h.Da=function(){var a=this;return $CLJS.Ml($CLJS.Bl(this,function(b){return $CLJS.fd(a.tb,b)},function(b){return new $CLJS.Dd(null,a.tb,new $CLJS.Dd(null,b,null,1,null),2,null)}))};$CLJS.h.Ca=function(){return $CLJS.Jd($CLJS.$N,this.tb)};$CLJS.h.na=$CLJS.gc;$CLJS.h.S=function(a,b){return $CLJS.Hb(b,this.Ca(null))};Uo.o=function(a){return new To($CLJS.ig(a),null,null,null)};Uo.J=0;Uo.I=function(a){return this.o($CLJS.y(a))};$CLJS.h=Vo.prototype;$CLJS.h.ga=function(a,b){return this.N(null,b,null)};
$CLJS.h.N=function(a,b,c){switch(b instanceof $CLJS.M?b.T:null){case "preds-and-schemas":return this.ab;case "error-symbol":return this.cb;default:return $CLJS.K.j(this.l,b,c)}};$CLJS.h.oa=function(a,b,c){return $CLJS.qd(function(d,e){var f=$CLJS.I(e,0,null);e=$CLJS.I(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$CLJS.h.S=function(a,b,c){return $CLJS.rg(b,function(d){return $CLJS.rg(b,$CLJS.wg,""," ","",c,d)},"#schema.core.ConditionalSchema{",", ","}",c,$CLJS.th.h(new $CLJS.P(null,2,5,$CLJS.Q,[new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.ON,this.ab],null),new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.IN,this.cb],null)],null),this.l))};$CLJS.h.ia=function(){return new $CLJS.kf(this,2,new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.ON,$CLJS.IN],null),$CLJS.p(this.l)?$CLJS.Wb(this.l):$CLJS.oe())};$CLJS.h.Z=function(){return this.C};
$CLJS.h.ba=function(){return 2+$CLJS.D(this.l)};$CLJS.h.X=function(){var a=this.B;return null!=a?a:this.B=a=1418435858^$CLJS.vc(this)};$CLJS.h.W=function(a,b){return null!=b&&this.constructor===b.constructor&&$CLJS.E.h(this.ab,b.ab)&&$CLJS.E.h(this.cb,b.cb)&&$CLJS.E.h(this.l,b.l)};
$CLJS.h.ra=function(a,b){return $CLJS.fd(new $CLJS.R(null,new $CLJS.n(null,2,[$CLJS.ON,null,$CLJS.IN,null],null),null),b)?$CLJS.sh.h($CLJS.sb($CLJS.uf.h($CLJS.ie,this),this.C),b):new Vo(this.ab,this.cb,this.C,$CLJS.ke($CLJS.sh.h(this.l,b)),null)};$CLJS.h.ma=function(a,b){switch(b instanceof $CLJS.M?b.T:null){case "preds-and-schemas":case "error-symbol":return!0;default:return $CLJS.fd(this.l,b)}};
$CLJS.h.V=function(a,b,c){return $CLJS.p($CLJS.O.h?$CLJS.O.h($CLJS.ON,b):$CLJS.O.call(null,$CLJS.ON,b))?new Vo(c,this.cb,this.C,this.l,null):$CLJS.p($CLJS.O.h?$CLJS.O.h($CLJS.IN,b):$CLJS.O.call(null,$CLJS.IN,b))?new Vo(this.ab,c,this.C,this.l,null):new Vo(this.ab,this.cb,this.C,$CLJS.Cg.j(this.l,b,c),null)};$CLJS.h.$=function(){return $CLJS.y($CLJS.th.h(new $CLJS.P(null,2,5,$CLJS.Q,[new $CLJS.gd($CLJS.ON,this.ab),new $CLJS.gd($CLJS.IN,this.cb)],null),this.l))};
$CLJS.h.aa=function(a,b){return new Vo(this.ab,this.cb,b,this.l,this.B)};$CLJS.h.ca=function(a,b){return $CLJS.Zc(b)?this.V(null,$CLJS.Pc(b,0),$CLJS.Pc(b,1)):$CLJS.qd($CLJS.Xa,this,b)};
$CLJS.h.Da=function(){var a=this;return $CLJS.Sl($CLJS.qm,function(){return function d(c){return new $CLJS.Ld(null,function(){for(;;){var e=$CLJS.y(c);if(e){if($CLJS.ad(e)){var f=$CLJS.Rb(e),g=$CLJS.D(f),l=$CLJS.Od(g);a:for(var k=0;;)if(k<g){var m=$CLJS.Pc(f,k),r=$CLJS.I(m,0,null);m=$CLJS.I(m,1,null);l.add(new $CLJS.n(null,2,[$CLJS.YM,r,$CLJS.Xj,m],null));k+=1}else{f=!0;break a}return f?$CLJS.Rd($CLJS.Td(l),d($CLJS.Sb(e))):$CLJS.Rd($CLJS.Td(l),null)}f=$CLJS.z(e);l=$CLJS.I(f,0,null);f=$CLJS.I(f,1,
null);return $CLJS.Jd(new $CLJS.n(null,2,[$CLJS.YM,l,$CLJS.Xj,f],null),d($CLJS.qc(e)))}return null}},null)}(a.ab)}(),function(b){var c=a.cb;c=$CLJS.p(c)?c:$CLJS.E.h(1,$CLJS.D(a.ab))?$CLJS.Fg.g($CLJS.ol($CLJS.z($CLJS.z(a.ab)))):$CLJS.nN;return new $CLJS.Dd(null,c,new $CLJS.Dd(null,b,null,1,null),2,null)})};
$CLJS.h.Ca=function(){return $CLJS.Jd($CLJS.oN,$CLJS.th.h($CLJS.Di(function(a){var b=$CLJS.I(a,0,null);a=$CLJS.I(a,1,null);return new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Fg.g($CLJS.ol(b)),$CLJS.vm(a)],null)},$CLJS.G([this.ab])),$CLJS.p(this.cb)?new $CLJS.P(null,1,5,$CLJS.Q,[this.cb],null):null))};$CLJS.h.na=$CLJS.gc;$CLJS.h.S=function(a,b){return $CLJS.Hb(b,this.Ca(null))};
var Wo=function Wo(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Wo.o(0<c.length?new $CLJS.lc(c.slice(0),0,null):null)};
Wo.o=function(a){if(!$CLJS.y(a)||!($CLJS.Lo($CLJS.D(a))||$CLJS.Nc(a)instanceof $CLJS.t))throw Error($CLJS.kl("Expected even, nonzero number of args (with optional trailing symbol); got %s",$CLJS.G([$CLJS.D(a)])));return new Vo($CLJS.Ue(function(){return function d(c){return new $CLJS.Ld(null,function(){for(;;){var e=$CLJS.y(c);if(e){if($CLJS.ad(e)){var f=$CLJS.Rb(e),g=$CLJS.D(f),l=$CLJS.Od(g);a:for(var k=0;;)if(k<g){var m=$CLJS.Pc(f,k),r=$CLJS.I(m,0,null),v=$CLJS.I(m,1,null);m=l;if(!$CLJS.pm(r))throw Error($CLJS.ll(["Conditional predicate ",
$CLJS.q.g(r)," must be a function"].join("")));r=new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.E.h(r,$CLJS.Ou)?$CLJS.Ho(!0):r,v],null);m.add(r);k+=1}else{f=!0;break a}return f?$CLJS.Rd($CLJS.Td(l),d($CLJS.Sb(e))):$CLJS.Rd($CLJS.Td(l),null)}f=$CLJS.z(e);l=$CLJS.I(f,0,null);f=$CLJS.I(f,1,null);if(!$CLJS.pm(l))throw Error($CLJS.ll(["Conditional predicate ",$CLJS.q.g(l)," must be a function"].join("")));l=new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.E.h(l,$CLJS.Ou)?$CLJS.Ho(!0):l,f],null);return $CLJS.Jd(l,d($CLJS.qc(e)))}return null}},
null)}(Qo(2,2,a))}()),$CLJS.Lo($CLJS.D(a))?null:$CLJS.Nc(a),null,null,null)};Wo.J=0;Wo.I=function(a){return this.o($CLJS.y(a))};$CLJS.h=Yo.prototype;$CLJS.h.ga=function(a,b){return this.N(null,b,null)};$CLJS.h.N=function(a,b,c){switch(b instanceof $CLJS.M?b.T:null){case "derefable":return this.ib;default:return $CLJS.K.j(this.l,b,c)}};$CLJS.h.oa=function(a,b,c){return $CLJS.qd(function(d,e){var f=$CLJS.I(e,0,null);e=$CLJS.I(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$CLJS.h.S=function(a,b,c){return $CLJS.rg(b,function(d){return $CLJS.rg(b,$CLJS.wg,""," ","",c,d)},"#schema.core.Recursive{",", ","}",c,$CLJS.th.h(new $CLJS.P(null,1,5,$CLJS.Q,[new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.SN,this.ib],null)],null),this.l))};$CLJS.h.ia=function(){return new $CLJS.kf(this,1,new $CLJS.P(null,1,5,$CLJS.Q,[$CLJS.SN],null),$CLJS.p(this.l)?$CLJS.Wb(this.l):$CLJS.oe())};$CLJS.h.Z=function(){return this.C};$CLJS.h.ba=function(){return 1+$CLJS.D(this.l)};
$CLJS.h.X=function(){var a=this.B;return null!=a?a:this.B=a=1521498755^$CLJS.vc(this)};$CLJS.h.W=function(a,b){return null!=b&&this.constructor===b.constructor&&$CLJS.E.h(this.ib,b.ib)&&$CLJS.E.h(this.l,b.l)};$CLJS.h.ra=function(a,b){return $CLJS.fd(new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.SN,null],null),null),b)?$CLJS.sh.h($CLJS.sb($CLJS.uf.h($CLJS.ie,this),this.C),b):new Yo(this.ib,this.C,$CLJS.ke($CLJS.sh.h(this.l,b)),null)};
$CLJS.h.ma=function(a,b){switch(b instanceof $CLJS.M?b.T:null){case "derefable":return!0;default:return $CLJS.fd(this.l,b)}};$CLJS.h.V=function(a,b,c){return $CLJS.p($CLJS.O.h?$CLJS.O.h($CLJS.SN,b):$CLJS.O.call(null,$CLJS.SN,b))?new Yo(c,this.C,this.l,null):new Yo(this.ib,this.C,$CLJS.Cg.j(this.l,b,c),null)};$CLJS.h.$=function(){return $CLJS.y($CLJS.th.h(new $CLJS.P(null,1,5,$CLJS.Q,[new $CLJS.gd($CLJS.SN,this.ib)],null),this.l))};$CLJS.h.aa=function(a,b){return new Yo(this.ib,b,this.l,this.B)};
$CLJS.h.ca=function(a,b){return $CLJS.Zc(b)?this.V(null,$CLJS.Pc(b,0),$CLJS.Pc(b,1)):$CLJS.qd($CLJS.Xa,this,b)};$CLJS.h.Da=function(){return $CLJS.Tl($CLJS.qm,new $CLJS.P(null,1,5,$CLJS.Q,[new $CLJS.n(null,1,[$CLJS.Xj,$CLJS.pb(this.ib)],null)],null))};
$CLJS.h.Ca=function(){if(this.ib instanceof $CLJS.u){var a=$CLJS.Sc(this.ib);var b=$CLJS.je(a);a=$CLJS.K.h(b,$CLJS.aj);b=$CLJS.K.h(b,$CLJS.S);a=$CLJS.Fg.g([$CLJS.q.g(a),"/",$CLJS.q.g(b)].join(""));a=new $CLJS.Dd(null,$CLJS.Kj,new $CLJS.Dd(null,a,null,1,null),2,null)}else a=$CLJS.bO;return new $CLJS.Dd(null,$CLJS.KN,new $CLJS.Dd(null,a,null,1,null),2,null)};$CLJS.h.na=$CLJS.gc;$CLJS.h.S=function(a,b){return $CLJS.Hb(b,this.Ca(null))};$CLJS.h=$o.prototype;
$CLJS.h.ga=function(a,b){return this.N(null,b,null)};$CLJS.h.N=function(a,b,c){switch(b instanceof $CLJS.M?b.T:null){case "schema":return this.U;default:return $CLJS.K.j(this.l,b,c)}};$CLJS.h.oa=function(a,b,c){return $CLJS.qd(function(d,e){var f=$CLJS.I(e,0,null);e=$CLJS.I(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$CLJS.h.S=function(a,b,c){return $CLJS.rg(b,function(d){return $CLJS.rg(b,$CLJS.wg,""," ","",c,d)},"#schema.core.Maybe{",", ","}",c,$CLJS.th.h(new $CLJS.P(null,1,5,$CLJS.Q,[new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Xj,this.U],null)],null),this.l))};$CLJS.h.ia=function(){return new $CLJS.kf(this,1,new $CLJS.P(null,1,5,$CLJS.Q,[$CLJS.Xj],null),$CLJS.p(this.l)?$CLJS.Wb(this.l):$CLJS.oe())};$CLJS.h.Z=function(){return this.C};$CLJS.h.ba=function(){return 1+$CLJS.D(this.l)};
$CLJS.h.X=function(){var a=this.B;return null!=a?a:this.B=a=-805411239^$CLJS.vc(this)};$CLJS.h.W=function(a,b){return null!=b&&this.constructor===b.constructor&&$CLJS.E.h(this.U,b.U)&&$CLJS.E.h(this.l,b.l)};$CLJS.h.ra=function(a,b){return $CLJS.fd(new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.Xj,null],null),null),b)?$CLJS.sh.h($CLJS.sb($CLJS.uf.h($CLJS.ie,this),this.C),b):new $o(this.U,this.C,$CLJS.ke($CLJS.sh.h(this.l,b)),null)};
$CLJS.h.ma=function(a,b){switch(b instanceof $CLJS.M?b.T:null){case "schema":return!0;default:return $CLJS.fd(this.l,b)}};$CLJS.h.V=function(a,b,c){return $CLJS.p($CLJS.O.h?$CLJS.O.h($CLJS.Xj,b):$CLJS.O.call(null,$CLJS.Xj,b))?new $o(c,this.C,this.l,null):new $o(this.U,this.C,$CLJS.Cg.j(this.l,b,c),null)};$CLJS.h.$=function(){return $CLJS.y($CLJS.th.h(new $CLJS.P(null,1,5,$CLJS.Q,[new $CLJS.gd($CLJS.Xj,this.U)],null),this.l))};$CLJS.h.aa=function(a,b){return new $o(this.U,b,this.l,this.B)};
$CLJS.h.ca=function(a,b){return $CLJS.Zc(b)?this.V(null,$CLJS.Pc(b,0),$CLJS.Pc(b,1)):$CLJS.qd($CLJS.Xa,this,b)};$CLJS.h.Da=function(){return $CLJS.Tl($CLJS.qm,new $CLJS.P(null,2,5,$CLJS.Q,[new $CLJS.n(null,2,[$CLJS.YM,$CLJS.mi,$CLJS.Xj,$CLJS.Am(null)],null),new $CLJS.n(null,1,[$CLJS.Xj,this.U],null)],null))};$CLJS.h.Ca=function(){return new $CLJS.Dd(null,$CLJS.LN,new $CLJS.Dd(null,$CLJS.vm(this.U),null,1,null),2,null)};$CLJS.h.na=$CLJS.gc;$CLJS.h.S=function(a,b){return $CLJS.Hb(b,this.Ca(null))};
$CLJS.hp=function hp(a){switch(arguments.length){case 1:return hp.g(arguments[0]);case 2:return hp.h(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return hp.o(arguments[0],arguments[1],new $CLJS.lc(c.slice(2),0,null))}};$CLJS.hp.g=function(){return!0};$CLJS.hp.h=function(a,b){return!$CLJS.E.h(a,b)};
$CLJS.hp.o=function(a,b,c){if($CLJS.E.h(a,b))return!1;a=$CLJS.gg([a,b]);for(b=c;;){var d=$CLJS.z(b);c=$CLJS.C(b);if($CLJS.p(b)){if($CLJS.fd(a,d))return!1;a=$CLJS.Gd.h(a,d);b=c}else return!0}};$CLJS.hp.I=function(a){var b=$CLJS.z(a),c=$CLJS.C(a);a=$CLJS.z(c);c=$CLJS.C(c);return this.o(b,a,c)};$CLJS.hp.J=2;$CLJS.gO=new $CLJS.M(null,"get-month","get-month",-369374731);hO=new $CLJS.M(null,"exp","exp",-261706262);
iO=new $CLJS.t("metabase.mbql.schema","datetime-subtract","metabase.mbql.schema/datetime-subtract",-1242286173,null);jO=new $CLJS.M(null,"pattern","pattern",242135423);$CLJS.kO=new $CLJS.M(null,"substring","substring",1140866276);$CLJS.lO=new $CLJS.M(null,"dimension","dimension",543254198);mO=new $CLJS.t("metabase.mbql.schema","time-interval","metabase.mbql.schema/time-interval",1275783375,null);nO=new $CLJS.M(null,"right-join","right-join",-56349359);
oO=new $CLJS.t("metabase.mbql.schema","replace","metabase.mbql.schema/replace",1269362826,null);pO=new $CLJS.M(null,"disable-mbql-\x3enative?","disable-mbql-\x3enative?",1103196677);qO=new $CLJS.M(null,"query-hash","query-hash",-1524484965);rO=new $CLJS.M(null,"from","from",1815293044);sO=new $CLJS.t(null,"does-not-contain","does-not-contain",1365584674,null);tO=new $CLJS.M(null,"add-default-userland-constraints?","add-default-userland-constraints?",2039156190);
uO=new $CLJS.M(null,"snippet-name","snippet-name",819240328);vO=new $CLJS.t("metabase.mbql.schema","max","metabase.mbql.schema/max",-1397867614,null);wO=new $CLJS.t("metabase.mbql.schema","get-day","metabase.mbql.schema/get-day",-1600012951,null);xO=new $CLJS.M(null,"basic-aggregations","basic-aggregations",-1628959228);$CLJS.yO=new $CLJS.M(null,"aggregation-options","aggregation-options",-1904917550);zO=new $CLJS.t("metabase.mbql.schema","cum-count","metabase.mbql.schema/cum-count",596526831,null);
AO=new $CLJS.M("location","zip_code","location/zip_code",1641155222);BO=new $CLJS.t(null,"ExpressionArg","ExpressionArg",1060743736,null);CO=new $CLJS.t(null,"get-hour","get-hour",-2031721710,null);DO=new $CLJS.t(null,"ag:var","ag:var",-1804440286,null);EO=new $CLJS.M(null,"lon-max","lon-max",1590224717);FO=new $CLJS.M(null,"ceil","ceil",-1824929952);GO=new $CLJS.t(null,"stddev","stddev",775056588,null);HO=new $CLJS.M(null,"snippet","snippet",953581994);
IO=new $CLJS.t("metabase.mbql.schema","case","metabase.mbql.schema/case",2100482976,null);$CLJS.JO=new $CLJS.M(null,"query","query",-1288509510);KO=new $CLJS.M(null,"power","power",-937852079);LO=new $CLJS.M(null,"segment","segment",-964921196);MO=new $CLJS.M(null,"concat","concat",-2108183992);NO=new $CLJS.M(null,"lat-field","lat-field",-830652957);OO=new $CLJS.M(null,"second","second",-444702010);PO=new $CLJS.t("metabase.mbql.schema","min","metabase.mbql.schema/min",-1534510688,null);
QO=new $CLJS.t(null,"FieldOptions","FieldOptions",-1536320891,null);RO=new $CLJS.M("location","country","location/country",1666636202);SO=new $CLJS.M(null,"abs","abs",-246026477);TO=new $CLJS.M(null,"convert-timezone","convert-timezone",-124803001);$CLJS.UO=new $CLJS.M(null,"fields","fields",-1932066230);$CLJS.VO=new $CLJS.M(null,"iso","iso",-1366207543);WO=new $CLJS.t("metabase.mbql.schema","Aggregation","metabase.mbql.schema/Aggregation",-1908264889,null);
XO=new $CLJS.t("metabase.mbql.schema","count-where","metabase.mbql.schema/count-where",-1224231786,null);YO=new $CLJS.M(null,"unary","unary",-989314568);$CLJS.ZO=new $CLJS.M(null,"is-null","is-null",-1997050930);$O=new $CLJS.t(null,"ceil","ceil",-184398425,null);aP=new $CLJS.M(null,"lon-min","lon-min",-787291357);bP=new $CLJS.M(null,"match","match",1220059550);cP=new $CLJS.t(null,"count-where","count-where",2025939247,null);dP=new $CLJS.M(null,"max-results-bare-rows","max-results-bare-rows",2096475889);
eP=new $CLJS.M(null,"embedded-question","embedded-question",-2146473954);fP=new $CLJS.t(null,"sum","sum",1777518341,null);gP=new $CLJS.M(null,"num-bins","num-bins",847672055);hP=new $CLJS.t("metabase.mbql.schema","!\x3d","metabase.mbql.schema/!\x3d",-807630752,null);$CLJS.iP=new $CLJS.M("date","range","date/range",1647265776);$CLJS.jP=new $CLJS.M(null,"get-second","get-second",-2065946318);$CLJS.kP=new $CLJS.M(null,"get-year","get-year",-936011274);
lP=new $CLJS.t(null,"between","between",-1523336493,null);mP=new $CLJS.M(null,"absolute-datetime","absolute-datetime",-560340465);nP=new $CLJS.M(null,"clause-form","clause-form",1820463737);oP=new $CLJS.t("metabase.mbql.schema","log","metabase.mbql.schema/log",-899459908,null);$CLJS.pP=new $CLJS.M(null,"second-of-minute","second-of-minute",222734326);qP=new $CLJS.t(null,"field","field",338095027,null);rP=new $CLJS.M(null,"segment-id","segment-id",1810133590);
$CLJS.sP=new $CLJS.M(null,"between","between",1131099276);$CLJS.tP=new $CLJS.M(null,"is-empty","is-empty",-1040302908);$CLJS.uP=new $CLJS.M(null,"filter","filter",-948537934);$CLJS.vP=new $CLJS.M(null,"distinct","distinct",-1788879121);wP=new $CLJS.t(null,"not-null","not-null",313812992,null);xP=new $CLJS.M(null,"template-tag","template-tag",310841038);yP=new $CLJS.t("metabase.mbql.schema","datetime-diff","metabase.mbql.schema/datetime-diff",1838258811,null);
zP=new $CLJS.t(null,"regex-match-first","regex-match-first",983231809,null);$CLJS.AP=new $CLJS.M(null,"context","context",-830191113);BP=new $CLJS.t(null,"get-year","get-year",704520253,null);CP=new $CLJS.M(null,"format-rows?","format-rows?",992129486);$CLJS.DP=new $CLJS.M(null,"parameters","parameters",-1229919748);EP=new $CLJS.M(null,"json-download","json-download",-971130133);FP=new $CLJS.M(null,"card","card",-1430355152);GP=new $CLJS.M(null,"string-or-field","string-or-field",-1970678542);
HP=new $CLJS.t(null,"!\x3d","!\x3d",-201205829,null);IP=new $CLJS.t("metabase.mbql.schema","ag:var","metabase.mbql.schema/ag:var",1295047163,null);JP=new $CLJS.t("metabase.mbql.schema","ceil","metabase.mbql.schema/ceil",-1404628626,null);$CLJS.KP=new $CLJS.M(null,"var","var",-769682797);$CLJS.LP=new $CLJS.M(null,"next","next",-117701485);$CLJS.MP=new $CLJS.t(null,"expression","expression",1842843403,null);$CLJS.NP=new $CLJS.M("date","month-year","date/month-year",1948031290);
OP=new $CLJS.t(null,"ends-with","ends-with",1183740516,null);PP=new $CLJS.t("metabase.mbql.schema","BooleanExpression","metabase.mbql.schema/BooleanExpression",-469303836,null);QP=new $CLJS.t("s","recursive","s/recursive",-1935549792,null);$CLJS.RP=new $CLJS.M(null,"joins","joins",1033962699);SP=new $CLJS.M(null,"slug","slug",2029314850);$CLJS.TP=new $CLJS.M(null,"display-name","display-name",694513143);$CLJS.UP=new $CLJS.M(null,"source-field","source-field",933829534);
VP=new $CLJS.t(null,"Field","Field",430385967,null);WP=new $CLJS.t(null,"convert-timezone","convert-timezone",1515728526,null);XP=new $CLJS.t("helpers","IntGreaterThanZero","helpers/IntGreaterThanZero",1743901629,null);YP=new $CLJS.t("metabase.mbql.schema","absolute-datetime","metabase.mbql.schema/absolute-datetime",-1180642019,null);$CLJS.ZP=new $CLJS.M(null,"inside","inside",1972503011);$P=new $CLJS.M(null,"disable-max-results?","disable-max-results?",857693204);
aQ=new $CLJS.M(null,"items","items",1031954938);bQ=new $CLJS.M(null,"more","more",-2058821800);cQ=new $CLJS.M(null,"first-clause","first-clause",-20953491);dQ=new $CLJS.t(null,"OrderComparable","OrderComparable",772072595,null);eQ=new $CLJS.t("metabase.mbql.schema","NumericExpression*","metabase.mbql.schema/NumericExpression*",-254856038,null);$CLJS.fQ=new $CLJS.M(null,"week-of-year-iso","week-of-year-iso",-1827744293);
gQ=new $CLJS.t("metabase.mbql.schema","ends-with","metabase.mbql.schema/ends-with",-2117292579,null);$CLJS.hQ=new $CLJS.M(null,"case","case",1143702196);$CLJS.iQ=new $CLJS.M(null,"not-empty","not-empty",388922063);jQ=new $CLJS.t(null,"contains","contains",-1977535957,null);kQ=new $CLJS.t("metabase.mbql.schema","floor","metabase.mbql.schema/floor",422926927,null);lQ=new $CLJS.t("metabase.mbql.schema","expression","metabase.mbql.schema/expression",370334320,null);
mQ=new $CLJS.t(null,"BooleanExpression","BooleanExpression",1027887421,null);nQ=new $CLJS.M("number","\x3d","number/\x3d",-2094581309);$CLJS.oQ=new $CLJS.M(null,"widget-type","widget-type",1836256899);$CLJS.pQ=new $CLJS.M(null,"fingerprint","fingerprint",598613022);qQ=new $CLJS.M(null,"millisecond","millisecond",-540123566);rQ=new $CLJS.t(null,"is-null","is-null",-356519403,null);sQ=new $CLJS.M(null,"other-clauses","other-clauses",1570511021);
$CLJS.tQ=new $CLJS.M(null,"year-of-era","year-of-era",682445876);uQ=new $CLJS.M(null,"map-tiles","map-tiles",1961865797);vQ=new $CLJS.M(null,"required","required",1807647006);wQ=new $CLJS.t(null,"Filter*","Filter*",-1193205185,null);xQ=new $CLJS.M(null,"datetime-x","datetime-x",1519265947);yQ=new $CLJS.M(null,"datetime-y","datetime-y",-1666955771);zQ=new $CLJS.t(null,"CaseClauses","CaseClauses",-1749071354,null);AQ=new $CLJS.M(null,"date-arithmetics","date-arithmetics",-1832808309);
BQ=new $CLJS.M("string","contains","string/contains",1602423827);CQ=new $CLJS.t("metabase.mbql.schema","metric","metabase.mbql.schema/metric",1030004285,null);DQ=new $CLJS.M("string","!\x3d","string/!\x3d",-1083772573);$CLJS.EQ=new $CLJS.M(null,"datetime-diff","datetime-diff",1133112155);FQ=new $CLJS.t(null,"IntGreaterThanZeroOrNumericExpression","IntGreaterThanZeroOrNumericExpression",2098230228,null);GQ=new $CLJS.t("metabase.mbql.schema","count","metabase.mbql.schema/count",678066683,null);
HQ=new $CLJS.t("metabase.mbql.schema","field","metabase.mbql.schema/field",1566852856,null);$CLJS.IQ=new $CLJS.M(null,"interval","interval",1708495417);JQ=new $CLJS.t(null,"share","share",1051097594,null);KQ=new $CLJS.t("metabase.mbql.schema","distinct","metabase.mbql.schema/distinct",-823840515,null);LQ=new $CLJS.t("metabase.mbql.schema","round","metabase.mbql.schema/round",314817788,null);MQ=new $CLJS.t("metabase.mbql.schema","get-quarter","metabase.mbql.schema/get-quarter",2007639089,null);
NQ=new $CLJS.M(null,"xlsx-download","xlsx-download",-1622892009);OQ=new $CLJS.t(null,"FieldOrAggregationReference","FieldOrAggregationReference",85477856,null);PQ=new $CLJS.t("metabase.mbql.schema","contains","metabase.mbql.schema/contains",1399250832,null);QQ=new $CLJS.M(null,"collection","collection",-683361892);$CLJS.RQ=new $CLJS.M("metadata","dataset-metadata","metadata/dataset-metadata",-728376469);SQ=new $CLJS.t("metabase.mbql.schema","is-empty","metabase.mbql.schema/is-empty",1686480962,null);
TQ=new $CLJS.M("number","\x3c\x3d","number/\x3c\x3d",-1499316353);UQ=new $CLJS.t(null,"Aggregation","Aggregation",-955933538,null);VQ=new $CLJS.t(null,"metric","metric",2049329604,null);WQ=new $CLJS.t(null,"concat","concat",-467652465,null);XQ=new $CLJS.M(null,"variable","variable",-281346492);$CLJS.YQ=new $CLJS.M("date","quarter-year","date/quarter-year",-1453950150);ZQ=new $CLJS.t(null,"TimeUnit","TimeUnit",1200517789,null);$CLJS.$Q=new $CLJS.M("date","relative","date/relative",25987732);
$CLJS.aR=new $CLJS.M(null,"alias","alias",-2039751630);$CLJS.bR=new $CLJS.M(null,"percentile","percentile",-601188752);cR=new $CLJS.M("location","city","location/city",-1746973325);dR=new $CLJS.M(null,"public-dashboard","public-dashboard",645968405);eR=new $CLJS.t("metabase.mbql.schema","desc","metabase.mbql.schema/desc",-2050113424,null);fR=new $CLJS.M("number","\x3e\x3d","number/\x3e\x3d",-1670691032);gR=new $CLJS.M("number","between","number/between",97700581);
hR=new $CLJS.t("metabase.mbql.schema","cum-sum","metabase.mbql.schema/cum-sum",-2078342061,null);$CLJS.iR=new $CLJS.M(null,"not-null","not-null",-1326718535);jR=new $CLJS.M(null,"replacement","replacement",-1836238839);kR=new $CLJS.t(null,"sqrt","sqrt",370479598,null);lR=new $CLJS.t("metabase.mbql.schema","DatetimeExpression","metabase.mbql.schema/DatetimeExpression",-1440012226,null);mR=new $CLJS.M(null,"sqrt","sqrt",-1270051929);$CLJS.nR=new $CLJS.M(null,"semantic_type","semantic_type",272485089);
oR=new $CLJS.M(null,"metric-id","metric-id",-686486942);pR=new $CLJS.t(null,"*","*",345799209,null);qR=new $CLJS.t(null,"+","+",-740910886,null);rR=new $CLJS.t(null,"-","-",-471816912,null);sR=new $CLJS.t(null,"/","/",-1371932971,null);$CLJS.tR=new $CLJS.M(null,"breakout","breakout",-732419050);uR=new $CLJS.t(null,"template-tag","template-tag",1951372565,null);vR=new $CLJS.M(null,"allowed-for","allowed-for",122724334);wR=new $CLJS.M(null,"question","question",-1411720117);
xR=new $CLJS.t(null,"asc","asc",1997386096,null);yR=new $CLJS.t("metabase.mbql.schema","DatetimeExpression*","metabase.mbql.schema/DatetimeExpression*",-1766428848,null);$CLJS.zR=new $CLJS.M(null,"us","us",746429226);AR=new $CLJS.M(null,"pulse-id","pulse-id",1331432237);BR=new $CLJS.t("metabase.mbql.schema","BooleanExpression*","metabase.mbql.schema/BooleanExpression*",-630544184,null);CR=new $CLJS.t(null,"\x3c\x3d","\x3c\x3d",1244895369,null);DR=new $CLJS.t(null,"\x3c","\x3c",993667236,null);
ER=new $CLJS.t(null,"\x3e","\x3e",1085014381,null);$CLJS.FR=new $CLJS.M(null,"aggregation","aggregation",1597476696);$CLJS.GR=new $CLJS.M(null,"relative-datetime","relative-datetime",1285169278);$CLJS.HR=new $CLJS.M(null,"source-metadata","source-metadata",-477816085);IR=new $CLJS.M("string","ends-with","string/ends-with",302681156);JR=new $CLJS.t("metabase.mbql.schema","get-year","metabase.mbql.schema/get-year",-265030428,null);$CLJS.KR=new $CLJS.t("s","Str","s/Str",907974338,null);
LR=new $CLJS.t(null,"RelativeDatetimeUnit","RelativeDatetimeUnit",-1157637501,null);$CLJS.MR=new $CLJS.M(null,"desc","desc",2093485764);NR=new $CLJS.t(null,"and","and",668631710,null);OR=new $CLJS.t(null,"\x3e\x3d","\x3e\x3d",1016916022,null);PR=new $CLJS.t(null,"round","round",-645002441,null);QR=new $CLJS.M(null,"to","to",192099007);$CLJS.RR=new $CLJS.M(null,"starts-with","starts-with",366503009);$CLJS.SR=new $CLJS.M("date","single","date/single",1554682003);
TR=new $CLJS.t(null,"DatetimeExpression*","DatetimeExpression*",1609939947,null);$CLJS.UR=new $CLJS.M(null,"does-not-contain","does-not-contain",-274946853);VR=new $CLJS.t("metabase.mbql.schema","not-null","metabase.mbql.schema/not-null",1248581449,null);WR=new $CLJS.t(null,"exp","exp",1378825265,null);YR=new $CLJS.t(null,"Filter","Filter",-424893332,null);ZR=new $CLJS.t("metabase.mbql.schema","MBQLQuery","metabase.mbql.schema/MBQLQuery",1964355302,null);
$R=new $CLJS.t(null,"cum-count","cum-count",-323900016,null);aS=new $CLJS.M(null,"dashboard-id","dashboard-id",1965414288);bS=new $CLJS.t(null,"BooleanExpression*","BooleanExpression*",623370113,null);$CLJS.cS=new $CLJS.M(null,"source-table","source-table",-225307692);dS=new $CLJS.M(null,"embedded-dashboard","embedded-dashboard",-485078014);eS=new $CLJS.M(null,"datetime","datetime",494675702);fS=new $CLJS.t("metabase.mbql.schema","sqrt","metabase.mbql.schema/sqrt",-824662873,null);
$CLJS.gS=new $CLJS.M(null,"avg","avg",197406200);hS=new $CLJS.M(null,"now","now",-1650525531);iS=new $CLJS.M(null,"metric","metric",408798077);jS=new $CLJS.t(null,"floor","floor",-772394748,null);kS=new $CLJS.M(null,"middleware","middleware",1462115504);lS=new $CLJS.t("metabase.mbql.schema","share","metabase.mbql.schema/share",1977664161,null);mS=new $CLJS.M(null,"requires-features","requires-features",-101116256);nS=new $CLJS.M(null,"percentile-aggregations","percentile-aggregations",1241763983);
X=new $CLJS.M(null,"clause-name","clause-name",-996419059);oS=new $CLJS.t(null,"now","now",-9994004,null);pS=new $CLJS.t("metabase.mbql.schema","datetime-add","metabase.mbql.schema/datetime-add",654654691,null);qS=new $CLJS.t(null,"avg","avg",1837937727,null);$CLJS.rS=new $CLJS.M(null,"asc","asc",356854569);sS=new $CLJS.t(null,"sum-where","sum-where",-519087341,null);tS=new $CLJS.M(null,"max-results","max-results",-32858165);
uS=new $CLJS.t("metabase.mbql.schema","get-second","metabase.mbql.schema/get-second",560421410,null);vS=new $CLJS.t(null,"case","case",-1510733573,null);wS=new $CLJS.t(null,"ParameterType","ParameterType",-442355043,null);xS=new $CLJS.t("js","Date","js/Date",946858373,null);yS=new $CLJS.t(null,"StringExpression*","StringExpression*",1110382599,null);zS=new $CLJS.t(null,"distinct","distinct",-148347594,null);AS=new $CLJS.M(null,"floor","floor",1882041021);BS=new $CLJS.M(null,"none","none",1333468478);
CS=new $CLJS.t(null,"get-second","get-second",-425414791,null);DS=new $CLJS.t(null,"DatetimeExpression","DatetimeExpression",1944354145,null);$CLJS.ES=new $CLJS.M(null,"join-alias","join-alias",1454206794);FS=new $CLJS.t(null,"is-empty","is-empty",600228619,null);$CLJS.GS=new $CLJS.M(null,"instance","instance",-2121349050);HS=new $CLJS.t(null,"StringExpression","StringExpression",-233088561,null);IS=new $CLJS.t("metabase.mbql.schema","segment","metabase.mbql.schema/segment",-512121472,null);
$CLJS.JS=new $CLJS.t("s","pred","s/pred",-727014287,null);KS=new $CLJS.t(null,"relative-datetime","relative-datetime",-1369266491,null);LS=new $CLJS.M("number","!\x3d","number/!\x3d",-673025509);MS=new $CLJS.t(null,"abs","abs",1394505050,null);NS=new $CLJS.t(null,"datetime-diff","datetime-diff",-1521323614,null);OS=new $CLJS.t("metabase.mbql.schema","get-hour","metabase.mbql.schema/get-hour",-809777063,null);$CLJS.PS=new $CLJS.t("s","cond-pre","s/cond-pre",-923707600,null);
QS=new $CLJS.M(null,"date","date",-1463434462);RS=new $CLJS.M(null,"second-clause","second-clause",-461435645);SS=new $CLJS.M(null,"left-join","left-join",-672831855);TS=new $CLJS.t("metabase.mbql.schema","get-day-of-week","metabase.mbql.schema/get-day-of-week",551389774,null);$CLJS.US=new $CLJS.M(null,"contains","contains",676899812);VS=new $CLJS.t(null,"rtrim","rtrim",979195078,null);WS=new $CLJS.t("metabase.mbql.schema","or","metabase.mbql.schema/or",-1500355255,null);
XS=new $CLJS.t(null,"CaseOptions","CaseOptions",1989286806,null);YS=new $CLJS.t("metabase.mbql.schema","Filter","metabase.mbql.schema/Filter",-1444327113,null);ZS=new $CLJS.t(null,"or","or",1876275696,null);$S=new $CLJS.t("s","Int","s/Int",-2116888657,null);$CLJS.aT=new $CLJS.M(null,"field","field",-1302436500);bT=new $CLJS.t("metabase.mbql.schema","ltrim","metabase.mbql.schema/ltrim",52894949,null);cT=new $CLJS.t(null,"TemporalExtractUnits","TemporalExtractUnits",-1308527018,null);
dT=new $CLJS.M(null,"constraints","constraints",422775616);$CLJS.eT=new $CLJS.M(null,"cum-count","cum-count",-1964431543);fT=new $CLJS.t("metabase.mbql.schema","dimension","metabase.mbql.schema/dimension",1500199226,null);gT=new $CLJS.M(null,"csv-download","csv-download",2141432084);hT=new $CLJS.M(null,"regex-match-first","regex-match-first",-657299718);iT=new $CLJS.M(null,"operator","operator",-1860875338);jT=new $CLJS.t(null,"datetime-add","datetime-add",1850134938,null);
kT=new $CLJS.t("metabase.mbql.schema","percentile","metabase.mbql.schema/percentile",-91330436,null);lT=new $CLJS.t("metabase.mbql.schema","get-month","metabase.mbql.schema/get-month",-2104849029,null);mT=new $CLJS.t("metabase.mbql.schema","\x3e","metabase.mbql.schema/\x3e",-1619862474,null);nT=new $CLJS.t("metabase.mbql.schema","\x3d","metabase.mbql.schema/\x3d",1850085384,null);oT=new $CLJS.t("metabase.mbql.schema","\x3c","metabase.mbql.schema/\x3c",-1057391587,null);
pT=new $CLJS.t("metabase.mbql.schema","/","metabase.mbql.schema//",2004134796,null);qT=new $CLJS.t(null,"get-quarter","get-quarter",-1326657176,null);rT=new $CLJS.t("metabase.mbql.schema","-","metabase.mbql.schema/-",-1440604423,null);sT=new $CLJS.t("metabase.mbql.schema","+","metabase.mbql.schema/+",-1802115711,null);tT=new $CLJS.t("metabase.mbql.schema","*","metabase.mbql.schema/*",1842546528,null);uT=new $CLJS.t("metabase.mbql.schema","time","metabase.mbql.schema/time",-1927273576,null);
vT=new $CLJS.t(null,"temporal-extract","temporal-extract",-872749364,null);wT=new $CLJS.t("metabase.mbql.schema","sum","metabase.mbql.schema/sum",-1589890100,null);xT=new $CLJS.t("metabase.mbql.schema","between","metabase.mbql.schema/between",-302972630,null);yT=new $CLJS.M(null,"display_name","display_name",-1494335013);zT=new $CLJS.M(null,"snippet-id","snippet-id",1987785841);AT=new $CLJS.M(null,"database","database",1849087575);
BT=new $CLJS.t(null,"NumericExpressionArgOrInterval","NumericExpressionArgOrInterval",-151709337,null);CT=new $CLJS.M(null,"coalesce","coalesce",654622029);DT=new $CLJS.t(null,"get-day-of-week","get-day-of-week",-644295017,null);ET=new $CLJS.t("metabase.mbql.schema","starts-with","metabase.mbql.schema/starts-with",1063663591,null);$CLJS.FT=new $CLJS.M(null,"expressions","expressions",255689909);GT=new $CLJS.M(null,"ad-hoc","ad-hoc",-2033634036);
HT=new $CLJS.t("metabase.mbql.schema","concat","metabase.mbql.schema/concat",-580718778,null);IT=new $CLJS.M(null,"round","round",2009433328);$CLJS.JT=new $CLJS.M(null,"temporal-unit","temporal-unit",-1892306358);KT=new $CLJS.t(null,"absolute-datetime","absolute-datetime",1080191062,null);$CLJS.LT=new $CLJS.M(null,"share","share",-589433933);MT=new $CLJS.t(null,"TimeIntervalOptions","TimeIntervalOptions",1566864026,null);NT=new $CLJS.t(null,"get-day","get-day",1768100384,null);
OT=new $CLJS.t(null,"Fields","Fields",430617156,null);PT=new $CLJS.t(null,"not-empty","not-empty",2029453590,null);$CLJS.QT=new $CLJS.M(null,"native","native",-613060878);RT=new $CLJS.t("metabase.mbql.schema","variable","metabase.mbql.schema/variable",-1981984686,null);ST=new $CLJS.M(null,"case-sensitive","case-sensitive",-1005239404);$CLJS.TT=new $CLJS.M(null,"get-day","get-day",127568857);UT=new $CLJS.M(null,"page","page",849072397);VT=new $CLJS.t(null,"length","length",-2065447907,null);
WT=new $CLJS.M(null,"dashboard","dashboard",-631747508);$CLJS.XT=new $CLJS.M(null,"get-week","get-week",-888059349);YT=new $CLJS.t(null,"get-week","get-week",752472178,null);$CLJS.ZT=new $CLJS.M(null,"datetime-add","datetime-add",209603411);$T=new $CLJS.t(null,"get-month","get-month",1271156796,null);aU=new $CLJS.t(null,"dimension","dimension",-2111181571,null);$CLJS.bU=new $CLJS.M(null,"count-where","count-where",385407720);cU=new $CLJS.M(null,"regex","regex",939488856);
dU=new $CLJS.t(null,"StringFilterOptions","StringFilterOptions",-847398229,null);$CLJS.eU=new $CLJS.M(null,"get-minute","get-minute",1468086343);$CLJS.fU=new $CLJS.M(null,"base-type","base-type",1167971299);gU=new $CLJS.t("metabase.mbql.schema","not","metabase.mbql.schema/not",-113379604,null);hU=new $CLJS.t("metabase.mbql.schema","now","metabase.mbql.schema/now",665138615,null);iU=new $CLJS.t(null,"substring","substring",-1513569493,null);
jU=new $CLJS.t("metabase.mbql.schema","avg","metabase.mbql.schema/avg",-1530848906,null);kU=new $CLJS.M(null,"internal","internal",-854870097);lU=new $CLJS.t("metabase.mbql.schema","regex-match-first","metabase.mbql.schema/regex-match-first",1918122376,null);mU=new $CLJS.t("metabase.mbql.schema","substring","metabase.mbql.schema/substring",1829402610,null);nU=new $CLJS.M(null,"declared","declared",92336021);
oU=new $CLJS.t("metabase.mbql.schema","ParameterType","metabase.mbql.schema/ParameterType",-1385848876,null);$CLJS.pU=new $CLJS.M(null,"get-day-of-week","get-day-of-week",2010140752);qU=new $CLJS.M(null,"more-values-or-fields","more-values-or-fields",-886177554);rU=new $CLJS.t(null,"ltrim","ltrim",-1000166486,null);sU=new $CLJS.M(null,"standard-deviation-aggregations","standard-deviation-aggregations",-1683333464);
tU=new $CLJS.t("metabase.mbql.schema","rtrim","metabase.mbql.schema/rtrim",1937815937,null);uU=new $CLJS.t("metabase.mbql.schema","length","metabase.mbql.schema/length",-844221500,null);$CLJS.vU=new $CLJS.M(null,"ends-with","ends-with",-456791011);wU=new $CLJS.t("metabase.mbql.schema","coalesce","metabase.mbql.schema/coalesce",-1048570669,null);xU=new $CLJS.t("metabase.mbql.schema","not-empty","metabase.mbql.schema/not-empty",-2093700401,null);
yU=new $CLJS.t("metabase.mbql.schema","lower","metabase.mbql.schema/lower",-313920313,null);zU=new $CLJS.t(null,"desc","desc",-560950005,null);$CLJS.AU=new $CLJS.M(null,"template-tags","template-tags",1853115685);BU=new $CLJS.M(null,"public-question","public-question",629369976);CU=new $CLJS.t("metabase.mbql.schema","Field*","metabase.mbql.schema/Field*",-1168278623,null);DU=new $CLJS.M(null,"fk-field-id","fk-field-id",1124127357);
EU=new $CLJS.t("metabase.mbql.schema","temporal-extract","metabase.mbql.schema/temporal-extract",-1825197161,null);FU=new $CLJS.M(null,"binary","binary",-1802232288);$CLJS.GU=new $CLJS.M(null,"temporal-extract","temporal-extract",1781686405);HU=new $CLJS.t(null,"time-interval","time-interval",-1949813754,null);$CLJS.IU=new $CLJS.M(null,"time-interval","time-interval",704622015);JU=new $CLJS.M(null,"userland-query?","userland-query?",-123699383);
$CLJS.KU=new $CLJS.M(null,"source-query","source-query",198004422);LU=new $CLJS.M(null,"settings","settings",1556144875);MU=new $CLJS.t("metabase.mbql.schema","Fields","metabase.mbql.schema/Fields",-781973827,null);NU=new $CLJS.M(null,"inner-join","inner-join",659431740);$CLJS.OU=new $CLJS.M(null,"sum","sum",136986814);PU=new $CLJS.t(null,"Field*","Field*",-2104480026,null);QU=new $CLJS.t("metabase.mbql.schema","get-minute","metabase.mbql.schema/get-minute",-2138696889,null);
RU=new $CLJS.t("s","eq","s/eq",1021992833,null);SU=new $CLJS.M("cljs.analyzer","no-resolve","cljs.analyzer/no-resolve",-1872351017);$CLJS.TU=new $CLJS.M(null,"median","median",569566131);UU=new $CLJS.M(null,"executed-by","executed-by",-739811161);VU=new $CLJS.t("metabase.mbql.schema","median","metabase.mbql.schema/median",2055093571,null);$CLJS.WU=new $CLJS.M(null,"get-hour","get-hour",622714059);XU=new $CLJS.M(null,"amount","amount",364489504);
YU=new $CLJS.t(null,"percentile","percentile",1039342775,null);ZU=new $CLJS.t(null,"metabase.mbql.schema","metabase.mbql.schema",-408168902,null);$CLJS.$U=new $CLJS.M(null,"include-current","include-current",-1602371981);aV=new $CLJS.t(null,"NumericExpressionArg","NumericExpressionArg",-1537445195,null);bV=new $CLJS.t(null,"trim","trim",-1880116002,null);cV=new $CLJS.t(null,"MBQLQuery","MBQLQuery",-1395590243,null);dV=new $CLJS.t(null,"NumericExpression","NumericExpression",-2082340941,null);
$CLJS.eV=new $CLJS.M(null,"stddev","stddev",-865474939);fV=new $CLJS.t("metabase.mbql.schema","NumericExpression","metabase.mbql.schema/NumericExpression",-859895030,null);gV=new $CLJS.t(null,"coalesce","coalesce",-1999813740,null);hV=new $CLJS.M(null,"trim","trim",774319767);$CLJS.iV=new $CLJS.M(null,"!\x3d","!\x3d",-1841737356);jV=new $CLJS.M("string","\x3d","string/\x3d",983744235);kV=new $CLJS.M(null,"skip-results-metadata?","skip-results-metadata?",251010463);
lV=new $CLJS.t("metabase.mbql.schema","asc","metabase.mbql.schema/asc",1338042063,null);mV=new $CLJS.t("metabase.mbql.schema","inside","metabase.mbql.schema/inside",-291996315,null);nV=new $CLJS.t(null,"DatetimeDiffUnits","DatetimeDiffUnits",1899101514,null);oV=new $CLJS.t(null,"StringExpressionArg","StringExpressionArg",-1131357258,null);pV=new $CLJS.M(null,"value-or-field","value-or-field",-1387286309);qV=new $CLJS.t(null,"FieldOrExpressionDef","FieldOrExpressionDef",-788269541,null);
rV=new $CLJS.M(null,"lat-min","lat-min",1630784161);sV=new $CLJS.M(null,"ltrim","ltrim",1654269283);tV=new $CLJS.t(null,"ArithmeticDateTimeUnit","ArithmeticDateTimeUnit",-838492507,null);uV=new $CLJS.t(null,"inside","inside",-681932758,null);vV=new $CLJS.t("metabase.mbql.schema","stddev","metabase.mbql.schema/stddev",1735459125,null);wV=new $CLJS.t("metabase.mbql.schema","convert-timezone","metabase.mbql.schema/convert-timezone",1628930633,null);
xV=new $CLJS.t(null,"starts-with","starts-with",2007034536,null);yV=new $CLJS.M(null,"process-viz-settings?","process-viz-settings?",-173592315);zV=new $CLJS.t("metabase.mbql.schema","power","metabase.mbql.schema/power",-517905321,null);AV=new $CLJS.M(null,"card-id","card-id",-1770060179);BV=new $CLJS.M(null,"variadic","variadic",882626057);$CLJS.CV=new $CLJS.M(null,"category","category",-593092832);DV=new $CLJS.t(null,"NumericExpression*","NumericExpression*",-1459070895,null);
EV=new $CLJS.t(null,"upper","upper",1886775433,null);FV=new $CLJS.M(null,"field-or-expression","field-or-expression",-1409494368);GV=new $CLJS.t("metabase.mbql.schema","exp","metabase.mbql.schema/exp",451780488,null);$CLJS.HV=new $CLJS.M(null,"datetime-subtract","datetime-subtract",275307697);IV=new $CLJS.M(null,"sugar","sugar",-73788488);JV=new $CLJS.M(null,"lat-max","lat-max",841568226);KV=new $CLJS.M(null,"full-join","full-join",1305476385);LV=new $CLJS.t(null,"power","power",702679448,null);
MV=new $CLJS.t("metabase.mbql.schema","and","metabase.mbql.schema/and",1553856071,null);NV=new $CLJS.t("metabase.mbql.schema","StringExpression*","metabase.mbql.schema/StringExpression*",224546636,null);OV=new $CLJS.t(null,"median","median",-2084869638,null);PV=new $CLJS.t(null,"cum-sum","cum-sum",-589533420,null);QV=new $CLJS.t("metabase.mbql.schema","trim","metabase.mbql.schema/trim",1991053191,null);RV=new $CLJS.M(null,"y","y",-1757859776);SV=new $CLJS.M(null,"x","x",2099068185);
$CLJS.TV=new $CLJS.M(null,"sum-where","sum-where",2135348428);UV=new $CLJS.t("helpers","NonBlankString","helpers/NonBlankString",-2060904596,null);VV=new $CLJS.t("metabase.mbql.schema","UnnamedAggregation*","metabase.mbql.schema/UnnamedAggregation*",652628682,null);$CLJS.WV=new $CLJS.M(null,"binning","binning",1709835866);XV=new $CLJS.t(null,"TimezoneId","TimezoneId",-1406242397,null);YV=new $CLJS.M(null,"b","b",1482224470);ZV=new $CLJS.M(null,"a","a",-2123407586);
$V=new $CLJS.t(null,"replace","replace",853943757,null);$CLJS.aW=new $CLJS.M(null,"/","/",1282502798);bW=new $CLJS.t("metabase.mbql.schema","upper","metabase.mbql.schema/upper",993691634,null);cW=new $CLJS.t(null,"segment","segment",675610331,null);dW=new $CLJS.t("metabase.mbql.schema","get-week","metabase.mbql.schema/get-week",1436319181,null);eW=new $CLJS.t(null,"ExtractWeekModes","ExtractWeekModes",687144014,null);$CLJS.fW=new $CLJS.M(null,"-","-",-2112348439);
gW=new $CLJS.t(null,"UnnamedAggregation*","UnnamedAggregation*",1873018243,null);hW=new $CLJS.t("metabase.mbql.schema","\x3e\x3d","metabase.mbql.schema/\x3e\x3d",1977236849,null);iW=new $CLJS.M("string","starts-with","string/starts-with",1266861170);$CLJS.jW=new $CLJS.M(null,"order-by","order-by",1527318070);kW=new $CLJS.M(null,"advanced-math-expressions","advanced-math-expressions",1076581757);lW=new $CLJS.t("metabase.mbql.schema","is-null","metabase.mbql.schema/is-null",637054412,null);
mW=new $CLJS.M("alias","escaped-\x3eoriginal","alias/escaped-\x3eoriginal",-1334024182);nW=new $CLJS.t("metabase.mbql.schema","Filter*","metabase.mbql.schema/Filter*",-140275836,null);$CLJS.oW=new $CLJS.M(null,"cum-sum","cum-sum",2064902349);pW=new $CLJS.M(null,"condition","condition",1668437652);qW=new $CLJS.M("string","does-not-contain","string/does-not-contain",-1536178964);rW=new $CLJS.t("metabase.mbql.schema","StringExpression","metabase.mbql.schema/StringExpression",970196104,null);
sW=new $CLJS.M(null,"report-timezone","report-timezone",-2053796389);tW=new $CLJS.M(null,"log","log",-1595516004);uW=new $CLJS.t("metabase.mbql.schema","\x3c\x3d","metabase.mbql.schema/\x3c\x3d",-2098137664,null);vW=new $CLJS.M(null,"card-name","card-name",-2035606807);wW=new $CLJS.t("metabase.mbql.schema","sum-where","metabase.mbql.schema/sum-where",969078380,null);xW=new $CLJS.t("metabase.mbql.schema","does-not-contain","metabase.mbql.schema/does-not-contain",-1742276611,null);
yW=new $CLJS.t(null,"log","log",45015523,null);zW=new $CLJS.t("metabase.mbql.schema","abs","metabase.mbql.schema/abs",1792880149,null);$CLJS.AW=new $CLJS.M(null,"get-quarter","get-quarter",1327778593);BW=new $CLJS.t(null,"time","time",-1268547887,null);CW=new $CLJS.t("metabase.mbql.schema","FieldOptions","metabase.mbql.schema/FieldOptions",-475072702,null);DW=new $CLJS.M(null,"database_type","database_type",-54700895);EW=new $CLJS.M(null,"bin-width","bin-width",1377922579);
FW=new $CLJS.t(null,"EqualityComparable","EqualityComparable",-2076258858,null);GW=new $CLJS.t(null,"get-minute","get-minute",-1186349426,null);$CLJS.HW=new $CLJS.M(null,"week-of-year-us","week-of-year-us",849423511);$CLJS.IW=new $CLJS.M(null,"clause","clause",1479668060);$CLJS.JW=new $CLJS.M(null,"expression-name","expression-name",-1798450709);$CLJS.KW=new $CLJS.M("date","all-options","date/all-options",549325958);
LW=new $CLJS.t("metabase.mbql.schema","relative-datetime","metabase.mbql.schema/relative-datetime",1965492610,null);MW=new $CLJS.M(null,"replace","replace",-786587770);NW=new $CLJS.M("location","state","location/state",-114378652);OW=new $CLJS.t(null,"datetime-subtract","datetime-subtract",1915839224,null);$CLJS.PW=new $CLJS.M(null,"strategy","strategy",-1471631918);QW=new $CLJS.M(null,"lon-field","lon-field",517872067);
RW=new $CLJS.t(null,"DateTimeExpressionArg","DateTimeExpressionArg",-1507653823,null);SW=new $CLJS.M(null,"numeric","numeric",-1495594714);TW=new $CLJS.t(null,"variable","variable",1359185035,null);UW=new $CLJS.t(null,"lower","lower",-1534114948,null);VW=new $CLJS.M(null,"limit","limit",-1355822363);WW=new $CLJS.M(null,"rtrim","rtrim",-661336449);$CLJS.XW=new $CLJS.M(null,"week-of-year-instance","week-of-year-instance",2047974624);YW=new $CLJS.t("s","enum","s/enum",-975416934,null);
$CLJS.ZW=new $CLJS.M(null,"target","target",253001721);$W=new $CLJS.M(null,"pulse","pulse",-244494476);var ez,fz,gz,lz,mz,nz,oz,pz,qz,rz,sz,tz,uz,vz,wz,xz,yz,zz,Az,Bz,Cz,Dz,Hz,Jz,Lz,Nz,Oz,Pz,Qz,Rz,Uz,Wz,Yz,Zz,aX,$z,aA,bA,cA,dA,eA,fA,gA,hA,iA,jA,kA,lA,mA,nA,oA,pA,qA,rA,sA,tA,uA,vA,Sz,xA,yA,zA,AA,BA,CA,DA,EA,FA,GA,HA,IA,JA,KA,bX,LA,MA,Mz,PA,QA,RA,SA,TA,UA,VA,WA,XA,YA,ZA,$A,aB,bB,cB,dB,eB,fB,gB,hB,iB,jB,kB,lB,mB,nB,Xz,oB,pB,qB,rB,sB,wA,NA,uB,vB,wB,xB,yB,zB,AB,BB,CB,DB,EB,FB,GB,HB,IB,JB,KB,LB,MB,OB,PB,RB,SB,TB,UB,WB,XB,YB,ZB,$B,aC,cC,dC,fC,gC,iC,jC,hC,kC,VB,lC,mC,nC,oC,pC,qC,rC,sC,tC,uC,vC,wC;
ez=new $CLJS.R(null,new $CLJS.n(null,12,[$CLJS.Nu,null,$CLJS.wK,null,$CLJS.vJ,null,$CLJS.mh,null,$CLJS.xk,null,$CLJS.wJ,null,$CLJS.Ak,null,$CLJS.zk,null,$CLJS.ph,null,$CLJS.Bj,null,$CLJS.Qh,null,$CLJS.wk,null],null),null);fz=new $CLJS.R(null,new $CLJS.n(null,7,[$CLJS.vK,null,OO,null,$CLJS.mh,null,$CLJS.bi,null,qQ,null,$CLJS.yk,null,$CLJS.NJ,null],null),null);gz=$CLJS.Gi.h(ez,fz);$CLJS.hz=$CLJS.Em($CLJS.fe.h(Uo,ez),"date-bucketing-unit");$CLJS.iz=$CLJS.Em($CLJS.fe.h(Uo,fz),"time-bucketing-unit");
$CLJS.jz=$CLJS.Em($CLJS.fe.h(Uo,gz),"datetime-bucketing-unit");$CLJS.kz=$CLJS.Em($CLJS.fe.h(Uo,$CLJS.Nh.tz.names()),"timezone-id");lz=$CLJS.Em($CLJS.fe.h(Uo,new $CLJS.R(null,new $CLJS.n(null,11,[$CLJS.XW,null,$CLJS.xk,null,$CLJS.bi,null,$CLJS.Ak,null,$CLJS.zk,null,$CLJS.tQ,null,$CLJS.pP,null,$CLJS.HW,null,$CLJS.fQ,null,$CLJS.wk,null,$CLJS.yk,null],null),null)),"temporal-extract-units");
mz=$CLJS.Em($CLJS.fe.h(Uo,new $CLJS.R(null,new $CLJS.n(null,8,[$CLJS.Nu,null,$CLJS.wK,null,$CLJS.vK,null,$CLJS.vJ,null,OO,null,$CLJS.wJ,null,$CLJS.ph,null,$CLJS.NJ,null],null),null)),"datetime-diff-units");nz=$CLJS.Em($CLJS.fe.h(Uo,new $CLJS.R(null,new $CLJS.n(null,3,[$CLJS.GS,null,$CLJS.VO,null,$CLJS.zR,null],null),null)),"extract-week-modes");
oz=$CLJS.Em($CLJS.fe.h(Uo,new $CLJS.R(null,new $CLJS.n(null,8,[$CLJS.Nu,null,$CLJS.wK,null,$CLJS.vK,null,$CLJS.vJ,null,$CLJS.mh,null,$CLJS.wJ,null,$CLJS.ph,null,$CLJS.NJ,null],null),null)),"relative-datetime-unit");pz=$CLJS.Gm($CLJS.vo,jp,"valid ISO-8601 datetime string literal");qz=$CLJS.Gm($CLJS.vo,jp,"valid ISO-8601 datetime string literal");rz=$CLJS.Gm($CLJS.vo,jp,"valid ISO-8601 time string literal");
sz=dp($CLJS.GR,$CLJS.G(["n",$CLJS.uo($CLJS.G([$CLJS.Am($CLJS.Dx),$CLJS.po])),"unit",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Mh,oz],null)]));tz=dp($CLJS.IQ,$CLJS.G(["n",$CLJS.po,"unit",oz]));uz=Wo.o($CLJS.G([function(a){return $CLJS.La(ep(mP,a))},dp(mP,$CLJS.G(["t",Date,"unit",$CLJS.jz])),function(a){return $CLJS.Mc(a)instanceof Date},dp(mP,$CLJS.G(["date",Date,"unit",$CLJS.hz])),$CLJS.Ou,dp(mP,$CLJS.G(["datetime",Date,"unit",$CLJS.jz]))]));vz=dp($CLJS.rI,$CLJS.G(["time",Date,"unit",$CLJS.iz]));
wz=Wo.o($CLJS.G([$CLJS.wi(ep,mP),uz,jp,qz,jp,pz,$CLJS.Ou,$CLJS.uo($CLJS.G([Date]))]));xz=Wo.o($CLJS.G([$CLJS.wi(ep,$CLJS.rI),vz,jp,rz,$CLJS.Ou,$CLJS.uo($CLJS.G([Date]))]));yz=$CLJS.uo($CLJS.G([xz,wz]));
fp($CLJS.G([new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof uz?new $CLJS.u(function(){return uz},$CLJS.J(YP,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,kU,$CLJS.pj,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),
KT,"metabase/mbql/schema.cljc",69,mP,1,!0,192,192,$CLJS.B,"Schema for an `:absolute-datetime` clause.",$CLJS.p(uz)?uz.D:null])):null));return $CLJS.p(a)?a:KT}(),uz],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof sz?new $CLJS.u(function(){return sz},$CLJS.J(LW,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,
$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),KS,"metabase/mbql/schema.cljc",29,$CLJS.GR,1,174,174,new $CLJS.P(null,5,5,$CLJS.Q,[$CLJS.GR,$CLJS.Uy,$CLJS.U($CLJS.T,$CLJS.U($CLJS.PS,$CLJS.U(RU,$CLJS.Dx),$S)),$CLJS.Vh,$CLJS.U($CLJS.T,$CLJS.U($CLJS.ZN,LR))],null),$CLJS.B,"Schema for a valid relative-datetime clause.",$CLJS.p(sz)?sz.D:null])):null));return $CLJS.p(a)?a:KS}(),sz],null),new $CLJS.P(null,
2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof vz?new $CLJS.u(function(){return vz},$CLJS.J(uT,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,kU,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),BW,"metabase/mbql/schema.cljc",
27,$CLJS.rI,1,!0,225,225,new $CLJS.P(null,5,5,$CLJS.Q,[$CLJS.rI,$CLJS.rI,$CLJS.U($CLJS.T,xS),$CLJS.Vh,$CLJS.U($CLJS.T,ZQ)],null),$CLJS.B,"Schema for a valid time clause.",$CLJS.p(vz)?vz.D:null])):null));return $CLJS.p(a)?a:BW}(),vz],null)]));zz=$CLJS.he([So(DW),$CLJS.ap($CLJS.vo),So($CLJS.AL),$CLJS.ap($CLJS.wo),So($CLJS.nR),$CLJS.ap($CLJS.xo),So($CLJS.Vh),$CLJS.ap($CLJS.jz),So($CLJS.S),$CLJS.ap($CLJS.vo),$CLJS.qo,$CLJS.lo]);Az=dp($CLJS.zj,$CLJS.G(["value",$CLJS.lo,"type-info",$CLJS.ap(zz)]));
Bz=dp($CLJS.fv,$CLJS.G(["expression-name",$CLJS.vo,"options",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Mh,$CLJS.Cm($CLJS.Xc,"map")],null)]));Cz=Uo.o($CLJS.G([gP,EW,$CLJS.mh]));
Dz=function(a){return $CLJS.Gm(a,function(b){var c=$CLJS.je(b);b=$CLJS.K.h(c,$CLJS.PW);c=$CLJS.K.h(c,gP);return $CLJS.E.h(b,gP)?c:!0},"You must specify :num-bins when using the :num-bins strategy.")}(function(a){return $CLJS.Gm(a,function(b){var c=$CLJS.je(b);b=$CLJS.K.h(c,$CLJS.PW);c=$CLJS.K.h(c,EW);return $CLJS.E.h(b,EW)?c:!0},"You must specify :bin-width when using the :bin-width strategy.")}($CLJS.he([$CLJS.PW,Cz,So(gP),$CLJS.yo,So(EW),$CLJS.Gm($CLJS.oo,$CLJS.ue($CLJS.so),"bin width must be \x3e\x3d 0."),
$CLJS.qo,$CLJS.lo])));$CLJS.Ez=function Ez(a){switch(arguments.length){case 1:return Ez.g(arguments[0]);case 2:return Ez.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$CLJS.q.g(arguments.length)].join(""));}};$CLJS.Ez.g=function(a){var b=$CLJS.je(a);a=$CLJS.K.h(b,$CLJS.fU);b=$CLJS.K.h(b,$CLJS.JT);return $CLJS.Ez.h(a,b)};
$CLJS.Ez.h=function(a,b){a=$CLJS.p($CLJS.p(b)?a:b)?$CLJS.ui(a,$CLJS.eL)?ez:$CLJS.ui(a,$CLJS.MM)?fz:$CLJS.ui(a,$CLJS.TL)?gz:null:null;return $CLJS.p(a)?$CLJS.fd(a,b):!0};$CLJS.Ez.J=2;
var Fz=$CLJS.Gm($CLJS.Gm($CLJS.he([So($CLJS.fU),$CLJS.ap($CLJS.wo),So($CLJS.UP),$CLJS.ap($CLJS.uo($CLJS.G([$CLJS.yo,$CLJS.vo]))),So($CLJS.JT),$CLJS.ap($CLJS.jz),So($CLJS.ES),$CLJS.ap($CLJS.vo),So($CLJS.WV),$CLJS.ap(Dz),$CLJS.qo,$CLJS.lo]),$CLJS.Ez,"Invalid :temporal-unit for the specified :base-type."),$CLJS.ue($CLJS.PW),"Found :binning keys at the top level of :field options. binning-related options belong under the :binning key."),Gz=function(a){return $CLJS.Gm(a,function(b){$CLJS.I(b,0,null);var c=
$CLJS.I(b,1,null);b=$CLJS.I(b,2,null);b=$CLJS.je(b);b=$CLJS.K.h(b,$CLJS.fU);return"string"===typeof c?b:!0},":field clauses using a string field name must specify :base-type.")}(dp($CLJS.aT,$CLJS.G(["id-or-name",$CLJS.uo($CLJS.G([$CLJS.yo,$CLJS.vo])),"options",$CLJS.ap(Zo(new $CLJS.u(function(){return Fz},CW,$CLJS.Yf([$CLJS.jk,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[!0,$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),QO,"metabase/mbql/schema.cljc",28,1,383,383,$CLJS.B,null,$CLJS.p(Fz)?Fz.D:null]))))])));$CLJS.Gm(Gz,function(a){$CLJS.I(a,0,null);a=$CLJS.I(a,1,null);return $CLJS.dd(a)},"Must be a :field with an integer Field ID.");$CLJS.Gm(Gz,function(a){$CLJS.I(a,0,null);return"string"===typeof $CLJS.I(a,1,null)},"Must be a :field with a string Field name.");
Hz=fp($CLJS.G([new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof Bz?new $CLJS.u(function(){return Bz},$CLJS.J(lQ,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.FT,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),$CLJS.MP,"metabase/mbql/schema.cljc",60,$CLJS.fv,1,318,318,new $CLJS.P(null,5,5,$CLJS.Q,[$CLJS.fv,$CLJS.JW,$CLJS.U($CLJS.T,UV),$CLJS.ij,$CLJS.U($CLJS.T,$CLJS.U($CLJS.ZN,$CLJS.U($CLJS.JS,$CLJS.ei,"map")))],null),$CLJS.B,"Schema for a valid expression clause.",$CLJS.p(Bz)?Bz.D:null])):null));return $CLJS.p(a)?a:$CLJS.MP}(),Bz],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof Gz?new $CLJS.u(function(){return Gz},
$CLJS.J(HQ,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.rj,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],["0.39.0",$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),qP,"metabase/mbql/schema.cljc",51,$CLJS.aT,1,429,429,$CLJS.B,"Schema for a `:field` clause.",$CLJS.p(Gz)?Gz.D:null])):null));return $CLJS.p(a)?a:qP}(),Gz],null)]));
$CLJS.Iz=Zo(new $CLJS.u(function(){return Hz},CU,$CLJS.Yf([$CLJS.jk,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[!0,$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),PU,"metabase/mbql/schema.cljc",22,1,453,453,$CLJS.B,null,$CLJS.p(Hz)?Hz.D:null])));
Jz=dp($CLJS.FR,$CLJS.G(["aggregation-clause-index",$CLJS.po,"options",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Mh,$CLJS.Cm($CLJS.Xc,"map")],null)]));$CLJS.Kz=Xo($CLJS.wi(ep,$CLJS.FR),Jz,$CLJS.Iz);Lz=new $CLJS.R(null,new $CLJS.n(null,11,[$CLJS.Yu,null,sV,null,$CLJS.kO,null,MW,null,MO,null,CT,null,$CLJS.hQ,null,$CLJS.Xu,null,hV,null,hT,null,WW,null],null),null);
Nz=Wo.o($CLJS.G([$CLJS.mm,$CLJS.mo,$CLJS.wi(ep,Lz),Zo(new $CLJS.u(function(){return Mz},rW,$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),HS,"metabase/mbql/schema.cljc",26,1,496,!0,496,$CLJS.B,null,$CLJS.p(Mz)?Mz.D:null]))),$CLJS.wi(ep,$CLJS.zj),Az,$CLJS.Ou,$CLJS.Iz]));
Oz=new $CLJS.R(null,new $CLJS.n(null,26,[FO,null,$CLJS.AW,null,$CLJS.hk,null,$CLJS.GU,null,$CLJS.eU,null,mR,null,$CLJS.fW,null,hO,null,$CLJS.WU,null,$CLJS.XT,null,CT,null,$CLJS.aW,null,$CLJS.pU,null,IT,null,KO,null,$CLJS.jP,null,$CLJS.gk,null,SO,null,$CLJS.hQ,null,$CLJS.gO,null,$CLJS.vF,null,$CLJS.kP,null,$CLJS.TT,null,$CLJS.EQ,null,tW,null,AS,null],null),null);
Pz=new $CLJS.R(null,new $CLJS.n(null,9,[$CLJS.ok,null,$CLJS.ek,null,$CLJS.Zi,null,$CLJS.mj,null,$CLJS.nk,null,$CLJS.iV,null,$CLJS.Jh,null,$CLJS.bk,null,$CLJS.ck,null],null),null);Qz=new $CLJS.R(null,new $CLJS.n(null,17,[$CLJS.Qi,null,$CLJS.eV,null,$CLJS.bU,null,$CLJS.eT,null,$CLJS.TV,null,$CLJS.oW,null,$CLJS.vP,null,$CLJS.bR,null,$CLJS.yO,null,$CLJS.KP,null,$CLJS.TU,null,$CLJS.LT,null,$CLJS.Tj,null,$CLJS.FF,null,$CLJS.gS,null,iS,null,$CLJS.OU,null],null),null);
Rz=new $CLJS.R(null,new $CLJS.n(null,5,[hS,null,TO,null,$CLJS.HV,null,$CLJS.gk,null,$CLJS.ZT,null],null),null);
Uz=Wo.o($CLJS.G([$CLJS.Co,$CLJS.oo,$CLJS.wi(ep,Oz),Zo(new $CLJS.u(function(){return Sz},fV,$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),dV,"metabase/mbql/schema.cljc",27,1,530,!0,530,$CLJS.B,null,$CLJS.p(Sz)?Sz.D:null]))),$CLJS.wi(ep,Qz),Zo(new $CLJS.u(function(){return $CLJS.Tz},WO,$CLJS.Yf([$CLJS.aj,
$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),UQ,"metabase/mbql/schema.cljc",21,1,533,!0,533,$CLJS.B,null,$CLJS.p($CLJS.Tz)?$CLJS.Tz.D:null]))),$CLJS.wi(ep,$CLJS.zj),Az,$CLJS.Ou,$CLJS.Iz]));
Wz=Wo.o($CLJS.G([$CLJS.wi(ep,Qz),Zo(new $CLJS.u(function(){return $CLJS.Tz},WO,$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),UQ,"metabase/mbql/schema.cljc",21,1,533,!0,533,$CLJS.B,null,$CLJS.p($CLJS.Tz)?$CLJS.Tz.D:null]))),$CLJS.wi(ep,$CLJS.zj),Az,$CLJS.wi(ep,Rz),Zo(new $CLJS.u(function(){return $CLJS.Vz},
lR,$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),DS,"metabase/mbql/schema.cljc",28,1,532,!0,532,$CLJS.B,null,$CLJS.p($CLJS.Vz)?$CLJS.Vz.D:null]))),$CLJS.Ou,$CLJS.uo($CLJS.G([wz,$CLJS.Iz]))]));
Yz=Wo.o($CLJS.G([$CLJS.Co,$CLJS.oo,$CLJS.Dg,$CLJS.no,$CLJS.wi(ep,Pz),Zo(new $CLJS.u(function(){return Xz},PP,$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),mQ,"metabase/mbql/schema.cljc",27,1,531,!0,531,$CLJS.B,null,$CLJS.p(Xz)?Xz.D:null]))),$CLJS.wi(ep,Oz),Zo(new $CLJS.u(function(){return Sz},fV,
$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),dV,"metabase/mbql/schema.cljc",27,1,530,!0,530,$CLJS.B,null,$CLJS.p(Sz)?Sz.D:null]))),$CLJS.wi(ep,Rz),Zo(new $CLJS.u(function(){return $CLJS.Vz},lR,$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],
[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),DS,"metabase/mbql/schema.cljc",28,1,532,!0,532,$CLJS.B,null,$CLJS.p($CLJS.Vz)?$CLJS.Vz.D:null]))),$CLJS.mm,$CLJS.mo,$CLJS.wi(ep,Lz),Zo(new $CLJS.u(function(){return Mz},rW,$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),HS,"metabase/mbql/schema.cljc",26,1,496,!0,496,$CLJS.B,null,$CLJS.p(Mz)?Mz.D:null]))),$CLJS.wi(ep,$CLJS.zj),Az,$CLJS.Ou,$CLJS.Iz]));Zz=Xo($CLJS.wi(ep,$CLJS.IQ),tz,Uz);aX=Xo($CLJS.Co,$CLJS.yo,Uz);$z=dp(CT,$CLJS.G(["a",Yz,"b",Yz,"more",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Ox,Yz],null)]));aA=dp($CLJS.kO,$CLJS.G(["s",Nz,"start",aX,"length",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Mh,Uz],null)]));bA=dp($CLJS.vF,$CLJS.G(["s",Nz]));cA=dp(hV,$CLJS.G(["s",Nz]));dA=dp(WW,$CLJS.G(["s",Nz]));
eA=dp(sV,$CLJS.G(["s",Nz]));fA=dp($CLJS.Yu,$CLJS.G(["s",Nz]));gA=dp($CLJS.Xu,$CLJS.G(["s",Nz]));hA=dp(MW,$CLJS.G(["s",Nz,"match",$CLJS.mo,"replacement",$CLJS.mo]));iA=dp(MO,$CLJS.G(["a",Nz,"b",Nz,"more",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Ox,Nz],null)]));jA=dp(hT,$CLJS.G(["s",Nz,"pattern",$CLJS.mo]));kA=dp($CLJS.gk,$CLJS.G(["x",Zz,"y",Zz,"more",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Ox,Zz],null)]));lA=dp($CLJS.fW,$CLJS.G(["x",Uz,"y",Zz,"more",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Ox,Zz],null)]));
mA=dp($CLJS.aW,$CLJS.G(["x",Uz,"y",Uz,"more",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Ox,Uz],null)]));nA=dp($CLJS.hk,$CLJS.G(["x",Uz,"y",Uz,"more",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Ox,Uz],null)]));oA=dp(AS,$CLJS.G(["x",Uz]));pA=dp(FO,$CLJS.G(["x",Uz]));qA=dp(IT,$CLJS.G(["x",Uz]));rA=dp(SO,$CLJS.G(["x",Uz]));sA=dp(KO,$CLJS.G(["x",Uz,"y",Uz]));tA=dp(mR,$CLJS.G(["x",Uz]));uA=dp(hO,$CLJS.G(["x",Uz]));vA=dp(tW,$CLJS.G(["x",Uz]));
Sz=Zo(new $CLJS.u(function(){return wA},eQ,$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),DV,"metabase/mbql/schema.cljc",28,1,672,!0,672,$CLJS.B,null,$CLJS.p(wA)?wA.D:null])));xA=dp($CLJS.EQ,$CLJS.G(["datetime-x",Wz,"datetime-y",Wz,"unit",mz]));
yA=dp($CLJS.GU,$CLJS.G(["datetime",Wz,"unit",lz,"mode",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Mh,nz],null)]));zA=dp($CLJS.kP,$CLJS.G(["date",Wz]));AA=dp($CLJS.AW,$CLJS.G(["date",Wz]));BA=dp($CLJS.gO,$CLJS.G(["date",Wz]));CA=dp($CLJS.XT,$CLJS.G(["date",Wz,"mode",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Mh,nz],null)]));DA=dp($CLJS.TT,$CLJS.G(["date",Wz]));EA=dp($CLJS.pU,$CLJS.G(["date",Wz]));FA=dp($CLJS.WU,$CLJS.G(["datetime",Wz]));GA=dp($CLJS.eU,$CLJS.G(["datetime",Wz]));
HA=dp($CLJS.jP,$CLJS.G(["datetime",Wz]));IA=dp(TO,$CLJS.G(["datetime",Wz,"to",$CLJS.kz,"from",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Mh,$CLJS.kz],null)]));JA=$CLJS.Em($CLJS.fe.h(Uo,new $CLJS.R(null,new $CLJS.n(null,9,[$CLJS.Nu,null,$CLJS.wK,null,$CLJS.vK,null,$CLJS.vJ,null,OO,null,$CLJS.wJ,null,$CLJS.ph,null,qQ,null,$CLJS.NJ,null],null),null)),"arithmetic-datetime-unit");KA=dp($CLJS.ZT,$CLJS.G(["datetime",Wz,"amount",Uz,"unit",JA]));
bX=function(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return dp(arguments[0],1<b.length?new $CLJS.lc(b.slice(1),0,null):null)}(hS);LA=dp($CLJS.HV,$CLJS.G(["datetime",Wz,"amount",Uz,"unit",JA]));
MA=fp($CLJS.G([new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof kA?new $CLJS.u(function(){return kA},$CLJS.J(sT,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.FT,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),qR,"metabase/mbql/schema.cljc",51,$CLJS.gk,1,638,638,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.gk,SV,$CLJS.U($CLJS.T,BT),RV,$CLJS.U($CLJS.T,BT),bQ,$CLJS.U($CLJS.T,$CLJS.U($CLJS.Si,BT))],null),$CLJS.B,"Schema for a valid + clause.",$CLJS.p(kA)?kA.D:null])):null));return $CLJS.p(a)?a:qR}(),kA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof KA?new $CLJS.u(function(){return KA},$CLJS.J(pS,
new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[AQ,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),jT,"metabase/mbql/schema.cljc",67,$CLJS.ZT,1,737,737,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.ZT,eS,$CLJS.U($CLJS.T,RW),XU,$CLJS.U($CLJS.T,aV),$CLJS.Vh,$CLJS.U($CLJS.T,
tV)],null),$CLJS.B,"Schema for a valid datetime-add clause.",$CLJS.p(KA)?KA.D:null])):null));return $CLJS.p(a)?a:jT}(),KA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof LA?new $CLJS.u(function(){return LA},$CLJS.J(iO,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,
1,[AQ,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),OW,"metabase/mbql/schema.cljc",72,$CLJS.HV,1,744,744,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.HV,eS,$CLJS.U($CLJS.T,RW),XU,$CLJS.U($CLJS.T,aV),$CLJS.Vh,$CLJS.U($CLJS.T,tV)],null),$CLJS.B,"Schema for a valid datetime-subtract clause.",$CLJS.p(LA)?LA.D:null])):null));return $CLJS.p(a)?a:OW}(),LA],null),new $CLJS.P(null,2,5,$CLJS.Q,
[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof IA?new $CLJS.u(function(){return IA},$CLJS.J(wV,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[TO,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),WP,"metabase/mbql/schema.cljc",71,TO,1,727,727,new $CLJS.P(null,7,5,$CLJS.Q,[TO,eS,$CLJS.U($CLJS.T,RW),QR,$CLJS.U($CLJS.T,XV),rO,$CLJS.U($CLJS.T,$CLJS.U($CLJS.ZN,XV))],null),$CLJS.B,"Schema for a valid convert-timezone clause.",$CLJS.p(IA)?IA.D:null])):null));return $CLJS.p(a)?a:WP}(),IA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof bX?new $CLJS.u(function(){return bX},$CLJS.J(hU,
new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[hS,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),oS,"metabase/mbql/schema.cljc",45,hS,1,742,742,new $CLJS.P(null,1,5,$CLJS.Q,[hS],null),$CLJS.B,"Schema for a valid now clause.",$CLJS.p(bX)?bX.D:null])):
null));return $CLJS.p(a)?a:oS}(),bX],null)]));$CLJS.Vz=Zo(new $CLJS.u(function(){return MA},yR,$CLJS.Yf([$CLJS.jk,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[!0,$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),TR,"metabase/mbql/schema.cljc",35,1,749,749,$CLJS.B,null,$CLJS.p(MA)?MA.D:null])));
Mz=Zo(new $CLJS.u(function(){return NA},NV,$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),yS,"metabase/mbql/schema.cljc",27,1,756,!0,756,$CLJS.B,null,$CLJS.p(NA)?NA.D:null])));
PA=dp($CLJS.Jh,$CLJS.G(["first-clause",Zo(new $CLJS.u(function(){return $CLJS.OA},YS,$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),YR,"metabase/mbql/schema.cljc",16,1,764,!0,764,$CLJS.B,null,$CLJS.p($CLJS.OA)?$CLJS.OA.D:null]))),"second-clause",Zo(new $CLJS.u(function(){return $CLJS.OA},YS,$CLJS.Yf([$CLJS.aj,
$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),YR,"metabase/mbql/schema.cljc",16,1,764,!0,764,$CLJS.B,null,$CLJS.p($CLJS.OA)?$CLJS.OA.D:null]))),"other-clauses",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Ox,Zo(new $CLJS.u(function(){return $CLJS.OA},YS,$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,
$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),YR,"metabase/mbql/schema.cljc",16,1,764,!0,764,$CLJS.B,null,$CLJS.p($CLJS.OA)?$CLJS.OA.D:null])))],null)]));
QA=dp($CLJS.Zi,$CLJS.G(["first-clause",Zo(new $CLJS.u(function(){return $CLJS.OA},YS,$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),YR,"metabase/mbql/schema.cljc",16,1,764,!0,764,$CLJS.B,null,$CLJS.p($CLJS.OA)?$CLJS.OA.D:null]))),"second-clause",Zo(new $CLJS.u(function(){return $CLJS.OA},YS,$CLJS.Yf([$CLJS.aj,
$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),YR,"metabase/mbql/schema.cljc",16,1,764,!0,764,$CLJS.B,null,$CLJS.p($CLJS.OA)?$CLJS.OA.D:null]))),"other-clauses",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Ox,Zo(new $CLJS.u(function(){return $CLJS.OA},YS,$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,
$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),YR,"metabase/mbql/schema.cljc",16,1,764,!0,764,$CLJS.B,null,$CLJS.p($CLJS.OA)?$CLJS.OA.D:null])))],null)]));
RA=dp($CLJS.mj,$CLJS.G(["clause",Zo(new $CLJS.u(function(){return $CLJS.OA},YS,$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),YR,"metabase/mbql/schema.cljc",16,1,764,!0,764,$CLJS.B,null,$CLJS.p($CLJS.OA)?$CLJS.OA.D:null])))]));SA=Xo($CLJS.wi(ep,$CLJS.GR),sz,$CLJS.Iz);
TA=$CLJS.ap($CLJS.uo($CLJS.G([$CLJS.no,$CLJS.oo,$CLJS.mo,yz,SA,Yz,Az])));UA=Xo($CLJS.wi(ep,$CLJS.zj),Az,$CLJS.uo($CLJS.G([$CLJS.oo,$CLJS.mo,yz,Yz,SA])));VA=dp($CLJS.bk,$CLJS.G(["field",TA,"value-or-field",TA,"more-values-or-fields",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Ox,TA],null)]));WA=dp($CLJS.iV,$CLJS.G(["field",TA,"value-or-field",TA,"more-values-or-fields",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Ox,TA],null)]));XA=dp($CLJS.ck,$CLJS.G(["field",UA,"value-or-field",UA]));
YA=dp($CLJS.ek,$CLJS.G(["field",UA,"value-or-field",UA]));ZA=dp($CLJS.ok,$CLJS.G(["field",UA,"value-or-field",UA]));$A=dp($CLJS.nk,$CLJS.G(["field",UA,"value-or-field",UA]));aB=dp($CLJS.sP,$CLJS.G(["field",UA,"min",UA,"max",UA]));bB=dp($CLJS.ZP,$CLJS.G(["lat-field",UA,"lon-field",UA,"lat-max",UA,"lon-min",UA,"lat-min",UA,"lon-max",UA]));cB=dp($CLJS.ZO,$CLJS.G(["field",$CLJS.Iz]));dB=dp($CLJS.iR,$CLJS.G(["field",$CLJS.Iz]));eB=dp($CLJS.tP,$CLJS.G(["field",$CLJS.Iz]));
fB=dp($CLJS.iQ,$CLJS.G(["field",$CLJS.Iz]));gB=$CLJS.he([So(ST),$CLJS.no]);hB=dp($CLJS.RR,$CLJS.G(["field",Nz,"string-or-field",Nz,"options",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Mh,gB],null)]));iB=dp($CLJS.vU,$CLJS.G(["field",Nz,"string-or-field",Nz,"options",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Mh,gB],null)]));jB=dp($CLJS.US,$CLJS.G(["field",Nz,"string-or-field",Nz,"options",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Mh,gB],null)]));
kB=dp($CLJS.UR,$CLJS.G(["field",Nz,"string-or-field",Nz,"options",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Mh,gB],null)]));lB=$CLJS.he([So($CLJS.$U),$CLJS.no]);mB=dp($CLJS.IU,$CLJS.G(["field",$CLJS.Iz,"n",$CLJS.uo($CLJS.G([$CLJS.po,Uo.o($CLJS.G([$CLJS.Dx,$CLJS.QF,$CLJS.LP]))])),"unit",oz,"options",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Mh,lB],null)]));nB=dp(LO,$CLJS.G(["segment-id",$CLJS.uo($CLJS.G([$CLJS.yo,$CLJS.vo]))]));
Xz=Zo(new $CLJS.u(function(){return oB},BR,$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),bS,"metabase/mbql/schema.cljc",28,1,891,!0,891,$CLJS.B,null,$CLJS.p(oB)?oB.D:null])));
oB=fp($CLJS.G([new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof PA?new $CLJS.u(function(){return PA},$CLJS.J(MV,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),
NR,"metabase/mbql/schema.cljc",15,$CLJS.Jh,1,766,766,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.Jh,cQ,$CLJS.U($CLJS.T,$CLJS.U(QP,$CLJS.U($CLJS.Kj,YR))),RS,$CLJS.U($CLJS.T,$CLJS.U(QP,$CLJS.U($CLJS.Kj,YR))),sQ,$CLJS.U($CLJS.T,$CLJS.U($CLJS.Si,$CLJS.U(QP,$CLJS.U($CLJS.Kj,YR))))],null),$CLJS.B,"Schema for a valid and clause.",$CLJS.p(PA)?PA.D:null])):null));return $CLJS.p(a)?a:NR}(),PA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==
typeof mp&&"undefined"!==typeof QA?new $CLJS.u(function(){return QA},$CLJS.J(WS,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),ZS,"metabase/mbql/schema.cljc",14,$CLJS.Zi,1,771,771,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.Zi,cQ,$CLJS.U($CLJS.T,$CLJS.U(QP,$CLJS.U($CLJS.Kj,
YR))),RS,$CLJS.U($CLJS.T,$CLJS.U(QP,$CLJS.U($CLJS.Kj,YR))),sQ,$CLJS.U($CLJS.T,$CLJS.U($CLJS.Si,$CLJS.U(QP,$CLJS.U($CLJS.Kj,YR))))],null),$CLJS.B,"Schema for a valid or clause.",$CLJS.p(QA)?QA.D:null])):null));return $CLJS.p(a)?a:ZS}(),QA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof RA?new $CLJS.u(function(){return RA},$CLJS.J(gU,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,
$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$CLJS.PM,"metabase/mbql/schema.cljc",15,$CLJS.mj,1,776,776,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.mj,$CLJS.IW,$CLJS.U($CLJS.T,$CLJS.U(QP,$CLJS.U($CLJS.Kj,YR)))],null),$CLJS.B,"Schema for a valid not clause.",$CLJS.p(RA)?RA.D:null])):null));return $CLJS.p(a)?a:$CLJS.PM}(),
RA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof XA?new $CLJS.u(function(){return XA},$CLJS.J(oT,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),
DR,"metabase/mbql/schema.cljc",13,$CLJS.ck,1,822,822,new $CLJS.P(null,5,5,$CLJS.Q,[$CLJS.ck,$CLJS.aT,$CLJS.U($CLJS.T,dQ),pV,$CLJS.U($CLJS.T,dQ)],null),$CLJS.B,"Schema for a valid \x3c clause.",$CLJS.p(XA)?XA.D:null])):null));return $CLJS.p(a)?a:DR}(),XA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof ZA?new $CLJS.u(function(){return ZA},$CLJS.J(uW,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,
$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),CR,"metabase/mbql/schema.cljc",14,$CLJS.ok,1,824,824,new $CLJS.P(null,5,5,$CLJS.Q,[$CLJS.ok,$CLJS.aT,$CLJS.U($CLJS.T,dQ),pV,$CLJS.U($CLJS.T,dQ)],null),$CLJS.B,"Schema for a valid \x3c\x3d clause.",$CLJS.p(ZA)?ZA.D:null])):null));return $CLJS.p(a)?a:CR}(),ZA],null),new $CLJS.P(null,
2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof YA?new $CLJS.u(function(){return YA},$CLJS.J(mT,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),ER,"metabase/mbql/schema.cljc",
13,$CLJS.ek,1,823,823,new $CLJS.P(null,5,5,$CLJS.Q,[$CLJS.ek,$CLJS.aT,$CLJS.U($CLJS.T,dQ),pV,$CLJS.U($CLJS.T,dQ)],null),$CLJS.B,"Schema for a valid \x3e clause.",$CLJS.p(YA)?YA.D:null])):null));return $CLJS.p(a)?a:ER}(),YA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof $A?new $CLJS.u(function(){return $A},$CLJS.J(hW,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,
$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),OR,"metabase/mbql/schema.cljc",14,$CLJS.nk,1,825,825,new $CLJS.P(null,5,5,$CLJS.Q,[$CLJS.nk,$CLJS.aT,$CLJS.U($CLJS.T,dQ),pV,$CLJS.U($CLJS.T,dQ)],null),$CLJS.B,"Schema for a valid \x3e\x3d clause.",$CLJS.p($A)?$A.D:null])):null));return $CLJS.p(a)?a:OR}(),$A],null),new $CLJS.P(null,2,
5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof VA?new $CLJS.u(function(){return VA},$CLJS.J(nT,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$CLJS.FN,"metabase/mbql/schema.cljc",
13,$CLJS.bk,1,819,819,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.bk,$CLJS.aT,$CLJS.U($CLJS.T,FW),pV,$CLJS.U($CLJS.T,FW),qU,$CLJS.U($CLJS.T,$CLJS.U($CLJS.Si,FW))],null),$CLJS.B,"Schema for a valid \x3d clause.",$CLJS.p(VA)?VA.D:null])):null));return $CLJS.p(a)?a:$CLJS.FN}(),VA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof WA?new $CLJS.u(function(){return WA},$CLJS.J(hP,new $CLJS.n(null,1,[SU,
!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),HP,"metabase/mbql/schema.cljc",14,$CLJS.iV,1,820,820,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.iV,$CLJS.aT,$CLJS.U($CLJS.T,FW),pV,$CLJS.U($CLJS.T,FW),qU,$CLJS.U($CLJS.T,$CLJS.U($CLJS.Si,FW))],null),$CLJS.B,"Schema for a valid !\x3d clause.",$CLJS.p(WA)?
WA.D:null])):null));return $CLJS.p(a)?a:HP}(),WA],null)]));
pB=Wo.o($CLJS.G([$CLJS.wi(ep,Rz),$CLJS.Vz,$CLJS.wi(ep,Oz),Sz,$CLJS.wi(ep,Lz),Mz,$CLJS.wi(ep,Pz),Xz,$CLJS.Ou,fp($CLJS.G([new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof PA?new $CLJS.u(function(){return PA},$CLJS.J(MV,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,
"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),NR,"metabase/mbql/schema.cljc",15,$CLJS.Jh,1,766,766,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.Jh,cQ,$CLJS.U($CLJS.T,$CLJS.U(QP,$CLJS.U($CLJS.Kj,YR))),RS,$CLJS.U($CLJS.T,$CLJS.U(QP,$CLJS.U($CLJS.Kj,YR))),sQ,$CLJS.U($CLJS.T,$CLJS.U($CLJS.Si,$CLJS.U(QP,$CLJS.U($CLJS.Kj,YR))))],null),$CLJS.B,"Schema for a valid and clause.",$CLJS.p(PA)?PA.D:null])):null));return $CLJS.p(a)?a:NR}(),PA],null),new $CLJS.P(null,
2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof QA?new $CLJS.u(function(){return QA},$CLJS.J(WS,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),ZS,"metabase/mbql/schema.cljc",
14,$CLJS.Zi,1,771,771,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.Zi,cQ,$CLJS.U($CLJS.T,$CLJS.U(QP,$CLJS.U($CLJS.Kj,YR))),RS,$CLJS.U($CLJS.T,$CLJS.U(QP,$CLJS.U($CLJS.Kj,YR))),sQ,$CLJS.U($CLJS.T,$CLJS.U($CLJS.Si,$CLJS.U(QP,$CLJS.U($CLJS.Kj,YR))))],null),$CLJS.B,"Schema for a valid or clause.",$CLJS.p(QA)?QA.D:null])):null));return $CLJS.p(a)?a:ZS}(),QA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==
typeof RA?new $CLJS.u(function(){return RA},$CLJS.J(gU,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$CLJS.PM,"metabase/mbql/schema.cljc",15,$CLJS.mj,1,776,776,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.mj,$CLJS.IW,$CLJS.U($CLJS.T,$CLJS.U(QP,$CLJS.U($CLJS.Kj,YR)))],
null),$CLJS.B,"Schema for a valid not clause.",$CLJS.p(RA)?RA.D:null])):null));return $CLJS.p(a)?a:$CLJS.PM}(),RA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof VA?new $CLJS.u(function(){return VA},$CLJS.J(nT,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,
"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$CLJS.FN,"metabase/mbql/schema.cljc",13,$CLJS.bk,1,819,819,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.bk,$CLJS.aT,$CLJS.U($CLJS.T,FW),pV,$CLJS.U($CLJS.T,FW),qU,$CLJS.U($CLJS.T,$CLJS.U($CLJS.Si,FW))],null),$CLJS.B,"Schema for a valid \x3d clause.",$CLJS.p(VA)?VA.D:null])):null));return $CLJS.p(a)?a:$CLJS.FN}(),VA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&
"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof WA?new $CLJS.u(function(){return WA},$CLJS.J(hP,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),HP,"metabase/mbql/schema.cljc",14,$CLJS.iV,1,820,820,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.iV,$CLJS.aT,
$CLJS.U($CLJS.T,FW),pV,$CLJS.U($CLJS.T,FW),qU,$CLJS.U($CLJS.T,$CLJS.U($CLJS.Si,FW))],null),$CLJS.B,"Schema for a valid !\x3d clause.",$CLJS.p(WA)?WA.D:null])):null));return $CLJS.p(a)?a:HP}(),WA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof XA?new $CLJS.u(function(){return XA},$CLJS.J(oT,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,
$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),DR,"metabase/mbql/schema.cljc",13,$CLJS.ck,1,822,822,new $CLJS.P(null,5,5,$CLJS.Q,[$CLJS.ck,$CLJS.aT,$CLJS.U($CLJS.T,dQ),pV,$CLJS.U($CLJS.T,dQ)],null),$CLJS.B,"Schema for a valid \x3c clause.",$CLJS.p(XA)?XA.D:null])):null));return $CLJS.p(a)?a:DR}(),XA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==
typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof YA?new $CLJS.u(function(){return YA},$CLJS.J(mT,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),ER,"metabase/mbql/schema.cljc",13,$CLJS.ek,1,823,823,new $CLJS.P(null,5,5,$CLJS.Q,[$CLJS.ek,
$CLJS.aT,$CLJS.U($CLJS.T,dQ),pV,$CLJS.U($CLJS.T,dQ)],null),$CLJS.B,"Schema for a valid \x3e clause.",$CLJS.p(YA)?YA.D:null])):null));return $CLJS.p(a)?a:ER}(),YA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof ZA?new $CLJS.u(function(){return ZA},$CLJS.J(uW,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,
$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),CR,"metabase/mbql/schema.cljc",14,$CLJS.ok,1,824,824,new $CLJS.P(null,5,5,$CLJS.Q,[$CLJS.ok,$CLJS.aT,$CLJS.U($CLJS.T,dQ),pV,$CLJS.U($CLJS.T,dQ)],null),$CLJS.B,"Schema for a valid \x3c\x3d clause.",$CLJS.p(ZA)?ZA.D:null])):null));return $CLJS.p(a)?a:CR}(),ZA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&
"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof $A?new $CLJS.u(function(){return $A},$CLJS.J(hW,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),OR,"metabase/mbql/schema.cljc",14,$CLJS.nk,1,825,825,new $CLJS.P(null,5,5,$CLJS.Q,[$CLJS.nk,$CLJS.aT,
$CLJS.U($CLJS.T,dQ),pV,$CLJS.U($CLJS.T,dQ)],null),$CLJS.B,"Schema for a valid \x3e\x3d clause.",$CLJS.p($A)?$A.D:null])):null));return $CLJS.p(a)?a:OR}(),$A],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof aB?new $CLJS.u(function(){return aB},$CLJS.J(xT,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],
[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),lP,"metabase/mbql/schema.cljc",19,$CLJS.sP,1,828,828,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.sP,$CLJS.aT,$CLJS.U($CLJS.T,dQ),$CLJS.Qi,$CLJS.U($CLJS.T,dQ),$CLJS.Tj,$CLJS.U($CLJS.T,dQ)],null),$CLJS.B,"Schema for a valid between clause.",$CLJS.p(aB)?aB.D:null])):null));return $CLJS.p(a)?a:lP}(),aB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==
typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof hB?new $CLJS.u(function(){return hB},$CLJS.J(ET,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),xV,"metabase/mbql/schema.cljc",23,$CLJS.RR,1,851,851,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.RR,
$CLJS.aT,$CLJS.U($CLJS.T,oV),GP,$CLJS.U($CLJS.T,oV),$CLJS.ij,$CLJS.U($CLJS.T,$CLJS.U($CLJS.ZN,dU))],null),$CLJS.B,"Schema for a valid starts-with clause.",$CLJS.p(hB)?hB.D:null])):null));return $CLJS.p(a)?a:xV}(),hB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof iB?new $CLJS.u(function(){return iB},$CLJS.J(gQ,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,
X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),OP,"metabase/mbql/schema.cljc",21,$CLJS.vU,1,852,852,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.vU,$CLJS.aT,$CLJS.U($CLJS.T,oV),GP,$CLJS.U($CLJS.T,oV),$CLJS.ij,$CLJS.U($CLJS.T,$CLJS.U($CLJS.ZN,dU))],null),$CLJS.B,"Schema for a valid ends-with clause.",$CLJS.p(iB)?iB.D:null])):null));return $CLJS.p(a)?
a:OP}(),iB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof jB?new $CLJS.u(function(){return jB},$CLJS.J(PQ,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),jQ,"metabase/mbql/schema.cljc",20,$CLJS.US,1,853,853,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.US,$CLJS.aT,$CLJS.U($CLJS.T,oV),GP,$CLJS.U($CLJS.T,oV),$CLJS.ij,$CLJS.U($CLJS.T,$CLJS.U($CLJS.ZN,dU))],null),$CLJS.B,"Schema for a valid contains clause.",$CLJS.p(jB)?jB.D:null])):null));return $CLJS.p(a)?a:jQ}(),jB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof kB?new $CLJS.u(function(){return kB},
$CLJS.J(xW,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),sO,"metabase/mbql/schema.cljc",36,$CLJS.UR,1,856,856,!0,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.UR,$CLJS.aT,$CLJS.U($CLJS.T,oV),GP,$CLJS.U($CLJS.T,oV),$CLJS.ij,$CLJS.U($CLJS.T,$CLJS.U($CLJS.ZN,dU))],null),
$CLJS.B,"Schema for a valid does-not-contain clause.",$CLJS.p(kB)?kB.D:null])):null));return $CLJS.p(a)?a:sO}(),kB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof bB?new $CLJS.u(function(){return bB},$CLJS.J(mV,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,
"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),uV,"metabase/mbql/schema.cljc",26,$CLJS.ZP,1,831,831,!0,new $CLJS.P(null,13,5,$CLJS.Q,[$CLJS.ZP,NO,$CLJS.U($CLJS.T,dQ),QW,$CLJS.U($CLJS.T,dQ),JV,$CLJS.U($CLJS.T,dQ),aP,$CLJS.U($CLJS.T,dQ),rV,$CLJS.U($CLJS.T,dQ),EO,$CLJS.U($CLJS.T,dQ)],null),$CLJS.B,"Schema for a valid inside clause.",$CLJS.p(bB)?bB.D:null])):null));return $CLJS.p(a)?a:uV}(),bB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=
X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof eB?new $CLJS.u(function(){return eB},$CLJS.J(SQ,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),FS,"metabase/mbql/schema.cljc",28,$CLJS.tP,1,845,845,
!0,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.tP,$CLJS.aT,$CLJS.U($CLJS.T,VP)],null),$CLJS.B,"Schema for a valid is-empty clause.",$CLJS.p(eB)?eB.D:null])):null));return $CLJS.p(a)?a:FS}(),eB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof fB?new $CLJS.u(function(){return fB},$CLJS.J(xU,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,
IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),PT,"metabase/mbql/schema.cljc",29,$CLJS.iQ,1,846,846,!0,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.iQ,$CLJS.aT,$CLJS.U($CLJS.T,VP)],null),$CLJS.B,"Schema for a valid not-empty clause.",$CLJS.p(fB)?fB.D:null])):null));return $CLJS.p(a)?a:PT}(),fB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==
typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof cB?new $CLJS.u(function(){return cB},$CLJS.J(lW,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),rQ,"metabase/mbql/schema.cljc",27,$CLJS.ZO,1,840,840,!0,new $CLJS.P(null,3,5,$CLJS.Q,
[$CLJS.ZO,$CLJS.aT,$CLJS.U($CLJS.T,VP)],null),$CLJS.B,"Schema for a valid is-null clause.",$CLJS.p(cB)?cB.D:null])):null));return $CLJS.p(a)?a:rQ}(),cB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof dB?new $CLJS.u(function(){return dB},$CLJS.J(VR,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],
[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),wP,"metabase/mbql/schema.cljc",28,$CLJS.iR,1,841,841,!0,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.iR,$CLJS.aT,$CLJS.U($CLJS.T,VP)],null),$CLJS.B,"Schema for a valid not-null clause.",$CLJS.p(dB)?dB.D:null])):null));return $CLJS.p(a)?a:wP}(),dB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&
"undefined"!==typeof mp&&"undefined"!==typeof mB?new $CLJS.u(function(){return mB},$CLJS.J(mO,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),HU,"metabase/mbql/schema.cljc",33,$CLJS.IU,1,876,876,!0,new $CLJS.P(null,9,5,$CLJS.Q,[$CLJS.IU,$CLJS.aT,$CLJS.U($CLJS.T,
VP),$CLJS.Uy,$CLJS.U($CLJS.T,$CLJS.U($CLJS.PS,$S,$CLJS.U(YW,$CLJS.Dx,$CLJS.QF,$CLJS.LP))),$CLJS.Vh,$CLJS.U($CLJS.T,LR),$CLJS.ij,$CLJS.U($CLJS.T,$CLJS.U($CLJS.ZN,MT))],null),$CLJS.B,"Schema for a valid time-interval clause.",$CLJS.p(mB)?mB.D:null])):null));return $CLJS.p(a)?a:HU}(),mB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof nB?new $CLJS.u(function(){return nB},$CLJS.J(IS,new $CLJS.n(null,
1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),cW,"metabase/mbql/schema.cljc",27,LO,1,889,889,!0,new $CLJS.P(null,3,5,$CLJS.Q,[LO,rP,$CLJS.U($CLJS.T,$CLJS.U($CLJS.PS,XP,UV))],null),$CLJS.B,"Schema for a valid segment clause.",$CLJS.p(nB)?nB.D:null])):null));return $CLJS.p(a)?
a:cW}(),nB],null)]))]));$CLJS.OA=Zo(new $CLJS.u(function(){return pB},nW,$CLJS.Yf([$CLJS.jk,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[!0,$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),wQ,"metabase/mbql/schema.cljc",23,1,900,900,$CLJS.B,null,$CLJS.p(pB)?pB.D:null])));
qB=new $CLJS.P(null,1,5,$CLJS.Q,[new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Ro($CLJS.OA,"pred"),$CLJS.Ro(Yz,"expr")],null)],null);rB=$CLJS.he([So($CLJS.mh),Yz]);sB=dp($CLJS.hQ,$CLJS.G(["clauses",qB,"options",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Mh,rB],null)]));
wA=fp($CLJS.G([new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof kA?new $CLJS.u(function(){return kA},$CLJS.J(sT,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.FT,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),qR,"metabase/mbql/schema.cljc",51,$CLJS.gk,1,638,638,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.gk,SV,$CLJS.U($CLJS.T,BT),RV,$CLJS.U($CLJS.T,BT),bQ,$CLJS.U($CLJS.T,$CLJS.U($CLJS.Si,BT))],null),$CLJS.B,"Schema for a valid + clause.",$CLJS.p(kA)?kA.D:null])):null));return $CLJS.p(a)?a:qR}(),kA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof lA?new $CLJS.u(function(){return lA},$CLJS.J(rT,
new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.FT,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),rR,"metabase/mbql/schema.cljc",51,$CLJS.fW,1,641,641,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.fW,SV,$CLJS.U($CLJS.T,aV),RV,$CLJS.U($CLJS.T,BT),bQ,$CLJS.U($CLJS.T,
$CLJS.U($CLJS.Si,BT))],null),$CLJS.B,"Schema for a valid - clause.",$CLJS.p(lA)?lA.D:null])):null));return $CLJS.p(a)?a:rR}(),lA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp?new $CLJS.u(function(){return mA},$CLJS.J(pT,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,X,$CLJS.Yi,$CLJS.pj,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.FT,"null"],null),null),
$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),sR,"metabase/mbql/schema.cljc",$CLJS.aW,1,644,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.aW,SV,$CLJS.U($CLJS.T,aV),RV,$CLJS.U($CLJS.T,aV),bQ,$CLJS.U($CLJS.T,$CLJS.U($CLJS.Si,aV))],null),$CLJS.B,"Schema for a valid / clause.",$CLJS.p(mA)?mA.D:null])):null));return $CLJS.p(a)?a:sR}(),mA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==
typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof nA?new $CLJS.u(function(){return nA},$CLJS.J(tT,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.FT,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),pR,"metabase/mbql/schema.cljc",
51,$CLJS.hk,1,646,646,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.hk,SV,$CLJS.U($CLJS.T,aV),RV,$CLJS.U($CLJS.T,aV),bQ,$CLJS.U($CLJS.T,$CLJS.U($CLJS.Si,aV))],null),$CLJS.B,"Schema for a valid * clause.",$CLJS.p(nA)?nA.D:null])):null));return $CLJS.p(a)?a:pR}(),nA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof $z?new $CLJS.u(function(){return $z},$CLJS.J(wU,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,
$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.FT,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),gV,"metabase/mbql/schema.cljc",58,CT,1,605,605,new $CLJS.P(null,7,5,$CLJS.Q,[CT,ZV,$CLJS.U($CLJS.T,BO),YV,$CLJS.U($CLJS.T,BO),bQ,$CLJS.U($CLJS.T,$CLJS.U($CLJS.Si,BO))],null),$CLJS.B,"Schema for a valid coalesce clause.",
$CLJS.p($z)?$z.D:null])):null));return $CLJS.p(a)?a:gV}(),$z],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof bA?new $CLJS.u(function(){return bA},$CLJS.J(uU,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.FT,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,
1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),VT,"metabase/mbql/schema.cljc",56,$CLJS.vF,1,611,611,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.vF,$CLJS.cI,$CLJS.U($CLJS.T,oV)],null),$CLJS.B,"Schema for a valid length clause.",$CLJS.p(bA)?bA.D:null])):null));return $CLJS.p(a)?a:VT}(),bA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==
typeof oA?new $CLJS.u(function(){return oA},$CLJS.J(kQ,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.FT,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),jS,"metabase/mbql/schema.cljc",55,AS,1,648,648,new $CLJS.P(null,3,5,$CLJS.Q,[AS,SV,$CLJS.U($CLJS.T,
aV)],null),$CLJS.B,"Schema for a valid floor clause.",$CLJS.p(oA)?oA.D:null])):null));return $CLJS.p(a)?a:jS}(),oA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof pA?new $CLJS.u(function(){return pA},$CLJS.J(JP,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,
1,[$CLJS.FT,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$O,"metabase/mbql/schema.cljc",54,FO,1,651,651,new $CLJS.P(null,3,5,$CLJS.Q,[FO,SV,$CLJS.U($CLJS.T,aV)],null),$CLJS.B,"Schema for a valid ceil clause.",$CLJS.p(pA)?pA.D:null])):null));return $CLJS.p(a)?a:$O}(),pA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&
"undefined"!==typeof mp&&"undefined"!==typeof qA?new $CLJS.u(function(){return qA},$CLJS.J(LQ,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.FT,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),PR,"metabase/mbql/schema.cljc",55,IT,1,654,654,new $CLJS.P(null,
3,5,$CLJS.Q,[IT,SV,$CLJS.U($CLJS.T,aV)],null),$CLJS.B,"Schema for a valid round clause.",$CLJS.p(qA)?qA.D:null])):null));return $CLJS.p(a)?a:PR}(),qA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof rA?new $CLJS.u(function(){return rA},$CLJS.J(zW,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],
[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.FT,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),MS,"metabase/mbql/schema.cljc",53,SO,1,657,657,new $CLJS.P(null,3,5,$CLJS.Q,[SO,SV,$CLJS.U($CLJS.T,aV)],null),$CLJS.B,"Schema for a valid abs clause.",$CLJS.p(rA)?rA.D:null])):null));return $CLJS.p(a)?a:MS}(),rA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==
typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof sA?new $CLJS.u(function(){return sA},$CLJS.J(zV,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[kW,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),LV,"metabase/mbql/schema.cljc",
69,KO,1,660,660,new $CLJS.P(null,5,5,$CLJS.Q,[KO,SV,$CLJS.U($CLJS.T,aV),RV,$CLJS.U($CLJS.T,aV)],null),$CLJS.B,"Schema for a valid power clause.",$CLJS.p(sA)?sA.D:null])):null));return $CLJS.p(a)?a:LV}(),sA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof tA?new $CLJS.u(function(){return tA},$CLJS.J(fS,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,
$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[kW,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),kR,"metabase/mbql/schema.cljc",68,mR,1,663,663,new $CLJS.P(null,3,5,$CLJS.Q,[mR,SV,$CLJS.U($CLJS.T,aV)],null),$CLJS.B,"Schema for a valid sqrt clause.",$CLJS.p(tA)?tA.D:null])):null));return $CLJS.p(a)?a:kR}(),tA],null),new $CLJS.P(null,
2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof uA?new $CLJS.u(function(){return uA},$CLJS.J(GV,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[kW,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),WR,"metabase/mbql/schema.cljc",67,hO,1,666,666,new $CLJS.P(null,3,5,$CLJS.Q,[hO,SV,$CLJS.U($CLJS.T,aV)],null),$CLJS.B,"Schema for a valid exp clause.",$CLJS.p(uA)?uA.D:null])):null));return $CLJS.p(a)?a:WR}(),uA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof vA?new $CLJS.u(function(){return vA},$CLJS.J(oP,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,
$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[kW,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),yW,"metabase/mbql/schema.cljc",67,tW,1,669,669,new $CLJS.P(null,3,5,$CLJS.Q,[tW,SV,$CLJS.U($CLJS.T,aV)],null),$CLJS.B,"Schema for a valid log clause.",$CLJS.p(vA)?vA.D:null])):null));return $CLJS.p(a)?a:yW}(),vA],null),new $CLJS.P(null,
2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof sB?new $CLJS.u(function(){return sB},$CLJS.J(IO,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[xO,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),vS,"metabase/mbql/schema.cljc",61,$CLJS.hQ,1,924,924,new $CLJS.P(null,5,5,$CLJS.Q,[$CLJS.hQ,$CLJS.Xy,$CLJS.U($CLJS.T,zQ),$CLJS.ij,$CLJS.U($CLJS.T,$CLJS.U($CLJS.ZN,XS))],null),$CLJS.B,"Schema for a valid case clause.",$CLJS.p(sB)?sB.D:null])):null));return $CLJS.p(a)?a:vS}(),sB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof xA?new $CLJS.u(function(){return xA},$CLJS.J(yP,new $CLJS.n(null,
1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.EQ,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),NS,"metabase/mbql/schema.cljc",65,$CLJS.EQ,1,688,688,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.EQ,xQ,$CLJS.U($CLJS.T,RW),yQ,$CLJS.U($CLJS.T,RW),$CLJS.Vh,$CLJS.U($CLJS.T,
nV)],null),$CLJS.B,"Schema for a valid datetime-diff clause.",$CLJS.p(xA)?xA.D:null])):null));return $CLJS.p(a)?a:NS}(),xA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof yA?new $CLJS.u(function(){return yA},$CLJS.J(EU,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,
1,[$CLJS.GU,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),vT,"metabase/mbql/schema.cljc",71,$CLJS.GU,1,693,693,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.GU,eS,$CLJS.U($CLJS.T,RW),$CLJS.Vh,$CLJS.U($CLJS.T,cT),$CLJS.di,$CLJS.U($CLJS.T,$CLJS.U($CLJS.ZN,eW))],null),$CLJS.B,"Schema for a valid temporal-extract clause.",$CLJS.p(yA)?yA.D:null])):null));return $CLJS.p(a)?a:vT}(),yA],null),
new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof zA?new $CLJS.u(function(){return zA},$CLJS.J(JR,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.GU,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),BP,"metabase/mbql/schema.cljc",71,$CLJS.kP,1,699,699,!0,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.kP,QS,$CLJS.U($CLJS.T,RW)],null),$CLJS.B,"Schema for a valid get-year clause.",$CLJS.p(zA)?zA.D:null])):null));return $CLJS.p(a)?a:BP}(),zA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof AA?new $CLJS.u(function(){return AA},$CLJS.J(MQ,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,
$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.GU,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),qT,"metabase/mbql/schema.cljc",74,$CLJS.AW,1,702,702,!0,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.AW,QS,$CLJS.U($CLJS.T,RW)],null),$CLJS.B,"Schema for a valid get-quarter clause.",$CLJS.p(AA)?AA.D:null])):
null));return $CLJS.p(a)?a:qT}(),AA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof BA?new $CLJS.u(function(){return BA},$CLJS.J(lT,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.GU,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),$T,"metabase/mbql/schema.cljc",72,$CLJS.gO,1,705,705,!0,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.gO,QS,$CLJS.U($CLJS.T,RW)],null),$CLJS.B,"Schema for a valid get-month clause.",$CLJS.p(BA)?BA.D:null])):null));return $CLJS.p(a)?a:$T}(),BA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof CA?new $CLJS.u(function(){return CA},$CLJS.J(dW,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,
$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.GU,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),YT,"metabase/mbql/schema.cljc",71,$CLJS.XT,1,708,708,!0,new $CLJS.P(null,5,5,$CLJS.Q,[$CLJS.XT,QS,$CLJS.U($CLJS.T,RW),$CLJS.di,$CLJS.U($CLJS.T,$CLJS.U($CLJS.ZN,eW))],null),$CLJS.B,"Schema for a valid get-week clause.",
$CLJS.p(CA)?CA.D:null])):null));return $CLJS.p(a)?a:YT}(),CA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof DA?new $CLJS.u(function(){return DA},$CLJS.J(wO,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.GU,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,
1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),NT,"metabase/mbql/schema.cljc",70,$CLJS.TT,1,712,712,!0,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.TT,QS,$CLJS.U($CLJS.T,RW)],null),$CLJS.B,"Schema for a valid get-day clause.",$CLJS.p(DA)?DA.D:null])):null));return $CLJS.p(a)?a:NT}(),DA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==
typeof EA?new $CLJS.u(function(){return EA},$CLJS.J(TS,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.GU,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),DT,"metabase/mbql/schema.cljc",78,$CLJS.pU,1,715,715,!0,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.pU,
QS,$CLJS.U($CLJS.T,RW)],null),$CLJS.B,"Schema for a valid get-day-of-week clause.",$CLJS.p(EA)?EA.D:null])):null));return $CLJS.p(a)?a:DT}(),EA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof FA?new $CLJS.u(function(){return FA},$CLJS.J(OS,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,
new $CLJS.n(null,1,[$CLJS.GU,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),CO,"metabase/mbql/schema.cljc",71,$CLJS.WU,1,718,718,!0,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.WU,eS,$CLJS.U($CLJS.T,RW)],null),$CLJS.B,"Schema for a valid get-hour clause.",$CLJS.p(FA)?FA.D:null])):null));return $CLJS.p(a)?a:CO}(),FA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==
typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof GA?new $CLJS.u(function(){return GA},$CLJS.J(QU,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.GU,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),GW,"metabase/mbql/schema.cljc",
73,$CLJS.eU,1,721,721,!0,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.eU,eS,$CLJS.U($CLJS.T,RW)],null),$CLJS.B,"Schema for a valid get-minute clause.",$CLJS.p(GA)?GA.D:null])):null));return $CLJS.p(a)?a:GW}(),GA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof HA?new $CLJS.u(function(){return HA},$CLJS.J(uS,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,
$CLJS.pj,$CLJS.pk,IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.GU,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),CS,"metabase/mbql/schema.cljc",73,$CLJS.jP,1,724,724,!0,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.jP,eS,$CLJS.U($CLJS.T,RW)],null),$CLJS.B,"Schema for a valid get-second clause.",$CLJS.p(HA)?HA.D:null])):null));return $CLJS.p(a)?a:CS}(),HA],
null)]));
NA=fp($CLJS.G([new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof aA?new $CLJS.u(function(){return aA},$CLJS.J(mU,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.FT,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),
iU,"metabase/mbql/schema.cljc",59,$CLJS.kO,1,608,608,new $CLJS.P(null,7,5,$CLJS.Q,[$CLJS.kO,$CLJS.cI,$CLJS.U($CLJS.T,oV),$CLJS.ix,$CLJS.U($CLJS.T,FQ),$CLJS.vF,$CLJS.U($CLJS.T,$CLJS.U($CLJS.ZN,aV))],null),$CLJS.B,"Schema for a valid substring clause.",$CLJS.p(aA)?aA.D:null])):null));return $CLJS.p(a)?a:iU}(),aA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof cA?new $CLJS.u(function(){return cA},
$CLJS.J(QV,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.FT,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),bV,"metabase/mbql/schema.cljc",54,hV,1,614,614,new $CLJS.P(null,3,5,$CLJS.Q,[hV,$CLJS.cI,$CLJS.U($CLJS.T,oV)],null),$CLJS.B,"Schema for a valid trim clause.",
$CLJS.p(cA)?cA.D:null])):null));return $CLJS.p(a)?a:bV}(),cA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof eA?new $CLJS.u(function(){return eA},$CLJS.J(bT,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.FT,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,
1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),rU,"metabase/mbql/schema.cljc",55,sV,1,620,620,new $CLJS.P(null,3,5,$CLJS.Q,[sV,$CLJS.cI,$CLJS.U($CLJS.T,oV)],null),$CLJS.B,"Schema for a valid ltrim clause.",$CLJS.p(eA)?eA.D:null])):null));return $CLJS.p(a)?a:rU}(),eA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof dA?
new $CLJS.u(function(){return dA},$CLJS.J(tU,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.FT,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),VS,"metabase/mbql/schema.cljc",55,WW,1,617,617,new $CLJS.P(null,3,5,$CLJS.Q,[WW,$CLJS.cI,$CLJS.U($CLJS.T,
oV)],null),$CLJS.B,"Schema for a valid rtrim clause.",$CLJS.p(dA)?dA.D:null])):null));return $CLJS.p(a)?a:VS}(),dA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof hA?new $CLJS.u(function(){return hA},$CLJS.J(oO,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,
1,[$CLJS.FT,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$V,"metabase/mbql/schema.cljc",57,MW,1,629,629,new $CLJS.P(null,7,5,$CLJS.Q,[MW,$CLJS.cI,$CLJS.U($CLJS.T,oV),bP,$CLJS.U($CLJS.T,$CLJS.KR),jR,$CLJS.U($CLJS.T,$CLJS.KR)],null),$CLJS.B,"Schema for a valid replace clause.",$CLJS.p(hA)?hA.D:null])):null));return $CLJS.p(a)?a:$V}(),hA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=
X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof gA?new $CLJS.u(function(){return gA},$CLJS.J(yU,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.FT,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),UW,"metabase/mbql/schema.cljc",55,$CLJS.Xu,1,626,626,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.Xu,$CLJS.cI,$CLJS.U($CLJS.T,oV)],null),$CLJS.B,"Schema for a valid lower clause.",$CLJS.p(gA)?gA.D:null])):null));return $CLJS.p(a)?a:UW}(),gA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof fA?new $CLJS.u(function(){return fA},$CLJS.J(bW,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,
$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.FT,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),EV,"metabase/mbql/schema.cljc",55,$CLJS.Yu,1,623,623,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.Yu,$CLJS.cI,$CLJS.U($CLJS.T,oV)],null),$CLJS.B,"Schema for a valid upper clause.",$CLJS.p(fA)?fA.D:null])):null));
return $CLJS.p(a)?a:EV}(),fA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof iA?new $CLJS.u(function(){return iA},$CLJS.J(HT,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.FT,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),WQ,"metabase/mbql/schema.cljc",56,MO,1,632,632,new $CLJS.P(null,7,5,$CLJS.Q,[MO,ZV,$CLJS.U($CLJS.T,oV),YV,$CLJS.U($CLJS.T,oV),bQ,$CLJS.U($CLJS.T,$CLJS.U($CLJS.Si,oV))],null),$CLJS.B,"Schema for a valid concat clause.",$CLJS.p(iA)?iA.D:null])):null));return $CLJS.p(a)?a:WQ}(),iA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof jA?new $CLJS.u(function(){return jA},$CLJS.J(lU,new $CLJS.n(null,
1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,2,[$CLJS.FT,"null",cU,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),zP,"metabase/mbql/schema.cljc",74,hT,1,635,635,new $CLJS.P(null,5,5,$CLJS.Q,[hT,$CLJS.cI,$CLJS.U($CLJS.T,oV),jO,$CLJS.U($CLJS.T,$CLJS.KR)],null),$CLJS.B,
"Schema for a valid regex-match-first clause.",$CLJS.p(jA)?jA.D:null])):null));return $CLJS.p(a)?a:zP}(),jA],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof $z?new $CLJS.u(function(){return $z},$CLJS.J(wU,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.FT,
"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),gV,"metabase/mbql/schema.cljc",58,CT,1,605,605,new $CLJS.P(null,7,5,$CLJS.Q,[CT,ZV,$CLJS.U($CLJS.T,BO),YV,$CLJS.U($CLJS.T,BO),bQ,$CLJS.U($CLJS.T,$CLJS.U($CLJS.Si,BO))],null),$CLJS.B,"Schema for a valid coalesce clause.",$CLJS.p($z)?$z.D:null])):null));return $CLJS.p(a)?a:gV}(),$z],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=
X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof sB?new $CLJS.u(function(){return sB},$CLJS.J(IO,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[xO,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),vS,"metabase/mbql/schema.cljc",61,$CLJS.hQ,1,924,924,new $CLJS.P(null,5,5,$CLJS.Q,[$CLJS.hQ,$CLJS.Xy,$CLJS.U($CLJS.T,zQ),$CLJS.ij,$CLJS.U($CLJS.T,$CLJS.U($CLJS.ZN,XS))],null),$CLJS.B,"Schema for a valid case clause.",$CLJS.p(sB)?sB.D:null])):null));return $CLJS.p(a)?a:vS}(),sB],null)]));$CLJS.tB=Wo.o($CLJS.G([$CLJS.wi(ep,Oz),Sz,$CLJS.wi(ep,Lz),Mz,$CLJS.wi(ep,Pz),Xz,$CLJS.wi(ep,Rz),$CLJS.Vz,$CLJS.wi(ep,$CLJS.hQ),sB,$CLJS.Ou,$CLJS.Iz]));
uB=dp($CLJS.FF,$CLJS.G(["field",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Mh,$CLJS.Iz],null)]));vB=dp($CLJS.eT,$CLJS.G(["field",new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.Mh,$CLJS.Iz],null)]));wB=dp($CLJS.gS,$CLJS.G(["field-or-expression",$CLJS.tB]));xB=dp($CLJS.oW,$CLJS.G(["field-or-expression",$CLJS.tB]));yB=dp($CLJS.vP,$CLJS.G(["field-or-expression",$CLJS.tB]));zB=dp($CLJS.OU,$CLJS.G(["field-or-expression",$CLJS.tB]));AB=dp($CLJS.Qi,$CLJS.G(["field-or-expression",$CLJS.tB]));
BB=dp($CLJS.Tj,$CLJS.G(["field-or-expression",$CLJS.tB]));CB=dp($CLJS.TV,$CLJS.G(["field-or-expression",$CLJS.tB,"pred",$CLJS.OA]));DB=dp($CLJS.bU,$CLJS.G(["pred",$CLJS.OA]));EB=dp($CLJS.LT,$CLJS.G(["pred",$CLJS.OA]));FB=dp($CLJS.eV,$CLJS.G(["field-or-expression",$CLJS.tB]));GB=dp($CLJS.KP,$CLJS.G(["field-or-expression",$CLJS.tB]));HB=dp($CLJS.TU,$CLJS.G(["field-or-expression",$CLJS.tB]));IB=dp($CLJS.bR,$CLJS.G(["field-or-expression",$CLJS.tB,"percentile",Uz]));
JB=dp(iS,$CLJS.G(["metric-id",$CLJS.uo($CLJS.G([$CLJS.yo,$CLJS.vo]))]));
KB=Xo($CLJS.wi(ep,Oz),Sz,fp($CLJS.G([new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof wB?new $CLJS.u(function(){return wB},$CLJS.J(jU,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[xO,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),qS,"metabase/mbql/schema.cljc",60,$CLJS.gS,1,963,963,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.gS,FV,$CLJS.U($CLJS.T,qV)],null),$CLJS.B,"Schema for a valid avg clause.",$CLJS.p(wB)?wB.D:null])):null));return $CLJS.p(a)?a:qS}(),wB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof xB?new $CLJS.u(function(){return xB},$CLJS.J(hR,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,
$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[xO,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),PV,"metabase/mbql/schema.cljc",64,$CLJS.oW,1,964,964,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.oW,FV,$CLJS.U($CLJS.T,qV)],null),$CLJS.B,"Schema for a valid cum-sum clause.",$CLJS.p(xB)?xB.D:null])):null));return $CLJS.p(a)?
a:PV}(),xB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof yB?new $CLJS.u(function(){return yB},$CLJS.J(KQ,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[xO,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),zS,"metabase/mbql/schema.cljc",65,$CLJS.vP,1,965,965,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.vP,FV,$CLJS.U($CLJS.T,qV)],null),$CLJS.B,"Schema for a valid distinct clause.",$CLJS.p(yB)?yB.D:null])):null));return $CLJS.p(a)?a:zS}(),yB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof FB?new $CLJS.u(function(){return FB},$CLJS.J(vV,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,
$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[sU,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),GO,"metabase/mbql/schema.cljc",76,$CLJS.eV,1,979,979,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.eV,FV,$CLJS.U($CLJS.T,qV)],null),$CLJS.B,"Schema for a valid stddev clause.",$CLJS.p(FB)?FB.D:null])):null));return $CLJS.p(a)?
a:GO}(),FB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof zB?new $CLJS.u(function(){return zB},$CLJS.J(wT,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[xO,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),fP,"metabase/mbql/schema.cljc",60,$CLJS.OU,1,966,966,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.OU,FV,$CLJS.U($CLJS.T,qV)],null),$CLJS.B,"Schema for a valid sum clause.",$CLJS.p(zB)?zB.D:null])):null));return $CLJS.p(a)?a:fP}(),zB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof AB?new $CLJS.u(function(){return AB},$CLJS.J(PO,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,
$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[xO,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$CLJS.Aj,"metabase/mbql/schema.cljc",60,$CLJS.Qi,1,967,967,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.Qi,FV,$CLJS.U($CLJS.T,qV)],null),$CLJS.B,"Schema for a valid min clause.",$CLJS.p(AB)?AB.D:null])):null));return $CLJS.p(a)?
a:$CLJS.Aj}(),AB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof BB?new $CLJS.u(function(){return BB},$CLJS.J(vO,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[xO,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),$CLJS.Wj,"metabase/mbql/schema.cljc",60,$CLJS.Tj,1,968,968,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.Tj,FV,$CLJS.U($CLJS.T,qV)],null),$CLJS.B,"Schema for a valid max clause.",$CLJS.p(BB)?BB.D:null])):null));return $CLJS.p(a)?a:$CLJS.Wj}(),BB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof JB?new $CLJS.u(function(){return JB},$CLJS.J(CQ,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,
$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),VQ,"metabase/mbql/schema.cljc",26,iS,1,998,998,!0,new $CLJS.P(null,3,5,$CLJS.Q,[iS,oR,$CLJS.U($CLJS.T,$CLJS.U($CLJS.PS,XP,UV))],null),$CLJS.B,"Schema for a valid metric clause.",$CLJS.p(JB)?JB.D:null])):null));return $CLJS.p(a)?a:VQ}(),JB],null),new $CLJS.P(null,
2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof EB?new $CLJS.u(function(){return EB},$CLJS.J(lS,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[xO,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),JQ,"metabase/mbql/schema.cljc",62,$CLJS.LT,1,976,976,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.LT,$CLJS.Ej,$CLJS.U($CLJS.T,YR)],null),$CLJS.B,"Schema for a valid share clause.",$CLJS.p(EB)?EB.D:null])):null));return $CLJS.p(a)?a:JQ}(),EB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof DB?new $CLJS.u(function(){return DB},$CLJS.J(XO,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,
$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[xO,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),cP,"metabase/mbql/schema.cljc",68,$CLJS.bU,1,973,973,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.bU,$CLJS.Ej,$CLJS.U($CLJS.T,YR)],null),$CLJS.B,"Schema for a valid count-where clause.",$CLJS.p(DB)?DB.D:null])):null));
return $CLJS.p(a)?a:cP}(),DB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof CB?new $CLJS.u(function(){return CB},$CLJS.J(wW,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[xO,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),sS,"metabase/mbql/schema.cljc",66,$CLJS.TV,1,970,970,new $CLJS.P(null,5,5,$CLJS.Q,[$CLJS.TV,FV,$CLJS.U($CLJS.T,qV),$CLJS.Ej,$CLJS.U($CLJS.T,YR)],null),$CLJS.B,"Schema for a valid sum-where clause.",$CLJS.p(CB)?CB.D:null])):null));return $CLJS.p(a)?a:sS}(),CB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof sB?new $CLJS.u(function(){return sB},$CLJS.J(IO,new $CLJS.n(null,1,[SU,!0],
null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[xO,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),vS,"metabase/mbql/schema.cljc",61,$CLJS.hQ,1,924,924,new $CLJS.P(null,5,5,$CLJS.Q,[$CLJS.hQ,$CLJS.Xy,$CLJS.U($CLJS.T,zQ),$CLJS.ij,$CLJS.U($CLJS.T,$CLJS.U($CLJS.ZN,XS))],null),$CLJS.B,
"Schema for a valid case clause.",$CLJS.p(sB)?sB.D:null])):null));return $CLJS.p(a)?a:vS}(),sB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof HB?new $CLJS.u(function(){return HB},$CLJS.J(VU,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[nS,"null"],null),
null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),OV,"metabase/mbql/schema.cljc",68,$CLJS.TU,1,986,986,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.TU,FV,$CLJS.U($CLJS.T,qV)],null),$CLJS.B,"Schema for a valid median clause.",$CLJS.p(HB)?HB.D:null])):null));return $CLJS.p(a)?a:OV}(),HB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==
typeof mp&&"undefined"!==typeof IB?new $CLJS.u(function(){return IB},$CLJS.J(kT,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[nS,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),YU,"metabase/mbql/schema.cljc",72,$CLJS.bR,1,989,989,new $CLJS.P(null,
5,5,$CLJS.Q,[$CLJS.bR,FV,$CLJS.U($CLJS.T,qV),$CLJS.bR,$CLJS.U($CLJS.T,aV)],null),$CLJS.B,"Schema for a valid percentile clause.",$CLJS.p(IB)?IB.D:null])):null));return $CLJS.p(a)?a:YU}(),IB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof GB?new $CLJS.u(function(){return GB},$CLJS.J(IP,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,
nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),DO,"metabase/mbql/schema.cljc",77,$CLJS.KP,1,983,983,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.KP,FV,$CLJS.U($CLJS.T,qV)],null),$CLJS.B,"Schema for a valid var clause.",$CLJS.p(GB)?GB.D:null])):null));return $CLJS.p(a)?a:DO}(),GB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==
typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof vB?new $CLJS.u(function(){return vB},$CLJS.J(zO,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[xO,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$R,"metabase/mbql/schema.cljc",74,$CLJS.eT,
1,953,953,!0,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.eT,$CLJS.aT,$CLJS.U($CLJS.T,$CLJS.U($CLJS.ZN,VP))],null),$CLJS.B,"Schema for a valid cum-count clause.",$CLJS.p(vB)?vB.D:null])):null));return $CLJS.p(a)?a:$R}(),vB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof uB?new $CLJS.u(function(){return uB},$CLJS.J(GQ,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([mS,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,
X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,IV,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[new $CLJS.R(null,new $CLJS.n(null,1,[xO,"null"],null),null),$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$CLJS.ci,"metabase/mbql/schema.cljc",70,$CLJS.FF,1,952,952,!0,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.FF,$CLJS.aT,$CLJS.U($CLJS.T,$CLJS.U($CLJS.ZN,VP))],null),$CLJS.B,"Schema for a valid count clause.",$CLJS.p(uB)?uB.D:null])):null));
return $CLJS.p(a)?a:$CLJS.ci}(),uB],null)])));LB=Zo(new $CLJS.u(function(){return KB},VV,$CLJS.Yf([$CLJS.jk,$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[!0,$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),gW,"metabase/mbql/schema.cljc",35,1,1004,1004,$CLJS.B,null,$CLJS.p(KB)?KB.D:null])));MB=$CLJS.he([So($CLJS.S),$CLJS.vo,So($CLJS.TP),$CLJS.vo,$CLJS.qo,$CLJS.lo]);
$CLJS.NB=dp($CLJS.yO,$CLJS.G(["aggregation",LB,"options",MB]));$CLJS.Tz=Xo($CLJS.wi(ep,$CLJS.yO),$CLJS.NB,LB);OB=dp($CLJS.rS,$CLJS.G(["field",$CLJS.Kz]));PB=dp($CLJS.MR,$CLJS.G(["field",$CLJS.Kz]));
$CLJS.QB=fp($CLJS.G([new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof OB?new $CLJS.u(function(){return OB},$CLJS.J(lV,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),xR,"metabase/mbql/schema.cljc",15,$CLJS.rS,1,1042,1042,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.rS,$CLJS.aT,$CLJS.U($CLJS.T,OQ)],null),$CLJS.B,"Schema for a valid asc clause.",$CLJS.p(OB)?OB.D:null])):null));return $CLJS.p(a)?a:xR}(),OB],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof PB?new $CLJS.u(function(){return PB},$CLJS.J(eR,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,
$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),zU,"metabase/mbql/schema.cljc",16,$CLJS.MR,1,1043,1043,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.MR,$CLJS.aT,$CLJS.U($CLJS.T,OQ)],null),$CLJS.B,"Schema for a valid desc clause.",$CLJS.p(PB)?PB.D:null])):null));return $CLJS.p(a)?a:zU}(),PB],null)]));
Uo.o($CLJS.G([HO,FP,$CLJS.lO,$CLJS.Vu,$CLJS.uK,QS]));RB=$CLJS.he([So($CLJS.bj),$CLJS.vo,$CLJS.S,$CLJS.vo,$CLJS.TP,$CLJS.vo,$CLJS.qo,$CLJS.lo]);SB=$CLJS.vk.o($CLJS.G([RB,$CLJS.he([$CLJS.oj,$CLJS.Am(HO),uO,$CLJS.vo,zT,$CLJS.yo,So(AT),$CLJS.yo])]));TB=$CLJS.vk.o($CLJS.G([RB,new $CLJS.n(null,2,[$CLJS.oj,$CLJS.Am(FP),AV,$CLJS.yo],null)]));UB=$CLJS.vk.o($CLJS.G([RB,$CLJS.he([So($CLJS.mh),$CLJS.lo,So(vQ),$CLJS.no])]));
WB=$CLJS.vk.o($CLJS.G([UB,new $CLJS.n(null,3,[$CLJS.oj,$CLJS.Am($CLJS.lO),$CLJS.lO,Gz,$CLJS.oQ,Zo(new $CLJS.u(function(){return VB},oU,$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),wS,"metabase/mbql/schema.cljc",23,1,1139,!0,1139,$CLJS.B,null,$CLJS.p(VB)?VB.D:null])))],null)]));
XB=$CLJS.fe.h(Uo,new $CLJS.R(null,new $CLJS.n(null,4,[QS,null,$CLJS.Vu,null,$CLJS.Mi,null,$CLJS.uK,null],null),null));YB=$CLJS.vk.o($CLJS.G([UB,new $CLJS.n(null,1,[$CLJS.oj,XB],null)]));ZB=Wo.o($CLJS.G([function(a){return $CLJS.E.h($CLJS.oj.g(a),$CLJS.lO)},WB,function(a){return $CLJS.E.h($CLJS.oj.g(a),HO)},SB,function(a){return $CLJS.E.h($CLJS.oj.g(a),FP)},TB,$CLJS.Ou,YB]));
$B=$CLJS.Gm($CLJS.he([$CLJS.vo,ZB]),function(a){return $CLJS.re(function(b){var c=$CLJS.I(b,0,null);b=$CLJS.I(b,1,null);return $CLJS.E.h(c,$CLJS.S.g(b))},a)},"keys in template tag map must match the :name of their values");aC=$CLJS.he([$CLJS.JO,$CLJS.lo,So($CLJS.AU),$B,So(QQ),$CLJS.ap($CLJS.vo),$CLJS.qo,$CLJS.lo]);
cC=Xo($CLJS.xh.h($CLJS.Xc,$CLJS.QT),$CLJS.Oo(aC,new $CLJS.n(null,1,[$CLJS.JO,$CLJS.QT],null)),Zo(new $CLJS.u(function(){return $CLJS.bC},ZR,$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),cV,"metabase/mbql/schema.cljc",25,1,1219,!0,1219,$CLJS.B,null,$CLJS.p($CLJS.bC)?$CLJS.bC.D:null]))));
dC=$CLJS.he([$CLJS.S,$CLJS.vo,$CLJS.AL,$CLJS.wo,yT,$CLJS.vo,So($CLJS.nR),$CLJS.ap($CLJS.xo),So($CLJS.pQ),$CLJS.ap($CLJS.Ao),$CLJS.lo,$CLJS.lo]);$CLJS.eC=/^card__[1-9]\d*$/;fC=$CLJS.uo($CLJS.G([$CLJS.yo,$CLJS.eC]));gC=$CLJS.fe.h(Uo,new $CLJS.R(null,new $CLJS.n(null,4,[KV,null,nO,null,SS,null,NU,null],null),null));
iC=$CLJS.Gm($CLJS.Yf([$CLJS.qo,So($CLJS.HR),So($CLJS.cS),So($CLJS.aR),So($CLJS.UO),pW,So($CLJS.KU),So(DU),So($CLJS.PW)],[$CLJS.lo,$CLJS.ap(new $CLJS.P(null,1,5,$CLJS.Q,[dC],null)),fC,$CLJS.vo,$CLJS.Em($CLJS.uo($CLJS.G([Uo.o($CLJS.G([$CLJS.eI,BS])),Zo(new $CLJS.u(function(){return hC},MU,$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,$CLJS.Yi,$CLJS.pj,nU,$CLJS.pk,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),OT,"metabase/mbql/schema.cljc",16,1,1266,!0,1266,$CLJS.B,null,$CLJS.p(hC)?hC.D:null])))])),"Valid Join `:fields`: `:all`, `:none`, or a sequence of `:field` clauses that have `:join-alias`."),$CLJS.OA,cC,$CLJS.ap($CLJS.yo),gC]),$CLJS.xh.h($CLJS.yh.h($CLJS.cS,$CLJS.KU),$CLJS.ue($CLJS.xh.h($CLJS.cS,$CLJS.KU))),"Joins must have either a `source-table` or `source-query`, but not both.");
jC=$CLJS.Gm(gp(new $CLJS.P(null,1,5,$CLJS.Q,[iC],null)),function(a){return ip($CLJS.Be($CLJS.Do,$CLJS.xg.h($CLJS.aR,a)))},"All join aliases must be unique.");hC=$CLJS.Em($CLJS.Gm(gp(new $CLJS.P(null,1,5,$CLJS.Q,[$CLJS.Iz],null)),ip,"distinct"),"Distinct, non-empty sequence of Field clauses");
$CLJS.bC=$CLJS.Gm($CLJS.Gm($CLJS.Yf([$CLJS.qo,So($CLJS.jW),So($CLJS.HR),So($CLJS.RP),So($CLJS.cS),So($CLJS.uP),So($CLJS.UO),So($CLJS.FR),So($CLJS.tR),So($CLJS.KU),So(VW),So(UT),So($CLJS.FT)],[$CLJS.lo,$CLJS.Gm(gp(new $CLJS.P(null,1,5,$CLJS.Q,[$CLJS.QB],null)),ip,"distinct"),$CLJS.ap(new $CLJS.P(null,1,5,$CLJS.Q,[dC],null)),jC,fC,$CLJS.OA,hC,gp(new $CLJS.P(null,1,5,$CLJS.Q,[$CLJS.Tz],null)),gp(new $CLJS.P(null,1,5,$CLJS.Q,[$CLJS.Iz],null)),cC,$CLJS.zo,new $CLJS.n(null,2,[UT,$CLJS.yo,aQ,$CLJS.yo],null),
$CLJS.he([$CLJS.vo,$CLJS.tB])]),function(a){return $CLJS.E.h(1,$CLJS.D($CLJS.ti(a,new $CLJS.P(null,2,5,$CLJS.Q,[$CLJS.KU,$CLJS.cS],null))))},"Query must specify either `:source-table` or `:source-query`, but not both."),function(a){var b=$CLJS.je(a);a=$CLJS.K.h(b,$CLJS.tR);b=$CLJS.K.h(b,$CLJS.UO);return $CLJS.Tc(op.h($CLJS.ig(a),$CLJS.ig(b)))},"Fields specified in `:breakout` should not be specified in `:fields`; this is implied.");
kC=$CLJS.Yf([$CLJS.CV,QS,DQ,nQ,IR,NW,gR,$CLJS.KW,$CLJS.Vu,fR,RO,jV,qW,$CLJS.iP,iW,BQ,$CLJS.SR,cR,$CLJS.bj,$CLJS.$Q,AO,$CLJS.NP,$CLJS.YQ,LS,$CLJS.Mi,$CLJS.uK,TQ],[new $CLJS.n(null,1,[vR,new $CLJS.R(null,new $CLJS.n(null,5,[$CLJS.CV,null,QS,null,$CLJS.Vu,null,$CLJS.Mi,null,$CLJS.uK,null],null),null)],null),new $CLJS.n(null,2,[$CLJS.oj,QS,vR,new $CLJS.R(null,new $CLJS.n(null,5,[$CLJS.CV,null,QS,null,$CLJS.KW,null,$CLJS.SR,null,$CLJS.bj,null],null),null)],null),new $CLJS.n(null,3,[$CLJS.oj,$CLJS.Nj,iT,
BV,vR,new $CLJS.R(null,new $CLJS.n(null,1,[DQ,null],null),null)],null),new $CLJS.n(null,3,[$CLJS.oj,SW,iT,BV,vR,new $CLJS.R(null,new $CLJS.n(null,5,[$CLJS.CV,null,nQ,null,$CLJS.Vu,null,$CLJS.bj,null,AO,null],null),null)],null),new $CLJS.n(null,3,[$CLJS.oj,$CLJS.Nj,iT,YO,vR,new $CLJS.R(null,new $CLJS.n(null,1,[IR,null],null),null)],null),new $CLJS.n(null,1,[vR,new $CLJS.R(null,new $CLJS.n(null,1,[NW,null],null),null)],null),new $CLJS.n(null,3,[$CLJS.oj,SW,iT,FU,vR,new $CLJS.R(null,new $CLJS.n(null,
1,[gR,null],null),null)],null),new $CLJS.n(null,2,[$CLJS.oj,QS,vR,new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.KW,null],null),null)],null),new $CLJS.n(null,2,[$CLJS.oj,SW,vR,new $CLJS.R(null,new $CLJS.n(null,5,[$CLJS.CV,null,nQ,null,$CLJS.Vu,null,$CLJS.bj,null,AO,null],null),null)],null),new $CLJS.n(null,3,[$CLJS.oj,SW,iT,YO,vR,new $CLJS.R(null,new $CLJS.n(null,1,[fR,null],null),null)],null),new $CLJS.n(null,1,[vR,new $CLJS.R(null,new $CLJS.n(null,1,[RO,null],null),null)],null),new $CLJS.n(null,3,[$CLJS.oj,
$CLJS.Nj,iT,BV,vR,new $CLJS.R(null,new $CLJS.n(null,8,[$CLJS.CV,null,NW,null,RO,null,jV,null,cR,null,$CLJS.bj,null,AO,null,$CLJS.uK,null],null),null)],null),new $CLJS.n(null,3,[$CLJS.oj,$CLJS.Nj,iT,YO,vR,new $CLJS.R(null,new $CLJS.n(null,1,[qW,null],null),null)],null),new $CLJS.n(null,2,[$CLJS.oj,QS,vR,new $CLJS.R(null,new $CLJS.n(null,2,[$CLJS.KW,null,$CLJS.iP,null],null),null)],null),new $CLJS.n(null,3,[$CLJS.oj,$CLJS.Nj,iT,YO,vR,new $CLJS.R(null,new $CLJS.n(null,1,[iW,null],null),null)],null),
new $CLJS.n(null,3,[$CLJS.oj,$CLJS.Nj,iT,YO,vR,new $CLJS.R(null,new $CLJS.n(null,1,[BQ,null],null),null)],null),new $CLJS.n(null,2,[$CLJS.oj,QS,vR,new $CLJS.R(null,new $CLJS.n(null,5,[$CLJS.CV,null,QS,null,$CLJS.KW,null,$CLJS.SR,null,$CLJS.bj,null],null),null)],null),new $CLJS.n(null,1,[vR,new $CLJS.R(null,new $CLJS.n(null,1,[cR,null],null),null)],null),new $CLJS.n(null,1,[vR,new $CLJS.R(null,new $CLJS.n(null,1,[$CLJS.bj,null],null),null)],null),new $CLJS.n(null,2,[$CLJS.oj,QS,vR,new $CLJS.R(null,
new $CLJS.n(null,2,[$CLJS.KW,null,$CLJS.$Q,null],null),null)],null),new $CLJS.n(null,1,[vR,new $CLJS.R(null,new $CLJS.n(null,1,[AO,null],null),null)],null),new $CLJS.n(null,2,[$CLJS.oj,QS,vR,new $CLJS.R(null,new $CLJS.n(null,2,[$CLJS.KW,null,$CLJS.NP,null],null),null)],null),new $CLJS.n(null,2,[$CLJS.oj,QS,vR,new $CLJS.R(null,new $CLJS.n(null,2,[$CLJS.KW,null,$CLJS.YQ,null],null),null)],null),new $CLJS.n(null,3,[$CLJS.oj,SW,iT,BV,vR,new $CLJS.R(null,new $CLJS.n(null,1,[LS,null],null),null)],null),
new $CLJS.n(null,2,[$CLJS.oj,$CLJS.Mi,vR,new $CLJS.R(null,new $CLJS.n(null,3,[$CLJS.CV,null,$CLJS.bj,null,$CLJS.Mi,null],null),null)],null),new $CLJS.n(null,2,[$CLJS.oj,$CLJS.Nj,vR,new $CLJS.R(null,new $CLJS.n(null,8,[$CLJS.CV,null,NW,null,RO,null,jV,null,cR,null,$CLJS.bj,null,AO,null,$CLJS.uK,null],null),null)],null),new $CLJS.n(null,3,[$CLJS.oj,SW,iT,YO,vR,new $CLJS.R(null,new $CLJS.n(null,1,[TQ,null],null),null)],null)]);VB=$CLJS.fe.h(Uo,$CLJS.bg(kC));
lC=dp(xP,$CLJS.G(["tag-name",$CLJS.uo($CLJS.G([$CLJS.vo,new $CLJS.n(null,1,[$CLJS.bj,$CLJS.vo],null)]))]));mC=dp($CLJS.lO,$CLJS.G(["target",$CLJS.uo($CLJS.G([$CLJS.Iz,lC]))]));nC=dp(XQ,$CLJS.G(["target",lC]));
oC=$CLJS.uo($CLJS.G([$CLJS.Iz,fp($CLJS.G([new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof mC?new $CLJS.u(function(){return mC},$CLJS.J(fT,new $CLJS.n(null,1,[SU,!0],null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),aU,"metabase/mbql/schema.cljc",21,$CLJS.lO,1,1565,1565,new $CLJS.P(null,3,5,$CLJS.Q,[$CLJS.lO,$CLJS.ZW,$CLJS.U($CLJS.T,$CLJS.U($CLJS.PS,VP,uR))],null),$CLJS.B,"Schema for a valid dimension clause.",$CLJS.p(mC)?mC.D:null])):null));return $CLJS.p(a)?a:aU}(),mC],null),new $CLJS.P(null,2,5,$CLJS.Q,[function(){var a=X.g($CLJS.Sc("undefined"!==typeof kp&&"undefined"!==typeof lp&&"undefined"!==typeof mp&&"undefined"!==typeof nC?new $CLJS.u(function(){return nC},$CLJS.J(RT,new $CLJS.n(null,1,[SU,!0],
null)),$CLJS.Yf([$CLJS.aj,$CLJS.S,$CLJS.Zj,$CLJS.ai,X,$CLJS.Yi,$CLJS.pj,$CLJS.pk,nP,$CLJS.$h,$CLJS.V,$CLJS.Yj],[$CLJS.J(ZU,new $CLJS.n(null,1,[$CLJS.V,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),TW,"metabase/mbql/schema.cljc",20,XQ,1,1568,1568,new $CLJS.P(null,3,5,$CLJS.Q,[XQ,$CLJS.ZW,$CLJS.U($CLJS.T,uR)],null),$CLJS.B,"Schema for a valid variable clause.",$CLJS.p(nC)?nC.D:null])):null));return $CLJS.p(a)?a:TW}(),nC],null)]))]));
pC=$CLJS.he([$CLJS.oj,VB,So($CLJS.bj),$CLJS.vo,So($CLJS.ZW),oC,So($CLJS.zj),$CLJS.lo,So($CLJS.S),$CLJS.vo,So(SP),$CLJS.vo,So($CLJS.mh),$CLJS.lo,$CLJS.qo,$CLJS.lo]);qC=new $CLJS.P(null,1,5,$CLJS.Q,[pC],null);rC=$CLJS.he([So(sW),$CLJS.vo,$CLJS.qo,$CLJS.lo]);sC=$CLJS.Gm($CLJS.he([So(tS),$CLJS.zo,So(dP),$CLJS.zo,$CLJS.qo,$CLJS.lo]),function(a){var b=$CLJS.je(a);a=$CLJS.K.h(b,tS);b=$CLJS.K.h(b,dP);return $CLJS.La($CLJS.p(a)?b:a)?!0:a>=b},"max-results-bare-rows must be less or equal to than max-results");
tC=$CLJS.he([So(kV),$CLJS.no,So(CP),$CLJS.no,So(pO),$CLJS.no,So($P),$CLJS.no,So(JU),$CLJS.ap($CLJS.no),So(tO),$CLJS.ap($CLJS.no),So(yV),$CLJS.ap($CLJS.no),$CLJS.qo,$CLJS.lo]);uC=Uo.o($CLJS.G([GT,QQ,gT,WT,dS,eP,EP,uQ,dR,BU,$W,wR,NQ]));
vC=$CLJS.Yf([So(vW),So(AR),So($CLJS.RQ),So(UU),So(aS),So(qO),So(mW),So(AV),So($CLJS.AP)],[$CLJS.ap($CLJS.vo),$CLJS.ap($CLJS.yo),$CLJS.ap(new $CLJS.P(null,1,5,$CLJS.Q,[$CLJS.he([$CLJS.lo,$CLJS.lo])],null)),$CLJS.ap($CLJS.yo),$CLJS.ap($CLJS.yo),$CLJS.ap($CLJS.lo),$CLJS.ap($CLJS.he([$CLJS.lo,$CLJS.lo])),$CLJS.ap($CLJS.yo),$CLJS.ap(uC)]);wC=$CLJS.uo($CLJS.G([$CLJS.Am(-1337),$CLJS.yo]));
$CLJS.xC=$CLJS.Gm($CLJS.Gm($CLJS.Gm($CLJS.Yf([$CLJS.qo,So($CLJS.QT),So(LU),So($CLJS.sI),So(dT),So(kS),$CLJS.oj,So($CLJS.JO),AT,So($CLJS.DP)],[$CLJS.lo,aC,$CLJS.ap(rC),$CLJS.ap(vC),$CLJS.ap(sC),$CLJS.ap(tC),Uo.o($CLJS.G([$CLJS.JO,$CLJS.QT])),$CLJS.bC,wC,qC]),$CLJS.xh.h($CLJS.yh.h($CLJS.QT,$CLJS.JO),$CLJS.ue($CLJS.xh.h($CLJS.QT,$CLJS.JO))),"Query must specify either `:native` or `:query`, but not both."),function(a){var b=$CLJS.je(a);a=$CLJS.K.h(b,$CLJS.QT);var c=$CLJS.K.h(b,$CLJS.JO);b=$CLJS.K.h(b,
$CLJS.oj);b=b instanceof $CLJS.M?b.T:null;switch(b){case "native":return a;case "query":return c;default:throw Error(["No matching clause: ",$CLJS.q.g(b)].join(""));}},"Native queries must specify `:native`; MBQL queries must specify `:query`."),$CLJS.ue($CLJS.HR),"`:source-metadata` should be added in the same level as `:source-query` (i.e., the 'inner' MBQL query.)");
(function(a){var b=$CLJS.bp(a);return function(c){var d=b(c);if($CLJS.p(d))throw $CLJS.Jo($CLJS.kl("Value does not match schema: %s",$CLJS.G([$CLJS.gh.o($CLJS.G([d]))])),new $CLJS.n(null,4,[$CLJS.oj,$CLJS.CN,$CLJS.Xj,a,$CLJS.zj,c,$CLJS.Pu,d],null));return c}})($CLJS.xC);