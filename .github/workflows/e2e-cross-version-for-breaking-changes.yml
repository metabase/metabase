name: E2E Cross-version Tests

on:
  workflow_dispatch:
    inputs:
      fe-ref:
        description: "Frontend git ref to use"
        type: string
        required: true
        default: "master"
      be-ref:
        description: "Backend git ref to use"
        type: string
        required: true
        default: "master"
      total-shards:
        description: "Total number of parallel test shards"
        type: number
        required: false
        default: 4
  workflow_call:
    inputs:
      fe-ref:
        description: "Frontend git ref to use"
        type: string
        required: true
      be-ref:
        description: "Backend git ref to use"
        type: string
        required: true
      total-shards:
        description: "Total number of parallel test shards"
        type: number
        required: false
        default: 4

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix_json: ${{ steps.set_matrix.outputs.matrix_json }}
      shards_total: ${{ steps.set_matrix.outputs.shards_total }}
    steps:
      - name: Set up shard matrix
        id: set_matrix
        uses: actions/github-script@v7
        with:
          # generate an output like `{"matrixJson": "{\"shard\": [1, 2, 3, 4]}", "shardsTotal": 4}` to be used in the other jobs
          script: |
            const totalShards = parseInt(process.env.TOTAL_SHARDS_INPUT, 10);

            const matrix = { shard: Array.from({ length: totalShards }, (_, i) => i + 1) };

            console.log("Generated matrix JSON", matrix);
            console.log(`Total shards: ${totalShards}`);

            core.setOutput('matrix_json', JSON.stringify(matrix));
            core.setOutput('shards_total', totalShards);
        env:
          TOTAL_SHARDS_INPUT: ${{ inputs.total-shards }}

  build-jar:
    runs-on: ubuntu-22.04
    timeout-minutes: 45

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare Node.js
        # We're not using `actions/prepare-frontend` because we don't want to install deps from the root repo
        # nor we want to touch the cache as we'll be potentially be installing different versions of packages
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Prepare back-end environment
        uses: ./.github/actions/prepare-backend
        with:
          m2-cache-key: cross-version-uberjar

      - name: Build jar with different frontend and backend version
        env:
          MB_EDITION: ee
          CYPRESS_CI: true
        run: |
          node bin/backward-compatibility-test.js \
            ${{ inputs.fe-ref }} ${{ inputs.be-ref }} \
            build

      - name: Upload Uberjar
        uses: actions/upload-artifact@v4
        with:
          name: metabase-jar-cross-version
          path: .tmp/metabase-be/target/uberjar/metabase.jar
          if-no-files-found: error

  run-breaking-changes-tests:
    needs: [build-jar, generate-matrix]
    runs-on: ubuntu-22.04
    timeout-minutes: 45
    env:
      TOTAL_SHARDS: ${{ needs.generate-matrix.outputs.shards_total }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix_json) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Prepare back-end environment
        uses: ./.github/actions/prepare-backend
        with:
          m2-cache-key: cross-version-uberjar

      - name: Download Uberjar
        uses: actions/download-artifact@v4
        with:
          name: metabase-jar-cross-version
          path: .tmp/metabase-be/target/uberjar/

      - name: Download FE repo
        run: |
          git clone --depth 1 -b ${{ inputs.fe-ref }} https://github.com/metabase/metabase.git .tmp/metabase-fe

      - name: Install FE dependencies
        working-directory: .tmp/metabase-fe
        run: |
          yarn install

      - name: Prepare Cypress environment
        id: cypress-prep
        uses: ./.github/actions/prepare-cypress
        with:
          working-directory: .tmp/metabase-fe

      - name: Run the tests
        env:
          MB_EDITION: ee
          CYPRESS_ALL_FEATURES_TOKEN: ${{ secrets.ENTERPRISE_TOKEN }}
          CYPRESS_NO_FEATURES_TOKEN: ${{ secrets.E2E_STARTER_TOKEN }}
          CYPRESS_CI: true
        run: |
          node bin/backward-compatibility-test.js \
            ${{ inputs.fe-ref }} ${{ inputs.be-ref }} \
            start > /dev/null & \
            node bin/backward-compatibility-test.js \
            ${{ inputs.fe-ref }} ${{ inputs.be-ref }} \
            test ${{ matrix.shard}}/${{ env.TOTAL_SHARDS }}
