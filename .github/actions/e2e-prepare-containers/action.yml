name: Prepare Docker containers
description: Prepare Docker containers for E2E tests.
inputs:
  username:
    description: DockerHub username
    required: true
  password:
    description: DockerHub password/token
    required: true
  maildev:
    description: Maildev container
    required: true
    default: false
  openldap:
    description: OpenLDAP container
    required: true
    default: false
  postgres:
    description: Postgres container
    required: true
    default: false
  mysql:
    description: MySQL container
    required: true
    default: false
  mongo:
    description: Mongo container
    required: true
    default: false
  webhook:
    description: Webhook tester container
    required: false
    default: false
  snowplow:
    description: Snowplow micro container
    required: false
    default: false

runs:
  using: "composite"
  steps:
    - name: Authenticate to prevent API rate limit
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Start Containers
      shell: bash
      run: | # bash
        Y='\033[33m'
        G='\033[1;32m'

        cd e2e/test/scenarios/

        docker compose up \
          $([ ${{ inputs.postgres }} = true ] && echo "postgres-sample") \
          $([ ${{ inputs.mysql }} = true ] && echo "mysql-sample") \
          $([ ${{ inputs.mongo }} = true ] && echo "mongo-sample") \
          $([ ${{ inputs.maildev }} = true ] && echo "maildev") \
          $([ ${{ inputs.openldap }} = true ] && echo "ldap") \
          $([ ${{ inputs.webhook }} = true ] && echo "webhook-tester") \
          $([ ${{ inputs.snowplow }} = true ] && echo "snowplow-micro") \
          -d

        if ${{ inputs.maildev }}; then
          echo -e "${Y}checking maildev container..." &&
          while ! nc -z localhost 1080; do sleep 1; done &&
          while ! nc -z localhost 1025; do sleep 1; done &&
          echo -e "${G}Maildev is up and running!"
        fi

        if ${{ inputs.openldap }}; then
          echo -e "${Y}checking openldap container..." &&
          while ! nc -z localhost 389; do sleep 1; done &&
          echo -e "${G}Openldap is up and running!"
        fi

        if ${{ inputs.postgres }}; then
          echo -e "${Y}checking postgres container..." &&
          while ! nc -z localhost 5404; do sleep 1; done &&
          echo -e "${G}Postgres is up and running!"
        fi

        if ${{ inputs.mysql }}; then
          echo -e "${Y}checking mysql container..." &&
          while ! nc -z localhost 3304; do sleep 1; done &&
          echo -e "${G}MySQL is up and running!"
        fi

        if ${{ inputs.mongo }}; then
          echo -e "${Y}checking mongo container..." &&
          while ! nc -z localhost 27004; do sleep 1; done &&
          echo -e "${G}Mongo is up and running!"
        fi

        if ${{ inputs.webhook }}; then
          echo -e "${Y}checking webhook test container..." &&
          while ! nc -z localhost 9080; do sleep 1; done &&
          echo -e "${G}Webhook tester is up and running!"
        fi

        if ${{ inputs.snowplow }}; then
          echo -e "${Y}checking snowplow micro container..." &&
          while ! nc -z localhost 9090; do sleep 1; done &&
          echo -e "${G}Snowplow micro is up and running!"
        fi
