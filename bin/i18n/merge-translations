#!/usr/bin/env bash
# This script merges translations from the given branch into the current branch.
#
# In case of a conflict, the translation in the current branch is used. To give
# precedence to translations in the other branch, use the -o flag.
#
# Example usage:
#   ./bin/i18n/merge-translations <branch-name> [-o]
#
# Run this script from the root directory since it assumes that .po files exist
# in a locales/ directory.

otherBranch="$1"
prioritizeOtherTranslations=false

shift

usage() {
  echo "Usage: $0 <branch> [-o]"
  echo "  <branch>    Specify the branch to merge translations from."
  echo "  -o          Prioritize translations from the other branch, in case of conflicts."
  exit 1
}

while getopts "o" opt; do
  case ${opt} in
    o)
      prioritizeOtherTranslations=true
      ;;
    *)
      usage
      ;;
  esac
done

# Ensure the source branch argument is provided
if [[ -z "$otherBranch" ]]; then
  usage
fi

remove_unnecessary_wrapping() {
  local input=""
  while IFS= read -r line; do
    input+="$line"$'EscapedNewline'
  done

  echo -E "$input" | sed 's/\(msgid\|msgstr\) ""EscapedNewline"/\1 "/g' | sed 's/EscapedNewline/\n/g'
}

for po in locales/*.po; do
  set -f

  echo "Merging translations from $otherBranch:$po into $po"

  if [ "$prioritizeOtherTranslations" = true ]; then
    msgcat --no-wrap --use-first <(git show "$otherBranch:$po") "$po" | remove_unnecessary_wrapping > "$po.tmp"
  else
    msgcat --no-wrap --use-first "$po" <(git show "$otherBranch:$po") | remove_unnecessary_wrapping > "$po.tmp"
  fi

  # Outputting directly to $po while reading it causes problems, so we output
  # to a temporary file, then replace the .po file with it
  mv "$po.tmp" "$po"
done
