name: Backend

on:
  push:
    branches:
      - 'master'
      - 'release-**'
    paths-ignore:
      - "docs/**"
      - "**.md"
      # frontend and E2E tests
      - "**/frontend/test/**"
      - "**/frontend/**.unit.*"
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - "docs/**"
      - "**.md"
      # frontend and E2E tests
      - "**/frontend/test/**"
      - "**/frontend/**.unit.*"

jobs:

  be-linter-cloverage:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v3
    - name: Build static viz frontend
      run: yarn build-static-viz
    - name: Prepare back-end environment
      uses: ./.github/actions/prepare-backend
      with:
        m2-cache-key: 'cloverage'
    - name: Collect the test coverage
      run: clojure -X:dev:ee:ee-dev:test:cloverage
    - name: Upload coverage to codecov.io
      uses: codecov/codecov-action@v2
      with:
        files: ./target/coverage/codecov.json
        flags: back-end

  be-linter-clj-kondo:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v3
    - name: Run clj-kondo
      run: >-
        docker run
        --volume $PWD:/work
        --rm
        cljkondo/clj-kondo:2023.01.20
        clj-kondo
        --config /work/.clj-kondo/config.edn
        --config-dir /work/.clj-kondo
        --parallel
        --lint
        /work/src
        /work/test
        /work/enterprise/backend/src
        /work/enterprise/backend/test
        /work/shared/src
        /work/shared/test
        /work/modules/drivers/sparksql/src
        /work/modules/drivers/sparksql/test
        /work/modules/drivers/vertica/src
        /work/modules/drivers/vertica/test
        /work/modules/drivers/presto-common/src
        /work/modules/drivers/presto-common/test
        /work/modules/drivers/presto/src
        /work/modules/drivers/presto/test
        /work/modules/drivers/mongo/src
        /work/modules/drivers/mongo/test
        /work/modules/drivers/oracle/src
        /work/modules/drivers/oracle/test
        /work/modules/drivers/sqlite/src
        /work/modules/drivers/sqlite/test
        /work/modules/drivers/bigquery-cloud-sdk/src
        /work/modules/drivers/bigquery-cloud-sdk/test
        /work/modules/drivers/redshift/src
        /work/modules/drivers/redshift/test
        /work/modules/drivers/snowflake/src
        /work/modules/drivers/snowflake/test
        /work/modules/drivers/googleanalytics/src
        /work/modules/drivers/googleanalytics/test
        /work/modules/drivers/druid/src
        /work/modules/drivers/druid/test
        /work/modules/drivers/sqlserver/src
        /work/modules/drivers/sqlserver/test
        /work/modules/drivers/presto-jdbc/src
        /work/modules/drivers/presto-jdbc/test

  be-linter-eastwood:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v3
    - name: Prepare back-end environment
      uses: ./.github/actions/prepare-backend
      with:
        m2-cache-key: 'eastwood'
    - run: clojure -X:dev:ee:ee-dev:drivers:drivers-dev:test:eastwood
      name: Run Eastwood linter

  # Because it's not possible to conditionally run only `java-11-ee` test in the draft mode,
  # we have to extract that job manually here. Backend developers have requested that this
  # test runs at all times to give them an early warning sign is something is broken.
  be-tests-java-11-ee-pre-check:
    if: github.event.pull_request.draft == true
    runs-on: ubuntu-20.04
    name: be-tests-java-11-ee-pre-check
    timeout-minutes: 25
    steps:
    - uses: actions/checkout@v3
    - name: Prepare front-end environment
      uses: ./.github/actions/prepare-frontend
    - name: Prepare back-end environment
      uses: ./.github/actions/prepare-backend

    - run: yarn install --frozen-lockfile --prefer-offline
    - name: Build static viz frontend
      run: yarn build-static-viz

    - name: Run tests
      run: clojure -X:dev:ci:test:ee:ee-dev

    - name: Publish Test Report (JUnit)
      uses: dorny/test-reporter@v1
      if: always()
      with:
        path: 'target/junit/**/*_test.xml'
        name: JUnit Test Report be-tests-java-11-ee-pre-check
        reporter: java-junit

  be-tests:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-20.04
    name: be-tests-java-${{ matrix.java-version }}-${{ matrix.edition }}
    timeout-minutes: 25
    strategy:
      fail-fast: false
      matrix:
        edition: [oss, ee]
        java-version: [11, 17]
    steps:
    - uses: actions/checkout@v3
    - name: Prepare front-end environment
      uses: ./.github/actions/prepare-frontend
    - name: Prepare back-end environment
      uses: ./.github/actions/prepare-backend

    - run: yarn install --frozen-lockfile --prefer-offline
    - name: Build static viz frontend
      run: yarn build-static-viz

    - name: Run tests
      run: clojure -X:dev:ci:test:${{ matrix.edition }}:${{ matrix.edition }}-dev

    - name: Publish Test Report (JUnit)
      uses: dorny/test-reporter@v1
      if: always()
      with:
        path: 'target/junit/**/*_test.xml'
        name: JUnit Test Report be-tests-java-${{ matrix.java-version }}-${{ matrix.edition }}
        reporter: java-junit

  # checks that all the namespaces we actually ship can be compiled, without any dependencies that we don't ship (such
  # as `:dev` dependencies). See #27009 for more context.
  be-check:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-20.04
    name: be-check-java-${{ matrix.java-version }}
    timeout-minutes: 10
    strategy:
      matrix:
        java-version: [11, 17, 19]
    steps:
      - uses: actions/checkout@v3
      - name: Prepare backend
        uses: ./.github/actions/prepare-backend
      - name: Check namespaces
        run: clojure -M:ee:drivers:check
