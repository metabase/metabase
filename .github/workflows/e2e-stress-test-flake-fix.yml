name: E2E Stress Test Flake Fix

on:
  workflow_dispatch:
    inputs:
      artifact:
        description: 'Artifact ID'
        type: string
        required: true
      spec:
        description: 'Relative path of the target spec'
        type: string
        required: true
      burn_in:
        description: 'Number of times to run the test (e.g. 20)'
        type: string
        required: true

jobs:
  stress-test-flake-fix:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    name: Stress test E2E flake fix
    env:
      DISPLAY: ""
      QA_DB_ENABLED: true
      CYPRESS_ALL_FEATURES_TOKEN: ${{ secrets.ENTERPRISE_TOKEN }}
      CYPRESS_NO_FEATURES_TOKEN: ${{ secrets.E2E_STARTER_TOKEN }}
      MB_SNOWPLOW_AVAILABLE: true
      MB_SNOWPLOW_URL: "http://localhost:9090" # Snowplow micro
      TZ: US/Pacific # to make node match the instance tz
    services:
      maildev:
        image: maildev/maildev:2.0.5
        ports:
          - "1080:1080"
          - "1025:1025"
        credentials:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      openldap:
        image: osixia/openldap:1.5.0
        ports:
          - "389:389"
        credentials:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      postgres-sample:
        image: metabase/qa-databases:postgres-sample-12
        ports:
          - "5404:5432"
        credentials:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      mongo-sample:
        image: metabase/qa-databases:mongo-sample-4.4
        ports:
          - 27004:27017
        credentials:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      mysql-sample:
        image: metabase/qa-databases:mysql-sample-8
        ports:
          - 3304:3306
        credentials:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Download Metabase uberjar from a previously stored artifact
        run: |
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/metabase/metabase/actions/artifacts/$ARTIFACT_ID/zip \
            -o mb.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARTIFACT_ID: ${{ github.event.inputs.artifact }}
      - name: Unzip Metabase artifact containing an uberjar
        run: unzip mb.zip
      - name: Prepare front-end environment
        uses: ./.github/actions/prepare-frontend
      - name: Prepare JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: "temurin"
      - name: Prepare Cypress environment
        uses: ./.github/actions/prepare-cypress
      - name: Run Snowplow micro
        uses: ./.github/actions/run-snowplow-micro
      - name: Get Metabase version info
        run: |
          jar xf target/uberjar/metabase.jar version.properties
          mv version.properties resources/
      - name: Install Chrome v111
        uses: browser-actions/setup-chrome@v1
        with:
          # https://chromium.cypress.io/linux/stable/111.0.5563.146
          chrome-version: 1097615
        id: setup-chrome
      - run: |
          echo Installed chromium version: ${{ steps.setup-chrome.outputs.chrome-version }}
          ${{ steps.setup-chrome.outputs.chrome-path }} --version
      - name: Stress-test ${{ github.event.inputs.spec }} ${{ github.event.inputs.burn_in }} times
        run: |
          yarn run test-cypress-run \
          --spec '${{ github.event.inputs.spec }}' \
          --env burn=${{ github.event.inputs.burn_in }} \
          --config-file e2e/support/cypress-stress-test.config.js
          --browser ${{ steps.setup-chrome.outputs.chrome-path }}
        env:
          TERM: xterm
      - name: Upload Cypress Artifacts upon failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-failed-tests-recording
          path: |
            ./cypress
            ./logs/test.log
          if-no-files-found: ignore
