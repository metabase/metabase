name: Notify Pull Request
inputs:
  remove-previous-comment:
    required: false
    type: boolean
    default: false
  add-new-comment:
    required: false
    type: boolean
    default: true
  message:
    required: true
  include-log:
    required: false
    default: true

runs:
  using: "composite"
  steps:
    - name: Remove previous pull-request comment
      uses: actions/github-script@v7
      if: ${{ inputs.remove-previous-comment == 'true' && always() && github.event_name == 'pull_request' }}
      with:
        script: |
          const pr = context.payload.pull_request ?? context.payload.issue;

          if (!pr) {
           console.error("This action can only be run on pull requests");
           return;
          }

          const { owner, repo } = context.repo;

          const { data: comments } = await github.rest.issues.listComments({
            owner,
            repo,
            issue_number: pr.number,
          }).catch(console.error);

          if (!comments) {
            return;
          }

          const message = "${{ inputs.message }}";
          const comment = comments.find((comment) => comment.body.includes(message));

          if (comment) {
            await github.rest.issues.deleteComment({
              owner,
              repo,
              comment_id: comment.id,
            });
          }

    - name: Notify pull-request
      uses: actions/github-script@v7
      if: ${{ inputs.add-new-comment == 'true' && always() && github.event_name == 'pull_request' }}
      id: notify-pull-request
      with:
        result-encoding: string
        script: | # js
          const pr = context.payload.pull_request ?? context.payload.issue;

          if (!pr) {
            console.error("This action can only be run on pull requests");
            return;
          }

          const message = "${{ inputs.message }}";
          const shouldIncludeLog = ${{ inputs.include-log }}.toString() === "true";
          const author = context.payload.sender.login;

          let body = `@${author} ${message}`;

          if (shouldIncludeLog) {
            const { GITHUB_SERVER_URL, GITHUB_REPOSITORY, GITHUB_RUN_ID } = process.env;
            const runUrl = `${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}`;
            body += ` [[Logs]](${runUrl})`;
          }

          github.rest.issues.createComment({
            issue_number: pr.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body,
          });
