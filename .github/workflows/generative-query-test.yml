name: Generative Query Test

on:
  workflow_dispatch:
    inputs:
      context-seed:
        description: 'Context seed (empty = random)'
        type: number
      iteration-seed:
        description: 'Iteration seed (for iteration replay, empty = dependent on Context seed)'
        type: number
      iterations:
        description: 'Iterations (number of test iterations, overrides seconds)'
        type: number
      seconds:
        description: 'Seconds (Number of seconds after which next iteration will not start)'
      test:
        description: 'Test or namespace to run'
        default: metabase.query-processor-test.generative-test/execution-with-cards-test
      ref:
        description: 'Ref to run generative tests on'
        default: qgen-ms2

# TODO: Consider renaming the job in next milestones
jobs:
  generative-query-test:
    runs-on: ubuntu-22.04
    timeout-minutes: 90
    name: Generative Query Test
    env:
      CI: 'true'
      MB_GENTEST_CONTEXT_SEED: ${{ inputs.context-seed }}
      MB_GENTEST_ITERATION_SEED: ${{ inputs.iteration-seed }}
      MB_GENTEST_LIMIT_ITERATIONS: ${{ inputs.iterations }}
      MB_GENTEST_LIMIT_SECONDS: ${{ inputs.seconds }}
      MB_GENTEST_RUN: true
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - name: Prepare back-end environment
        uses: ./.github/actions/prepare-backend
        with:
          m2-cache-key: generative-query-test
      - name: Prepare front-end environment
        uses: ./.github/actions/prepare-frontend

      - name: Run test
        run: clojure -X:dev:ci:test:ee:ee-dev :only '${{ inputs.test }}'

      - name: Publish Test Report (JUnit)
        uses: dorny/test-reporter@v1
        if: failure()
        with:
          path: "target/junit/**/*_test.xml"
          name: JUnit Test Report (Generative Query test)
          reporter: java-junit
          list-suites: failed
          list-tests: failed
          fail-on-error: false
