name: Release [WIP]

on:
  workflow_dispatch:
    inputs:
      commit:
        description: 'A commit hash'
        required: true
      oss-tag:
        description: 'OSS version tag'
        required: true
      ee-tag:
        description: 'EE version tag'
        required: true

jobs:
  build:
    name: Build Metabase ${{ matrix.edition }} @${{ github.event.inputs.commit }}
    runs-on: ubuntu-20.04
    timeout-minutes: 40
    strategy:
      matrix:
        edition: [oss, ee]
    env:
      MB_EDITION: ${{ matrix.edition }}
      INTERACTIVE: false
    steps:
    - name: Check out the code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.commit }}
    - name: Prepare front-end environment
      uses: ./.github/actions/prepare-frontend
    - name: Prepare back-end environment
      uses: ./.github/actions/prepare-backend
    - name: Build
      run: ./bin/build
    - name: Prepare uberjar artifact
      uses: ./.github/actions/prepare-uberjar-artifact

  check-uberjar-health:
    runs-on: ubuntu-20.04
    name: Is ${{ matrix.edition }} (java ${{ matrix.java-version }}) healthy?
    needs: build
    timeout-minutes: 10
    strategy:
      matrix:
        edition: [oss, ee]
        java-version: [11, 17]
    steps:
    - name: Prepare JRE (Java Run-time Environment)
      uses: actions/setup-java@v3
      with:
        java-package: jre
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
    - run: java -version
    - uses: actions/download-artifact@v3
      name: Retrieve uberjar artifact
      with:
        name: metabase-${{ matrix.edition }}-uberjar
    - name: Launch uberjar (and keep it running)
      run: java -jar ./target/uberjar/metabase.jar &
    - name: Wait for Metabase to start
      run: while ! curl -s 'http://localhost:3000/api/health' | grep '{"status":"ok"}'; do sleep 1; done

  containerize:
    runs-on: ubuntu-20.04
    needs: check-uberjar-health
    timeout-minutes: 15
    strategy:
      matrix:
        edition: [oss, ee]
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
    - name: Set the image tag based on the edition
      run: |
        if [[ ${{ matrix.edition }} == ee ]]; then
          echo "IMAGE_TAG=${{ github.event.inputs.ee-tag }}" >> $GITHUB_ENV
        else
          echo "IMAGE_TAG=${{ github.event.inputs.oss-tag }}" >> $GITHUB_ENV
        fi
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.commit }}
    - uses: actions/download-artifact@v3
      name: Retrieve uberjar artifact
      with:
        name: metabase-${{ matrix.edition }}-uberjar
    - name: Move the Uberjar to the context dir
      run: mv ./target/uberjar/metabase.jar bin/docker/.
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        driver-opts: network=host
    - name: Build ${{ matrix.edition }} container
      uses: docker/build-push-action@v2
      with:
        context: bin/docker/.
        platforms: linux/amd64
        network: host
        tags: localhost:5000/local-metabase:${{ env.IMAGE_TAG }}
        no-cache: true
        push: true

    - name: Launch container
      run: docker run --rm -dp 3000:3000 localhost:5000/local-metabase:${{ env.IMAGE_TAG }}
      timeout-minutes: 5
    - name: Wait for Metabase to start
      run: while ! curl -s 'http://localhost:3000/api/health' | grep '{"status":"ok"}'; do sleep 1; done
      timeout-minutes: 3

    - name: Determine the target Docker Hub repository
      run: |
        if [[ ${{ github.repository }} == 'metabase/metabase' ]]; then
          if [[ ${{ matrix.edition }} == ee ]]; then
            echo "Metabase EE: image ${{ env.IMAGE_TAG }} is going to be pushed to metabase/test-metabase-enterprise"
            echo "DOCKERHUB_REPO=metabase/test-metabase-enterprise" >> $GITHUB_ENV
          else
            echo "Metabase OSS: image ${{ env.IMAGE_TAG }} is going to be pushed to metabase/test-metabase"
            echo "DOCKERHUB_REPO=metabase/test-metabase" >> $GITHUB_ENV
          fi
        else
          echo "DOCKERHUB_REPO=${{ github.repository_owner }}/${{ secrets.CUSTOM_RELEASE_REPO }}" >> $GITHUB_ENV
        fi
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_RELEASE_USERNAME }}
        password: ${{ secrets.DOCKERHUB_RELEASE_TOKEN }}
    - name: Retag and push container image to Metabase Docker Hub
      run: |
        echo "Pushing ${{ env.IMAGE_TAG }} to ${{ env.DOCKERHUB_REPO }} ..."
        docker tag localhost:5000/local-metabase:${{ env.IMAGE_TAG }} ${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAG }}
        docker push ${{ env.DOCKERHUB_REPO }}:${{ env.IMAGE_TAG }}
        echo "Finished!"
