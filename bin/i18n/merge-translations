#!/usr/bin/env bash
# This script merges translations from the given branch into the current
# branch.
#
# Example usage:
#   merge-translations release-x.54.x

sourceBranch=$1

# Function: remove_unnecessary_wrapping
# Description: This function processes gettext '.po' files and
# removes unnecessary line wrapping. It specifically looks for lines with
# 'msgid ""' and 'msgstr ""', and combines them with the following line.
#
# Example Usage:
#   When provided with input:
#     msgid ""
#     "Live in collections to keep them separate from messy database\n"
#     "schemas."
#     msgstr ""
#     "Vivent dans les collections métiers pour les séparer des schémas de données "
#     "source."
#
#   It produces:
#     msgid "Live in collections to keep them separate from messy database\n"
#     "schemas."
#     msgstr "Vivent dans les collections métiers pour les séparer des schémas de données "
#     "source."
remove_unnecessary_wrapping() {
  input=""
  while IFS= read -r line; do
    input+="$line"$'EscapedNewline'
  done

  echo -E $input | sed 's/\(msgid\|msgstr\) ""EscapedNewline"/\1 "/g' | sed 's/EscapedNewline/\n/g'
}

safely_mktemp() {
  tempFile=`mktemp`

  removeTempFile() {
    if [[ -f "$tempFile" ]]; then
      rm "$tempFile"
    fi
  }

  # Remove temporary file if script is aborted
  trap removeTempFile EXIT

  echo $tempFile
}

for po in locales/*.po; do
  set -f

  mergedPoFile=`safely_mktemp`

  echo "Merging translations from $sourceBranch:$po into $po"

  msgcat --no-wrap --use-first <(git show "$sourceBranch:$po") "$po" | remove_unnecessary_wrapping > "$mergedPoFile"

  # Outputting directly to $po while reading it causes problems, so we output
  # to a temporary file, then replace the .po file with it
  mv "$mergedPoFile" $po

done
