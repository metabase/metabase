name: E2E Matrix Builder

on:
  workflow_call:
    inputs:
      chunks:
        required: true
        type: number
        default: 30
    outputs:
      matrix:
        value: ${{ jobs.build-matrix.outputs.matrix }}
      regularChunks:
        value: ${{ jobs.build-matrix.outputs.regularChunks }}

jobs:
  build-matrix:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    outputs:
      matrix: ${{ steps.matrix.outputs.config }}
      regularChunks: ${{ steps.matrix.outputs.regularChunks }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - uses: actions/github-script@v7
        id: matrix
        env:
          chunks: ${{ inputs.chunks }}
        with:
          script: | # js
            const java = 21;
            const defaultRunner = "ubuntu-22.04";

            const defaultOptions = {
              "java-version": java,
              runner: defaultRunner,
              edition: "ee",
            };

            const allSpecs = "./e2e/test/scenarios/**/*.cy.spec.*";

            // see config.js function getSplittableSpecs for logic that excludes some tests from auto splitting
            const specialTests = [
              { name: "embedding-sdk", specs: "./e2e/test/scenarios/embedding-sdk/**.cy.spec.*" },
              { name: "oss-subset", edition: 'oss', tags: "@OSS", specs: allSpecs },
              { name: "mongo", tags: "@mongo", specs: allSpecs },
            ];

            const inputChunks = Number(process.env.chunks);
            const regularChunks = inputChunks - specialTests.length;

            const regularTests = new Array(regularChunks).fill(1)
              .map((files, index) => ({
                name: `e2e-group-${index + 1}`,
              }));

            // regular chunks need to come before special chunks
            const testSets = [...regularTests, ...specialTests];

            const config = testSets.map((options) => ({
              ...defaultOptions,
              ...options,
            }));


            core.setOutput("regularChunks", JSON.stringify(regularChunks));
            core.setOutput("config", JSON.stringify({ include: config }));

            console.log({ regularChunks });
            console.log("matrix config", config);
