.Dashboard {
    background-color: #f9fbfc;
}

.DashboardHeader {
  background-color: white;
  border-bottom: var(--border-size) var(--border-style) var(--border-color);
}

.Dash-wrapper {
    width: 100%;
}

@media screen and (--breakpoint-min-sm) {
   .Dash-wrapper { max-width: var(--sm-width); }
}

@media screen and (--breakpoint-min-md) {
   .Dash-wrapper { max-width: var(--md-width); }
}

@media screen and (--breakpoint-min-lg) {
   .Dash-wrapper { max-width: var(--lg-width); }
}

/* Fullscreen mode */
.Dashboard.Dashboard--fullscreen {
}

.Dashboard.Dashboard--fullscreen .Header-button {
  color: #D2DBE4;
}

.Dashboard.Dashboard--fullscreen .DashboardHeader {
  background-color: transparent;
  border: none;
}
.Dashboard.Dashboard--fullscreen .Header-title-description {
  display: none;
}

/* Night mode */
.Dashboard.Dashboard--night .Header-button,
.Dashboard.Dashboard--night .Header-button svg {
    color: rgba(151, 151, 151, 0.3) !important;
}

.Dashboard.Dashboard--night {
  background-color: rgb(34, 37, 39);
}

.Dashboard.Dashboard--night .DashCard .Card {
  color: rgba(255, 255, 255, 0.86);
  background-color: rgb(54, 58, 61);
  border: 1px solid rgb(46, 49, 52) !important;
}

.DashboardGrid {
    margin-top: 5px;
    margin-left: -5px;
    margin-right: -5px;
}

.DashCard {
  position: relative;
  z-index: 1;
}

.DashCard .Card {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  overflow: hidden;
}

.Card-outer {
    overflow: hidden;
    width: 100%;
    height: 100%;
}

.Dash--editing .DashCard .Card {
    pointer-events: none;
    border: 1px dashed rgba(149, 149, 149, 0.5);
    transition: border .3s, background-color .3s;
}

@keyframes fade-out-yellow {
    from {
        background-color: rgba(255, 250, 243, 1.0);
    }
    to {
        background-color: rgba(255, 250, 243, 0.0);
    }
}

.DashCard .Card {
    background-color: white;
}

.Dash--editing .DashCard .Card.Card--recent {
    /*background-color: rgb(255, 250, 243);*/
    animation-duration: 30s;
    animation-name: fade-out-yellow;
}

.Dash--editing .DashCard:hover .Card .Card-heading {
  z-index: 2;
}


.Dash--editing .DashCard .Card {
    background: #fff;
    user-select: none;
}

.Dash--dragging .DashCard.dragging .Card {
    box-shadow: 3px 3px 8px rgba(0,0,0,0.1);
}

.Dash--dragging .DashCard.dragging,
.Dash--editing .DashCard.resizing {
    z-index: 2;
}

.Dash--dragging .DashCard.dragging .Card,
.Dash--editing .DashCard.resizing .Card {
    background-color: #E5F1FB !important;
    border: 1px solid var(--brand-color);
}

.DashCard .DashCard-actions {
  pointer-events: none;
  opacity: 0;
  transition: opacity .3s linear;
}

.Dash--editing .DashCard:hover .DashCard-actions {
  height: initial;
  opacity: 1;
  pointer-events: all;
}

.Dash--dragging .DashCard.dragging .DashCard-actions,
.Dash--editing .DashCard.resizing .DashCard-actions {
    opacity: 0;
    transition: opacity .3s linear;
}

.Dash--editing .DashCard {
    transition: transform .3s;
}

.Dash--dragging .DashCard.dragging,
.Dash--editing .DashCard.resizing {
    transition: transform 0s;
}

.Dash--editing .DashCard {
    cursor: move;
}

.Dash--editing .DashCard .react-resizable-handle {
    position: absolute;
    width: 40px;
    height: 40px;
    bottom: 0;
    right: 0;
    cursor: nwse-resize;
}

.Dash--editing .react-grid-placeholder {
    z-index: 0;
    background-color: #F2F2F2;
    transition: all 0.15s linear;
}

.Dash--editing .Card-title {
    pointer-events: none;
}

/* ensure action buttons do not respond to events when dragging */
.Dash--dragging .DashCard-actions {
    pointer-events: none !important;
}

.Modal.AddSeriesModal {
  height: 80%;
  max-height: 600px;
  width: 80%;
  max-width: 1024px;
}

.dc-chart .grid-line.horizontal {
  stroke: rgba(151, 151, 151, 0.2);
  stroke-dasharray: 5,5;
}


.dc-chart .axis {
  z-index: -1;
}
.dc-chart .axis .domain,
.dc-chart .axis .tick line {
  stroke: #EDEDED;
}

.dc-chart .axis .tick text {
  fill: #C5C6C8;
}

/* turn off ticks and domain lines */
.dc-chart .axis.y .domain,
.dc-chart .axis.yr .domain,
.dc-chart .axis.y .tick line,
.dc-chart .axis.yr .tick line {
  display: none;
}

.dc-chart .x-axis-label,
.dc-chart .y-axis-label {
  /*fill: #C5C6C8;*/
  fill: #A2A2A2;
}

/* gridline at 0 overlaps with X axis */
.dc-chart .grid-line.horizontal line:first-child {
  display: none;
}

.dc-chart rect.bar:hover {
  fill-opacity: 1;
}

.enable-dots .dc-tooltip circle.dot {
  r: 3 !important;
  fill: white;
  stroke: currentColor;
  stroke-width: 2;
  fill-opacity: 1 !important;
  stroke-opacity: 1 !important;
}

.enable-dots .dc-tooltip circle.dot:hover,
.enable-dots .dc-tooltip circle.dot.hover {
  fill: currentColor;
}

.enable-dots-onhover .dc-tooltip circle.dot:hover,
.enable-dots-onhover .dc-tooltip circle.dot.hover {
  r: 3 !important;
  fill: white;
  stroke: currentColor;
  stroke-width: 2;
  fill-opacity: 1 !important;
  stroke-opacity: 1 !important;
}

.dc-chart .area,
.dc-chart .bar,
.dc-chart .line,
.dc-chart .dot {
  transition: opacity 0.1s linear;
}

.dc-chart .axis.y,
.dc-chart .y-axis-label,
.dc-chart .axis.yr,
.dc-chart .yr-axis-label {
  transition: opacity 0.25s linear;
}

/* individual chart (.chart-body is a direct grandchild of svg)*/
.mute-0 svg > g > .chart-body .stack._0 .area,
.mute-1 svg > g > .chart-body .stack._1 .area,
.mute-2 svg > g > .chart-body .stack._2 .area,
.mute-3 svg > g > .chart-body .stack._3 .area,
.mute-4 svg > g > .chart-body .stack._4 .area,
.mute-5 svg > g > .chart-body .stack._5 .area,
.mute-0 svg > g > .chart-body .stack._0 .line,
.mute-1 svg > g > .chart-body .stack._1 .line,
.mute-2 svg > g > .chart-body .stack._2 .line,
.mute-3 svg > g > .chart-body .stack._3 .line,
.mute-4 svg > g > .chart-body .stack._4 .line,
.mute-5 svg > g > .chart-body .stack._5 .line,
.mute-0 svg > g > .chart-body .dc-tooltip._0 .dot,
.mute-1 svg > g > .chart-body .dc-tooltip._1 .dot,
.mute-2 svg > g > .chart-body .dc-tooltip._2 .dot,
.mute-3 svg > g > .chart-body .dc-tooltip._3 .dot,
.mute-4 svg > g > .chart-body .dc-tooltip._4 .dot,
.mute-5 svg > g > .chart-body .dc-tooltip._5 .dot { opacity: 0.25; }

/* composite charts */
.mute-0 .sub._0 .bar,
.mute-1 .sub._1 .bar,
.mute-2 .sub._2 .bar,
.mute-3 .sub._3 .bar,
.mute-4 .sub._4 .bar,
.mute-5 .sub._5 .bar,
.mute-0 .sub._0 .line,
.mute-1 .sub._1 .line,
.mute-2 .sub._2 .line,
.mute-3 .sub._3 .line,
.mute-4 .sub._4 .line,
.mute-5 .sub._5 .line,
.mute-0 .sub._0 .dot,
.mute-1 .sub._1 .dot,
.mute-2 .sub._2 .dot,
.mute-3 .sub._3 .dot,
.mute-4 .sub._4 .dot,
.mute-5 .sub._5 .dot { opacity: 0.25; }


.mute-yl .dc-chart .axis.y,
.mute-yl .dc-chart .y-axis-label.y-label {
  opacity: 0;
}

.mute-yr .dc-chart .axis.yr,
.mute-yr .dc-chart .y-axis-label.yr-label {
  opacity: 0;
}

.voronoi {
  fill: transparent;
}

/*.voronoi path {
  fill: rgba(255,0,0,0.05);
}*/
