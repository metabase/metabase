databaseChangeLog:
  - objectQuotingStrategy: QUOTE_ALL_OBJECTS
  - changeSet:
      id: v57.2025-08-01T10:00:00
      author: qnkhuat
      comment: Add undo/redo change tracking table
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: data_edit_undo_chain
      changes:
        - createTable:
            tableName: data_edit_undo_chain
            remarks: Store the state necessary to power undo / redo.
            columns:
              - column:
                  name: id
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  remarks: Batch number for grouped changes (global increment)
                  name: batch_num
                  type: int
                  constraints:
                    nullable: false
              - column:
                  remarks: Reference to the table being modified
                  name: table_id
                  type: int
                  constraints:
                    nullable: false
              - column:
                  remarks: PK of the row being modified, potentially composite. Stored as a sorted JSON map.
                  name: row_pk
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  remarks: ID of the user who made the change
                  name: user_id
                  type: int
                  constraints:
                    nullable: false
              - column:
                  name: scope
                  type: ${text.type}
                  remarks: Identifies where the changes were made from
                  constraints:
                    nullable: false
              - column:
                  name: undoable
                  type: ${boolean.type}
                  remarks: Identifies whether a change can be undo
                  constraints:
                    nullable: false
                  defaultValue: true
              - column:
                  remarks: Value of the field before the change
                  name: raw_before
                  type: ${text.type}
                  constraints:
                    nullable: true
              - column:
                  remarks: Value of the field after the change
                  name: raw_after
                  type: ${text.type}
                  constraints:
                    nullable: true
              - column:
                  remarks: Whether this change has been undone
                  name: undone
                  type: ${boolean.type}
                  defaultValueBoolean: false
                  constraints:
                    nullable: false
              - column:
                  remarks: The timestamp of when the change was created
                  name: created_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  remarks: The timestamp of when the change was updated
                  name: updated_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false

  - changeSet:
      id: v57.2025-08-01T10:02:00
      author: qnkhuat
      comment: A table for generating atomic sequence numbers
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: sequences
      changes:
        - createTable:
            tableName: sequences
            remarks: A table for generating atomic sequence numbers
            columns:
              - column:
                  name: name
                  type: varchar(50)
                  remarks: The name of the sequence
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: next_val
                  remarks: The next value in this sequence
                  type: bigint
                  constraints:
                    nullable: false

  - changeSet:
      id: v57.2025-08-21T12:00:00
      author: edpaget
      comment: Create document table
      changes:
        - createTable:
            tableName: document
            remarks: Documents table
            columns:
              - column:
                  name: id
                  remarks: Unique ID
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  remarks: Document name
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  name: created_at
                  remarks: The timestamp of when the document was created
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: document
                  remarks: content of the document
                  type: ${text.type}
              - column:
                  name: content_type
                  remarks: the content_type of the document column
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  name: creator_id
                  remarks: User who created this document
                  type: int
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  remarks: The timestamp of when the document was updated
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: collection_id
                  remarks: What collection I live in. Null if it's Our Analytics.
                  type: int
                  constraints:
                    nullable: true
              - column:
                  name: archived
                  remarks: Has this document been archived?
                  type: ${boolean.type}
                  defaultValueBoolean: false
                  constraints:
                    nullable: false
              - column:
                  name: archived_directly
                  remarks: Was this thing trashed directly
                  type: ${boolean.type}
                  defaultValueBoolean: false
                  constraints:
                    nullable: true
              - column:
                  name: entity_id
                  type: char(21)
                  remarks: Random NanoID tag for unique identity
                  constraints:
                    nullable: true
                    unique: true
              - column:
                  name: last_viewed_at
                  type: ${timestamp_type}
                  remarks: Timestamp of when this document was last viewed
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: view_count
                  type: integer
                  defaultValueNumeric: 0
                  remarks: Keeps a running count of document views
                  constraints:
                    nullable: false
              - column:
                  name: collection_position
                  type: integer
                  remarks: Collection position used for pinning documents. Higher numbers = pinned, null = not pinned.
                  constraints:
                    nullable: true

  - changeSet:
      id: v57.2025-08-21T12:00:10
      author: edpaget
      comment: Add index on document.creator_id
      changes:
        - createIndex:
            tableName: document
            indexName: idx_document_creator_id
            columns:
              - column:
                  name: creator_id

  - changeSet:
      id: v57.2025-08-21T12:00:11
      author: edpaget
      comment: Add `document.creator_id` foreign key constraint
      changes:
        - addForeignKeyConstraint:
            baseTableName: document
            baseColumnNames: creator_id
            referencedTableName: core_user
            referencedColumnNames: id
            constraintName: fk_document_ref_creator_id
            onDelete: CASCADE

  - changeSet:
      id: v57.2025-08-21T12:00:30
      author: edpaget
      comment: Add index on document.collection_id
      changes:
        - createIndex:
            tableName: document
            indexName: idx_document_collection_id
            columns:
              - column:
                  name: collection_id

  - changeSet:
      id: v57.2025-08-21T12:00:59
      author: johnswanson
      comment: Add `document.collection_id` foreign key constraint
      changes:
        - addForeignKeyConstraint:
            baseTableName: document
            baseColumnNames: collection_id
            referencedTableName: collection
            referencedColumnNames: id
            constraintName: fk_document_ref_collection_id
            onDelete: SET NULL

  - changeSet:
      id: v57.2025-08-21T17:23:20
      author: edpaget
      comment: Add document_id column to report_card table
      changes:
        - addColumn:
            tableName: report_card
            columns:
              - column:
                  name: document_id
                  remarks: Associates cards with a particular document
                  type: int
                  constraints:
                    nullable: true

  - changeSet:
      id: v57.2025-08-21T17:23:30
      author: edpaget
      comment: Add index on report_card.document_id
      changes:
        - createIndex:
            tableName: report_card
            indexName: idx_repord_card_document_id
            columns:
              - column:
                  name: document_id

  - changeSet:
      id: v57.2025-08-21T17:23:33
      author: edpaget
      comment: Add foreign key constraint for document_id in report_card
      changes:
        - addForeignKeyConstraint:
            baseTableName: report_card
            baseColumnNames: document_id
            referencedTableName: document
            referencedColumnNames: id
            constraintName: fk_report_card_document_id
            onDelete: CASCADE

  - changeSet:
      id: v57.2025-08-21T17:42:32
      author: edpaget
      comment: Create document_bookmark table
      changes:
        - createTable:
            tableName: document_bookmark
            remarks: Store user bookmarks for documents
            columns:
              - column:
                  name: id
                  remarks: Unique ID
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: user_id
                  remarks: User who bookmarked the document
                  type: int
                  constraints:
                    nullable: false
              - column:
                  name: document_id
                  remarks: The document that was bookmarked
                  type: int
                  constraints:
                    nullable: false
              - column:
                  name: created_at
                  remarks: The timestamp when the bookmark was created
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false

  - changeSet:
      id: v57.2025-08-21T17:42:33
      author: edpaget
      comment: Add index on document_bookmark.user_id
      changes:
        - createIndex:
            tableName: document_bookmark
            indexName: idx_document_bookmark_user_id
            columns:
              - column:
                  name: user_id

  - changeSet:
      id: v57.2025-08-21T17:42:34
      author: edpaget
      comment: Add index on document_bookmark.document_id
      changes:
        - createIndex:
            tableName: document_bookmark
            indexName: idx_document_bookmark_document_id
            columns:
              - column:
                  name: document_id

  - changeSet:
      id: v57.2025-08-21T17:42:35
      author: edpaget
      comment: Add foreign key constraint for document_bookmark.user_id
      changes:
        - addForeignKeyConstraint:
            baseTableName: document_bookmark
            baseColumnNames: user_id
            referencedTableName: core_user
            referencedColumnNames: id
            constraintName: fk_document_bookmark_user_id
            onDelete: CASCADE

  - changeSet:
      id: v57.2025-08-21T17:42:36
      author: edpaget
      comment: Add foreign key constraint for document_bookmark.document_id
      changes:
        - addForeignKeyConstraint:
            baseTableName: document_bookmark
            baseColumnNames: document_id
            referencedTableName: document
            referencedColumnNames: id
            constraintName: fk_document_bookmark_document_id
            onDelete: CASCADE

  - changeSet:
      id: v57.2025-08-21T17:42:37
      author: edpaget
      comment: Add unique constraint for document_bookmark user_id and document_id
      changes:
        - addUniqueConstraint:
            tableName: document_bookmark
            columnNames: user_id, document_id
            constraintName: idx_document_bookmark_user_document_unique

# >>>>>>>>>> DO NOT ADD NEW MIGRATIONS BELOW THIS LINE! ADD THEM ABOVE <<<<<<<<<<

########################################################################################################################
#
# ADVICE:
#
# 1) Think through some of these points when writing a migration, learn from our past mistakes:
#    - Do you really need a migration? Could the feature work without it? Prefer not to if possible.
#      Data in the wild can be vastly different from what you expect, and it's hard to get right.
#    - Make sure your migration is backward compatible: it might not be possible to add a constraint back
#      if you drop it in a migration.
#    - Postgres, MySQL and H2 have their differences. Make sure your migration works for all.
#    - Database encryption is a major issue:
#      - Fields like `metabase_database.details` or `setting.value` can be encrypted, so you need to decrypt them in
#        your migration. See #42617, #44048.
#      - Database could be partially encrypted, see https://www.notion.so/72575933ef2a446bafd16909e05a7387
#    - Custom migrations:
#      - Prefer SQL migrations when possible.
#      - Never use application code: it can change and *will* break your migration.
#      - Do not use Toucan models - refer table names directly.
#      - If it's a big change, consider using Quartz, see #42279
#      - More in `metabase.app_db.custom_migrations` namespace doc.
#    - Never delete a migration: users won't be able to downgrade. If you really need to, see #44908
#    - Migration id (`vXX.<date>`) must match its earliest released version:
#      - Do not backport `v51....` to version 50, Metabase will try to downgrade it.
#      - Instead, write a migration with an oldest target you plan to backport to in mind.
#
# 2) Migrations should go in the ###_update_migrations.yaml file for the target version.
#
# 3) Run mage lint-migrations-file to run core.spec checks against any changes you make here. Liquibase is pretty
#    forgiving and won't complain if you accidentally mix up things like deleteCascade and onDelete: CASCADE. CI runs
#    this check but it's nicer to know now instead of waiting for CI.
#
# 3) Migration IDs should follow the format
#
#    vMM.TIMESTAMP
#
#    Where
#
#    M         = major version
#    TIMESTAMP = the current timestamp with format `yyyy-MM-dd'T'HH:mm:ss`
#                To get this timestamp, evaluate this in your REPL: `(dev/migration-timestamp)`
#
#    E.g: You're adding a new migration for version 49, And it's 10:30:00AM on April 1, 2023 (UTC),
#    your migration id should be: `v49.2023-04-01T10:30:00`.
#
# PLEASE KEEP THIS MESSAGE AT THE BOTTOM OF THIS FILE!!!!! Add new migrations above the message.
#
########################################################################################################################
