{
  "cardEmbed": {
    "type": "doc",
    "content": [
      {
        "type": "paragraph",
        "content": [
          {
            "type": "text",
            "text": "Paragraph above an embedded card"
          }
        ]
      },
      {
        "type": "cardEmbed",
        "attrs": {
          "id": 114,
          "name": null
        }
      }
    ]
  },
  "card114Query": {
    "data": {
      "rows": [
        ["Doohickey", 3976],
        ["Gadget", 4939],
        ["Gizmo", 4784],
        ["Widget", 5061]
      ],
      "results_timezone": "America/Toronto",
      "download_perms": "full",
      "results_metadata": {
        "columns": [
          {
            "description": "The type of product, valid values include: Doohicky, Gadget, Gizmo and Widget",
            "database_type": "CHARACTER VARYING",
            "semantic_type": "type/Category",
            "table_id": 3,
            "lib/deduplicated-name": "CATEGORY",
            "lib/original-name": "CATEGORY",
            "lib/breakout?": true,
            "name": "CATEGORY",
            "lib/source": "source/implicitly-joinable",
            "lib/source-column-alias": "CATEGORY",
            "lib/original-display-name": "Category",
            "source": "breakout",
            "fk_field_id": 14,
            "field_ref": [
              "field",
              18,
              {
                "base-type": "type/Text",
                "source-field": 14
              }
            ],
            "effective_type": "type/Text",
            "active": true,
            "id": 18,
            "lib/desired-column-alias": "PRODUCTS__via__PRODUCT_ID__CATEGORY",
            "position": 3,
            "visibility_type": "normal",
            "display_name": "Product → Category",
            "fingerprint": {
              "global": {
                "distinct-count": 4,
                "nil%": 0
              },
              "type": {
                "type/Text": {
                  "percent-json": 0,
                  "percent-url": 0,
                  "percent-email": 0,
                  "percent-state": 0,
                  "average-length": 6.375
                }
              }
            },
            "base_type": "type/Text"
          },
          {
            "database_type": "BIGINT",
            "semantic_type": "type/Quantity",
            "lib/deduplicated-name": "count",
            "lib/original-name": "count",
            "name": "count",
            "lib/source": "source/aggregations",
            "lib/source-column-alias": "count",
            "source": "aggregation",
            "field_ref": ["aggregation", 0],
            "effective_type": "type/BigInteger",
            "lib/desired-column-alias": "count",
            "display_name": "Count",
            "fingerprint": {
              "global": {
                "distinct-count": 4,
                "nil%": 0
              },
              "type": {
                "type/Number": {
                  "min": 3976,
                  "q1": 4380,
                  "q3": 5000,
                  "max": 5061,
                  "sd": 489.3103990992493,
                  "avg": 4690
                }
              }
            },
            "base_type": "type/BigInteger"
          }
        ]
      },
      "format-rows?": true,
      "pivot-export-options": {
        "show-row-totals": true,
        "show-column-totals": true
      },
      "cols": [
        {
          "description": "The type of product, valid values include: Doohicky, Gadget, Gizmo and Widget",
          "database_type": "CHARACTER VARYING",
          "semantic_type": "type/Category",
          "table_id": 3,
          "lib/deduplicated-name": "CATEGORY",
          "lib/original-name": "CATEGORY",
          "lib/breakout?": true,
          "name": "CATEGORY",
          "lib/source": "source/implicitly-joinable",
          "lib/source-column-alias": "CATEGORY",
          "lib/original-display-name": "Category",
          "source": "breakout",
          "fk_field_id": 14,
          "field_ref": [
            "field",
            18,
            {
              "base-type": "type/Text",
              "source-field": 14
            }
          ],
          "effective_type": "type/Text",
          "active": true,
          "id": 18,
          "lib/desired-column-alias": "PRODUCTS__via__PRODUCT_ID__CATEGORY",
          "position": 3,
          "visibility_type": "normal",
          "display_name": "Product → Category",
          "fingerprint": {
            "global": {
              "distinct-count": 4,
              "nil%": 0
            },
            "type": {
              "type/Text": {
                "percent-json": 0,
                "percent-url": 0,
                "percent-email": 0,
                "percent-state": 0,
                "average-length": 6.375
              }
            }
          },
          "base_type": "type/Text"
        },
        {
          "database_type": "BIGINT",
          "semantic_type": "type/Quantity",
          "lib/deduplicated-name": "count",
          "lib/original-name": "count",
          "name": "count",
          "lib/source": "source/aggregations",
          "lib/source-column-alias": "count",
          "source": "aggregation",
          "field_ref": ["aggregation", 0],
          "effective_type": "type/BigInteger",
          "lib/desired-column-alias": "count",
          "display_name": "Count",
          "base_type": "type/BigInteger"
        }
      ],
      "native_form": {
        "query": "SELECT \"PRODUCTS__via__PRODUCT_ID\".\"CATEGORY\" AS \"PRODUCTS__via__PRODUCT_ID__CATEGORY\", COUNT(*) AS \"count\" FROM \"PUBLIC\".\"ORDERS\" LEFT JOIN \"PUBLIC\".\"PRODUCTS\" AS \"PRODUCTS__via__PRODUCT_ID\" ON \"PUBLIC\".\"ORDERS\".\"PRODUCT_ID\" = \"PRODUCTS__via__PRODUCT_ID\".\"ID\" GROUP BY \"PRODUCTS__via__PRODUCT_ID\".\"CATEGORY\" ORDER BY \"PRODUCTS__via__PRODUCT_ID\".\"CATEGORY\" ASC",
        "params": null
      },
      "is_sandboxed": false,
      "insights": null
    }
  },
  "markdownTest": {
    "type": "doc",
    "content": [
      {
        "type": "heading",
        "attrs": {
          "level": 1
        },
        "content": [
          {
            "type": "text",
            "text": "Heading 1"
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 2
        },
        "content": [
          {
            "type": "text",
            "text": "Heading 2"
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 3
        },
        "content": [
          {
            "type": "text",
            "text": "Heading 3"
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 4
        },
        "content": [
          {
            "type": "text",
            "text": "Heading 4"
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 5
        },
        "content": [
          {
            "type": "text",
            "text": "Heading 5"
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 6
        },
        "content": [
          {
            "type": "text",
            "text": "Heading 6"
          }
        ]
      },
      {
        "type": "paragraph"
      },
      {
        "type": "paragraph",
        "content": [
          {
            "type": "text",
            "text": "This is a Paragraph. Inside of this, you can have "
          },
          {
            "type": "text",
            "marks": [
              {
                "type": "bold"
              }
            ],
            "text": "Bold Text"
          },
          {
            "type": "text",
            "text": ", "
          },
          {
            "type": "text",
            "marks": [
              {
                "type": "italic"
              }
            ],
            "text": "Italic Text"
          },
          {
            "type": "text",
            "text": ", and even text with "
          },
          {
            "type": "text",
            "marks": [
              {
                "type": "strike"
              }
            ],
            "text": "Strike Through."
          },
          {
            "type": "text",
            "text": " We can also have "
          },
          {
            "type": "text",
            "marks": [
              {
                "type": "code"
              }
            ],
            "text": "inline code"
          },
          {
            "type": "text",
            "text": " when we don't need a code block."
          }
        ]
      },
      {
        "type": "codeBlock",
        "attrs": {
          "language": null
        },
        "content": [
          {
            "type": "text",
            "text": "Speaking of, this is what a code block would look like."
          }
        ]
      },
      {
        "type": "paragraph",
        "content": [
          {
            "type": "text",
            "text": "And if you need to "
          },
          {
            "type": "text",
            "marks": [
              {
                "type": "link",
                "attrs": {
                  "href": "https://www.metabase.com/",
                  "target": "_blank",
                  "rel": "noopener noreferrer nofollow",
                  "class": "index__link___nQD8h"
                }
              }
            ],
            "text": "link something"
          },
          {
            "type": "text",
            "text": ", well that is easy too."
          }
        ]
      },
      {
        "type": "paragraph",
        "content": [
          {
            "type": "text",
            "text": "In the words of Sasha -"
          }
        ]
      },
      {
        "type": "image",
        "attrs": {
          "src": "https://i.imgflip.com/1lccxa.jpg",
          "alt": "High Quality Hold my beer Blank Meme Template",
          "title": null,
          "width": null,
          "height": null
        }
      },
      {
        "type": "paragraph"
      }
    ]
  }
}
