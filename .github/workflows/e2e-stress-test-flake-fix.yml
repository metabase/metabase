name: E2E Stress Test Flake Fix

on:
  workflow_dispatch:
    inputs:
      spec:
        description: 'Relative path of the target spec'
        type: string
        required: true
      burn_in:
        description: 'Number of times to run the test (e.g. 20)'
        type: string
        required: true

jobs:
  stress-test-flake-fix:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    name: Stress test E2E flake fix
    env:
      DISPLAY: ""
      QA_DB_ENABLED: true
      CYPRESS_ALL_FEATURES_TOKEN: ${{ secrets.ENTERPRISE_TOKEN }}
      CYPRESS_NO_FEATURES_TOKEN: ${{ secrets.E2E_STARTER_TOKEN }}
      MB_SNOWPLOW_AVAILABLE: true
      MB_SNOWPLOW_URL: "http://localhost:9090" # Snowplow micro
      TERM: xterm
      TZ: US/Pacific # to make node match the instance tz
    steps:
      - uses: actions/checkout@v3
        with:
          # Important because we need previous commits hashes to find and download the uberjar!
          fetch-depth: 20

      - name: Prepare Docker containers
        uses: ./.github/actions/e2e-prepare-containers
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          maildev: true
          openldap: true
          postgres: true
          mysql: true
          mongo: true

      - name: Download Metabase ${{ matrix.edition }} uberjar
        uses: ./.github/actions/e2e-download-uberjar
        with:
          edition: 'ee'
          was-built: false

      - name: Prepare front-end environment
        uses: ./.github/actions/prepare-frontend
      - name: Prepare JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: "temurin"
      - name: Prepare Cypress environment
        id: cypress-prep
        uses: ./.github/actions/prepare-cypress
      - name: Run Snowplow micro
        uses: ./.github/actions/run-snowplow-micro

      - name: Stress-test ${{ github.event.inputs.spec }} ${{ github.event.inputs.burn_in }} times
        run: |
          yarn run test-cypress-run \
          --spec '${{ github.event.inputs.spec }}' \
          --env burn=${{ github.event.inputs.burn_in }} \
          --config-file e2e/support/cypress-stress-test.config.js \
          --browser ${{ steps.cypress-prep.outputs.chrome-path }}

      - name: Upload Cypress Artifacts upon failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-failed-tests-recording
          path: |
            ./cypress
            ./logs/test.log
          if-no-files-found: ignore
