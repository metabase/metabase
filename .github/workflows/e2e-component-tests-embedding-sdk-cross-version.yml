name: E2E Cross-version Component Tests for Embedding SDK

on:
  push:
    branches:
      - "release-**"
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - "release-**"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref && github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  files-changed:
    name: Check which files changed
    runs-on: ubuntu-22.04
    timeout-minutes: 3
    outputs:
      e2e_all: ${{ steps.changes.outputs.e2e_all }}
    steps:
      - uses: actions/checkout@v4
      - name: Test which files changed
        uses: dorny/paths-filter@v3.0.0
        id: changes
        with:
          token: ${{ github.token }}
          filters: .github/file-paths.yaml

  # if this is a test on a release branch, we need to check the build requirements
  get-build-requirements:
    if: |
      !cancelled()
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    outputs:
      java_version: ${{ fromJson(steps.dependencies.outputs.result).java_version }}
      node_version: ${{ fromJson(steps.dependencies.outputs.result).node_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: release
      - name: Prepare build scripts
        run: cd ${{ github.workspace }}/release && yarn && yarn build
      - name: Get build dependencies
        uses: actions/github-script@v7
        id: dependencies
        with:
          script: | # js
            const {
              getBuildRequirements,
              getVersionFromReleaseBranch,
            } = require('${{ github.workspace }}/release/dist/index.cjs');
            const targetBranchName = '${{ github.base_ref || github.ref }}';

            const version = getVersionFromReleaseBranch(targetBranchName);
            const requirements = getBuildRequirements(version);

            return {
              java_version: requirements.java,
              node_version: requirements.node,
            };

  build:
    needs: [files-changed, get-build-requirements]
    if: |
      !cancelled() &&
      github.event.pull_request.draft == false
    runs-on: ubuntu-22.04
    timeout-minutes: 25
    env:
      MB_EDITION: ee
      INTERACTIVE: false
      # make sure that builds on release branches get licenses, because we use them for releases
      SKIP_LICENSES: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
      - name: Prepare front-end environment
        uses: ./.github/actions/prepare-frontend
        with:
          node-version: "${{ needs.get-build-requirements.outputs.node_version }}"
      - name: Prepare back-end environment
        uses: ./.github/actions/prepare-backend
        with:
          m2-cache-key: uberjar
          java-version: "${{ needs.get-build-requirements.outputs.java_version || 11 }}"

      - name: Build uberjar with ./bin/build.sh
        run: ./bin/build.sh

      - name: Prepare uberjar artifact
        uses: ./.github/actions/prepare-uberjar-artifact
        with:
          name: metabase-ee-${{ github.event.pull_request.head.sha || github.sha }}-uberjar

  resolve-sdk-version:
    if: |
      !cancelled()
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    outputs:
      sdk_version: ${{ fromJson(steps.dependencies.outputs.result).sdk_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: release
      - name: Prepare build scripts
        run: cd ${{ github.workspace }}/release && yarn && yarn build
      - name: Get latest SDK release for this branch
        uses: actions/github-script@v7
        id: dependencies
        with:
          script: | # js
            const { getSdkVersionFromReleaseBranchName } = require('${{ github.workspace }}/release/dist/index.cjs');
            const branchName = '${{ github.base_ref || github.ref }}';

            const sdk_version = await getSdkVersionFromReleaseBranchName({
              github,
              owner: context.repo.owner,
              repo: context.repo.repo,
              branchName,
            });

            return {
              sdk_version,
            };

  e2e-tests-skipped-stub:
    needs: [e2e-tests]
    if: |
      !cancelled() &&
      needs.e2e-tests.result == 'skipped'
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    name: e2e-component-tests-embedding-sdk-cross-version
    steps:
      - run: |
          echo "Didn't run due to conditional filtering"
