name: Containerize Uberjar
run-name: Containerize ${{ inputs.tag }} Uberjar

on:
  workflow_call:
    inputs:
      artifact-name:
        type: string
      repo:
        description: owner and repo like "metabase/metabase"
        type: string
      tag:
        type: string
      commit:
        type: string
  workflow_dispatch:
    inputs:
      artifact-name:
        description: usually something like "metabase-release-{{ edition }}-{{ hash }}-uberjar"
        type: string
      repo:
        description: owner and repo like "metabase/metabase"
        type: string
      tag:
        description: usually a version like 1.87.2
        type: string
      commit:
        description: the full commit hash
        type: string

jobs:
  containerize:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v4
      with:
        # checkout the commit that was tagged so we get the right dockerfile
        ref: ${{ inputs.commit }}

    - name: Retrieve test build uberjar artifact
      uses: ./.github/actions/fetch-artifact
      with:
        name: ${{ inputs.artifact-name }}
    - name: Move the Uberjar to the context dir
      run: mv ./metabase.jar bin/docker/.
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
    - name: Build container
      uses: docker/build-push-action@v6
      with:
        context: bin/docker/.
        platforms: linux/amd64,linux/arm64
        network: host
        tags: ${{ inputs.repo }}:${{ inputs.tag }}
        no-cache: true
        push: true

  verify-docker-pull:
    runs-on: ubuntu-latest
    needs: containerize
    timeout-minutes: 15
    steps:
    - name: Login to Docker Hub # authenticated, to avoid being rate-throttled
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_RELEASE_USERNAME }}
        password: ${{ secrets.DOCKERHUB_RELEASE_TOKEN }}
    - name: Pull the container image
      run: docker pull ${{ inputs.repo }}:${{ inputs.tag }}
    - name: Launch container
      run: docker run --rm -dp 3000:3000 ${{ inputs.repo }}:${{ inputs.tag }}
      timeout-minutes: 5
    - name: Wait for Metabase to start
      run: while ! curl -s 'http://localhost:3000/api/health' | grep '{"status":"ok"}'; do sleep 1; done
      timeout-minutes: 5

  verify-docker-pull-arm:
    runs-on: arm-ubuntu-24-2core
    needs: containerize
    timeout-minutes: 15
    steps:
    - name: Login to Docker Hub # authenticated, to avoid being rate-throttled
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_RELEASE_USERNAME }}
        password: ${{ secrets.DOCKERHUB_RELEASE_TOKEN }}
    - name: Pull the container image
      run: docker pull ${{ inputs.repo }}:${{ inputs.tag }}
    - name: Launch container
      run: docker run --rm -dp 3000:3000 ${{ inputs.repo }}:${{ inputs.tag }}
      timeout-minutes: 5
    - name: Wait for Metabase to start
      run: while ! curl -s 'http://localhost:3000/api/health' | grep '{"status":"ok"}'; do sleep 1; done
      timeout-minutes: 5