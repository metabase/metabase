name: Update Translations
run-name: Update Translations for v${{ inputs.version }} - ${{ inputs.step }}
on:
  workflow_dispatch:
    inputs:
      step:
        type: choice
        description: Upload untranslated strings | Download translated strings
        options:
          - upload
          - download
        required: true
      version:
        type: string
        description: "The version number for which to update translations (e.g. 43, 58.7)"
        required: true

permissions:
  contents: write
  pull-requests: write

jobs:
  upload-translations:
    name: Upload Translations
    if: ${{ inputs.step  == 'upload' }}
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    env:
      POEDITOR_API_TOKEN: ${{ secrets.POEDITOR_API_TOKEN }}
      POEDITOR_PROJECT_ID: 200535
      VERSION: ${{ inputs.version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Prepare front-end environment
      uses: ./.github/actions/prepare-frontend
    - name: Prepare back-end environment
      uses: ./.github/actions/prepare-backend
      with:
        m2-cache-key: manage-translations
    - name: install gettext
      run: sudo apt-get install gettext

    # TODO: check for untranslated strings

    - name: Upload strings to be translated
      run: | # sh
        ./bin/i18n/update-translation-template
        ./bin/i18n/export-pot-to-poeditor
        echo "Strings uploaded to POEditor"

    - name: Commit changes
      env:
        GH_TOKEN: ${{ github.token }}
      run: | # sh
        git config user.name github-actions
        git config user.email github-actions@github.com

        BRANCH_NAME="update-translations-v$VERSION"

        git checkout -b $BRANCH_NAME
        git add locales/

        git commit -m "Add new strings for v$VERSION"
        git push -u origin $BRANCH_NAME

        gh pr create \
        --reviewer "${GITHUB_ACTOR}" \
        --assignee "${GITHUB_ACTOR}" \
        --title "Update Translations for v$VERSION" \
        --body "Update translations from POEditor for v$VERSION

        See [translation update documentation](https://www.notion.so/metabase/Process-for-updating-translations-421db70048fe400da1153ad0b61102f4)

        ## To Do

        - [x] Upload new strings to POEditor
        - [ ] Message contributors on POEditor (manual)
        - [ ] Copy source strings to english language (manual)
        - [ ] Download translations from POEditor (github action)
        - [ ] Merge this PR and backport to the release branch (manual)
        " \
        --label "backport" \
        --label "Customization/i18n"

    # TODO: notify contributors
    # TODO: copy source strings to english language

  download-translations:
    name: Download Translations
    if: ${{ inputs.step == 'download' }}
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    env:
      POEDITOR_API_TOKEN: ${{ secrets.POEDITOR_API_TOKEN }}
      POEDITOR_PROJECT_ID: 200535
      VERSION: ${{ inputs.version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # assumes there's already a branch with that name from the upload step
        ref: update-translations-v${{inputs.VERSION}}
    - name: Prepare back-end environment
      uses: ./.github/actions/prepare-backend
      with:
        m2-cache-key: manage-translations

    - name: Prepare build scripts
      run: cd ${{ github.workspace }}/release && yarn && yarn build
    - name: Automatically translate untranslated strings
      uses: actions/github-script@v7
      with:
        script: | # js
          const { autoTranslateSupportedLanguages } = require('${{ github.workspace }}/release/dist/index.cjs');

          await autoTranslateSupportedLanguages();

    - name: Download translated strings
      run: | # sh
        cd ${{ github.workspace }}
        ./bin/i18n/import-po-from-poeditor
        ./bin/i18n/build-translation-resources
    - name: Commit changes
      run: | # sh
        git config user.name github-actions
        git config user.email github-actions@github.com

        BRANCH_NAME="update-translations-v$VERSION"

        git add locales/

        git commit -m "Update translations"
        git push -u origin $BRANCH_NAME
