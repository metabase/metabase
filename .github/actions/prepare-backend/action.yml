name: Prepare back-end environment
description: |
  Prepare the backend. Installs jdk, Clojure, and fetches the cache for m2.
  The CI config fetches `ci-test-config.json` from master and lets us ignore tests at the var level if they are flaking.
inputs:
  java-version:
    required: true
    default: '21'
  clojure-version:
    required: true
    default: '1.12.0.1488'

runs:
  using: "composite"
  steps:
    - name: Prepare JDK ${{ inputs.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.java-version }}
        distribution: 'temurin'
    - name: Install Clojure CLI
      shell: bash
      continue-on-error: true
      run: |
        curl -O https://download.clojure.org/install/linux-install-${{ inputs.clojure-version }}.sh &&
        sudo bash ./linux-install-${{ inputs.clojure-version }}.sh

    - name: Fetch CI config
      shell: bash
      run: |
        curl -o ci-test-config.json https://raw.githubusercontent.com/metabase/metabase/refs/heads/master/ci-test-config.json

    - name: Get M2 cache key
      uses: ./.github/actions/get-cache-keys
      id: get-cache-keys

    - name: Restore M2 cache
      uses: actions/cache/restore@v4
      with:
        path: |
          ~/.m2
          ~/.gitlibs
        key: ${{ steps.get-cache-keys.outputs.m2-cache-key }}
