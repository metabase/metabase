commit 481775a80929c17115b2fa0de14db8fbea08cc02
Author: Alexander Polyankin <alexander.polyankin@metabase.com>
Date:   Thu Nov 3 19:05:39 2022 +0200

    Migrate ForgotPassword form to formik (#26204)

diff --git a/frontend/src/metabase/auth/components/ForgotPassword/ForgotPassword.styled.tsx b/frontend/src/metabase/auth/components/ForgotPassword/ForgotPassword.styled.tsx
index e488b261ab..2765084457 100644
--- a/frontend/src/metabase/auth/components/ForgotPassword/ForgotPassword.styled.tsx
+++ b/frontend/src/metabase/auth/components/ForgotPassword/ForgotPassword.styled.tsx
@@ -3,30 +3,6 @@ import { color } from "metabase/lib/colors";
 import Icon from "metabase/components/Icon";
 import Link from "metabase/core/components/Link";
 
-export const FormTitle = styled.div`
-  color: ${color("text-dark")};
-  font-size: 1.25rem;
-  font-weight: 700;
-  line-height: 1.5rem;
-  text-align: center;
-  margin-bottom: 1.5rem;
-`;
-
-export const FormFooter = styled.div`
-  display: flex;
-  flex-direction: column;
-  align-items: center;
-  margin-top: 1.5rem;
-`;
-
-export const FormLink = styled(Link)`
-  color: ${color("text-dark")};
-
-  &:hover {
-    color: ${color("brand")};
-  }
-`;
-
 export const InfoBody = styled.div`
   display: flex;
   flex-direction: column;
diff --git a/frontend/src/metabase/auth/components/ForgotPassword/ForgotPassword.tsx b/frontend/src/metabase/auth/components/ForgotPassword/ForgotPassword.tsx
index e0a700cb40..ca88e16bbf 100644
--- a/frontend/src/metabase/auth/components/ForgotPassword/ForgotPassword.tsx
+++ b/frontend/src/metabase/auth/components/ForgotPassword/ForgotPassword.tsx
@@ -1,13 +1,9 @@
 import React, { useCallback, useMemo, useState } from "react";
 import { t } from "ttag";
-import Users from "metabase/entities/users";
 import Button from "metabase/core/components/Button";
 import AuthLayout from "../../containers/AuthLayout";
-import { ForgotPasswordData } from "../../types";
+import ForgotPasswordForm from "../ForgotPasswordForm";
 import {
-  FormFooter,
-  FormLink,
-  FormTitle,
   InfoBody,
   InfoIcon,
   InfoIconContainer,
@@ -54,43 +50,6 @@ const ForgotPassword = ({
   );
 };
 
-interface ForgotPasswordFormProps {
-  initialEmail?: string;
-  onSubmit: (email: string) => void;
-}
-
-const ForgotPasswordForm = ({
-  initialEmail,
-  onSubmit,
-}: ForgotPasswordFormProps): JSX.Element => {
-  const initialValues = useMemo(() => {
-    return { email: initialEmail };
-  }, [initialEmail]);
-
-  const handleSubmit = useCallback(
-    async ({ email }: ForgotPasswordData) => {
-      await onSubmit(email);
-    },
-    [onSubmit],
-  );
-
-  return (
-    <div>
-      <FormTitle>{t`Forgot password`}</FormTitle>
-      <Users.Form
-        form={Users.forms.password_forgot}
-        initialValues={initialValues}
-        submitTitle={t`Send password reset email`}
-        submitFullWidth
-        onSubmit={handleSubmit}
-      />
-      <FormFooter>
-        <FormLink to="/auth/login">{t`Back to sign in`}</FormLink>
-      </FormFooter>
-    </div>
-  );
-};
-
 const ForgotPasswordSuccess = (): JSX.Element => {
   return (
     <InfoBody>
diff --git a/frontend/src/metabase/auth/components/ForgotPassword/ForgotPassword.unit.spec.tsx b/frontend/src/metabase/auth/components/ForgotPassword/ForgotPassword.unit.spec.tsx
index 4a96363e57..d78c422571 100644
--- a/frontend/src/metabase/auth/components/ForgotPassword/ForgotPassword.unit.spec.tsx
+++ b/frontend/src/metabase/auth/components/ForgotPassword/ForgotPassword.unit.spec.tsx
@@ -1,5 +1,5 @@
 import React, { ReactNode } from "react";
-import { render, screen } from "@testing-library/react";
+import { render, screen, waitFor } from "@testing-library/react";
 import userEvent from "@testing-library/user-event";
 import ForgotPassword, { ForgotPasswordProps } from "./ForgotPassword";
 
@@ -13,16 +13,20 @@ describe("ForgotPassword", () => {
   });
 
   it("should show a success message when the form is submitted", async () => {
+    const email = "user@metabase.test";
     const props = getProps({
       canResetPassword: true,
       onResetPassword: jest.fn().mockResolvedValue({}),
     });
 
     render(<ForgotPassword {...props} />);
-    userEvent.click(screen.getByText("Send password reset email"));
+    userEvent.type(screen.getByLabelText("Email address"), email);
+    userEvent.click(await screen.findByText("Send password reset email"));
 
-    const message = await screen.findByText(/Check your email/);
-    expect(message).toBeInTheDocument();
+    await waitFor(() => {
+      expect(props.onResetPassword).toHaveBeenCalledWith(email);
+      expect(screen.getByText(/Check your email/)).toBeInTheDocument();
+    });
   });
 
   it("should show an error message when the user cannot reset their password", () => {
@@ -42,20 +46,6 @@ const getProps = (
   ...opts,
 });
 
-interface FormMockProps {
-  submitTitle: string;
-  onSubmit: () => void;
-}
-
-const FormMock = ({ submitTitle, onSubmit }: FormMockProps) => {
-  return <button onClick={onSubmit}>{submitTitle}</button>;
-};
-
-jest.mock("metabase/entities/users", () => ({
-  forms: { password_reset: jest.fn() },
-  Form: FormMock,
-}));
-
 interface AuthLayoutMockProps {
   children?: ReactNode;
 }
diff --git a/frontend/src/metabase/auth/components/ForgotPasswordForm/ForgotPasswordForm.styled.tsx b/frontend/src/metabase/auth/components/ForgotPasswordForm/ForgotPasswordForm.styled.tsx
new file mode 100644
index 0000000000..ffc6e887ac
--- /dev/null
+++ b/frontend/src/metabase/auth/components/ForgotPasswordForm/ForgotPasswordForm.styled.tsx
@@ -0,0 +1,27 @@
+import styled from "@emotion/styled";
+import { color } from "metabase/lib/colors";
+import Link from "metabase/core/components/Link/Link";
+
+export const PasswordFormTitle = styled.div`
+  color: ${color("text-dark")};
+  font-size: 1.25rem;
+  font-weight: 700;
+  line-height: 1.5rem;
+  text-align: center;
+  margin-bottom: 1.5rem;
+`;
+
+export const PasswordFormFooter = styled.div`
+  display: flex;
+  flex-direction: column;
+  align-items: center;
+  margin-top: 1.5rem;
+`;
+
+export const PasswordFormLink = styled(Link)`
+  color: ${color("text-dark")};
+
+  &:hover {
+    color: ${color("brand")};
+  }
+`;
diff --git a/frontend/src/metabase/auth/components/ForgotPasswordForm/ForgotPasswordForm.tsx b/frontend/src/metabase/auth/components/ForgotPasswordForm/ForgotPasswordForm.tsx
new file mode 100644
index 0000000000..1fac806709
--- /dev/null
+++ b/frontend/src/metabase/auth/components/ForgotPasswordForm/ForgotPasswordForm.tsx
@@ -0,0 +1,72 @@
+import React, { useCallback, useMemo } from "react";
+import { t } from "ttag";
+import * as Yup from "yup";
+import FormProvider from "metabase/core/components/FormProvider";
+import Form from "metabase/core/components/Form";
+import FormInput from "metabase/core/components/FormInput";
+import FormSubmitButton from "metabase/core/components/FormSubmitButton";
+import FormErrorMessage from "metabase/core/components/FormErrorMessage";
+import { ForgotPasswordData } from "../../types";
+import {
+  PasswordFormFooter,
+  PasswordFormLink,
+  PasswordFormTitle,
+} from "./ForgotPasswordForm.styled";
+
+const ForgotPasswordSchema = Yup.object({
+  email: Yup.string()
+    .required(t`required`)
+    .email(t`must be a valid email address`),
+});
+
+export interface ForgotPasswordFormProps {
+  initialEmail?: string;
+  onSubmit: (email: string) => void;
+}
+
+const ForgotPasswordForm = ({
+  initialEmail = "",
+  onSubmit,
+}: ForgotPasswordFormProps): JSX.Element => {
+  const initialValues = useMemo(
+    () => ({ email: initialEmail }),
+    [initialEmail],
+  );
+
+  const handleSubmit = useCallback(
+    ({ email }: ForgotPasswordData) => onSubmit(email),
+    [onSubmit],
+  );
+
+  return (
+    <div>
+      <PasswordFormTitle>{t`Forgot password`}</PasswordFormTitle>
+      <FormProvider
+        initialValues={initialValues}
+        validationSchema={ForgotPasswordSchema}
+        onSubmit={handleSubmit}
+      >
+        <Form>
+          <FormInput
+            name="email"
+            title={t`Email address`}
+            placeholder={t`The email you use for your Metabase account`}
+            autoFocus
+            fullWidth
+          />
+          <FormSubmitButton
+            title={t`Send password reset email`}
+            primary
+            fullWidth
+          />
+          <FormErrorMessage />
+        </Form>
+      </FormProvider>
+      <PasswordFormFooter>
+        <PasswordFormLink to="/auth/login">{t`Back to sign in`}</PasswordFormLink>
+      </PasswordFormFooter>
+    </div>
+  );
+};
+
+export default ForgotPasswordForm;
diff --git a/frontend/src/metabase/auth/components/ForgotPasswordForm/index.ts b/frontend/src/metabase/auth/components/ForgotPasswordForm/index.ts
new file mode 100644
index 0000000000..f56004f148
--- /dev/null
+++ b/frontend/src/metabase/auth/components/ForgotPasswordForm/index.ts
@@ -0,0 +1 @@
+export { default } from "./ForgotPasswordForm";
diff --git a/frontend/src/metabase/entities/users/forms.js b/frontend/src/metabase/entities/users/forms.js
index 70cbea3617..b4ee16abd3 100644
--- a/frontend/src/metabase/entities/users/forms.js
+++ b/frontend/src/metabase/entities/users/forms.js
@@ -128,16 +128,6 @@ export default {
       ...getPasswordFields(),
     ],
   },
-  password_forgot: {
-    fields: [
-      {
-        name: "email",
-        title: t`Email address`,
-        placeholder: t`The email you use for your Metabase account`,
-        validate: validate.required().email(),
-      },
-    ],
-  },
   newsletter: {
     fields: [
       {
