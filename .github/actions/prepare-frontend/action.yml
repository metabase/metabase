name: Prepare front-end environment
inputs:
  node-version:
    description: "The version of Node.js to use, overriding .nvmrc"
    required: false
  apply-patches:
    description: "Whether to patch frontend dependencies with patch-package."
    required: true
    default: "true"
runs:
  using: "composite"
  steps:
    - name: Prepare Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }} # this overrides, if present
        node-version-file: ".nvmrc"

    - name: Get cache keys
      uses: ./.github/actions/get-cache-keys
      id: get-cache-keys

    - name: Restore M2 cache
      uses: actions/cache/restore@v4
      with:
        path: |
          ~/.m2
          ~/.gitlibs
        key: ${{ steps.get-cache-keys.outputs.m2-cache-key }}

    - name: Restore node_modules cache
      uses: actions/cache/restore@v4
      id: node-modules-cache
      with:
        path: node_modules
        key: ${{ steps.get-cache-keys.outputs.node-cache-key }}

    # postinstall lifecycle hook can be dangerous in CI so we only run it locally (see package.json)
    # If a job wants to patch packages, it does so explicitly in the CI. This setting is opt-out.
    # For example, we never want to cache node_modules with patches already applied so cache-generator.yml skips that step.
    - name: Clean install
      run: pnpm install --prefer-offline
      shell: bash
    - name: Patch frontend dependencies
      if: inputs.apply-patches == 'true'
      run: pnpm patch-package
      shell: bash
