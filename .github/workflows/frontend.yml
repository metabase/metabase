name: Frontend

on:
  workflow_call:
    inputs:
      skip:
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref && github.ref || github.run_id }}-frontend
  cancel-in-progress: true

jobs:
  fe-lint:
    if: ${{ !inputs.skip }}
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Prepare front-end environment
        uses: ./.github/actions/prepare-frontend
      - name: Prepare back-end environment
        uses: ./.github/actions/prepare-backend
        with:
          m2-cache-key: "cljs"
      - name: Compile CLJS
        run: yarn build-pure:cljs
      - name: Find CSS variables that are used but never defined
        run: yarn find-never-defined-css-variables
      - name: Run Prettier formatting linter
        run: yarn run lint-prettier-pure
      - name: Run ESLint linter
        run: yarn run lint-eslint-pure

  fe-type-check:
    if: ${{ !inputs.skip }}
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Prepare front-end environment
        uses: ./.github/actions/prepare-frontend
      - name: Prepare back-end environment
        uses: ./.github/actions/prepare-backend
        with:
          m2-cache-key: "cljs"
      - run: yarn build-pure:cljs
        name: Compile CLJS
      - run: yarn type-check-pure
        name: Check types

  fe-tests-unit:
    if: ${{ !inputs.skip }}
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    env:
      JEST_JUNIT_OUTPUT_DIR: ./target/junit
      JEST_JUNIT_OUTPUT_NAME: test-report-frontend-unit.xml
    steps:
      - uses: actions/checkout@v4
      - name: Prepare front-end environment
        uses: ./.github/actions/prepare-frontend
      - name: Prepare back-end environment
        uses: ./.github/actions/prepare-backend
        with:
          m2-cache-key: "cljs"
      - name: Run frontend unit tests and collect the code coverage information
        if: github.ref_name == 'master'
        run: yarn run test-unit --coverage --silent
      - name: Run frontend unit tests
        if: github.ref_name != 'master'
        run: yarn run test-unit --silent
      - name: Upload coverage to codecov.io
        if: github.ref_name == 'master'
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: front-end
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload Test Results
        uses: ./.github/actions/upload-test-results
        if: always()
        with:
          input-path: ./target/junit
          output-name: frontend-unit
          bucket: ${{ vars.AWS_S3_TEST_RESULTS_BUCKET }}
          aws-access-key-id: ${{ secrets.AWS_TEST_RESULTS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_TEST_RESULTS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
          trunk-api-token: ${{ secrets.TRUNK_API_TOKEN }}

  fe-tests-timezones:
    if: ${{ !inputs.skip }}
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Prepare front-end environment
        uses: ./.github/actions/prepare-frontend
      - name: Prepare back-end environment
        uses: ./.github/actions/prepare-backend
        with:
          m2-cache-key: "cljs"
      - name: Run frontend timezones tests
        run: yarn run test-timezones

  fe-tests-result:
    needs:
      - fe-lint
      - fe-type-check
      - fe-tests-unit
      - fe-tests-timezones
    if: always() && !cancelled()
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      needs: ${{ toJson(needs) }}
    steps:
      - name: Check frontend job status
        uses: actions/github-script@v7
        env:
          needs: ${{ toJson(needs) }}
        with:
          script: | # js
            const needs = JSON.parse(process.env.needs);
            const jobs = Object.entries(needs).map(
              ([jobName, jobValues]) => ({
                name: jobName,
                result: jobValues.result
              }));

            // are all jobs skipped or successful?
            if (jobs.every(job => (job.result === 'skipped' || job.result === 'success'))) {
              console.log('All jobs are skipped or successful');
              process.exit(0);
            }

            // otherwise, something failed
            console.log('Some frontend jobs failed');
            jobs.forEach((job) => {
              if (job.result !== 'success') {
                console.log(`${job.name} - ${job.result}`);
              }
            });
            process.exit(1);
