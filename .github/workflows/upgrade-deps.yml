name: Open PR to Bump Backend Deps

on:
  workflow_dispatch:

  schedule:
    # weekly on Mondays
    - cron: '00 0 * * 1'

  push:
    branches:
      - auto-upgrade-backend-deps-job

permissions:
  contents: write
  pull-requests: write

jobs:
  bump-deps:
    name: Open PR to Bump Backend Deps
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: ${{ (github.ref_name == 'master' && '1') || '0' }}
      - name: Prepare back-end environment
        uses: ./.github/actions/prepare-backend
        with:
          m2-cache-key: 'update-be-deps'
      - name: Run Antq
        run: >-
          clojure -M:antq --upgrade --force --skip=github-action
      - name: Determine Branch Name
        id: branch_name
        run: |
          current_date=$(date '+%Y-%m-%d-%H-%M')
          branch="auto-update-backend-deps-$current_date"
          echo "branch=$branch" >> $GITHUB_OUTPUT
      - name: Set up Git
        run: |
          git config --global user.email "metabase-bot@metabase.com"
          git config --global user.name "Metabase bot"
      - name: Switch to Master
        if: ${{ github.ref_name != 'master' }}
        run: |
          git stash
          git checkout master
          git stash pop
      - name: Create Branch
        run: |
          git checkout -b "${{ steps.branch_name.outputs.branch }}"
      - name: Create Git Commit
        run: |
          git add deps.edn modules
          git commit -m "Update backend dependencies" --no-verify
      - name: Push Branch to Origin
        run: |
          git push -u origin "${{ steps.branch_name.outputs.branch }}"
      - name: Create Pull Request
        id: create_pull_request
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          BRANCH="${{ steps.branch_name.outputs.branch }}"
          TITLE="Update Backend Dependencies"
          DESCRIPTION="Update backend dependencies"
          PR_URL=$(gh pr create --base master --head "${BRANCH}" --label "no-backport" --title "${TITLE}" --body "${DESCRIPTION}")
          PR_NUMBER=${PR_URL##*/}
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
      - name: Enable Pull Request Auto-Merge
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          pull-request-number: ${{ steps.create_pull_request.outputs.pr_number }}
          merge-method: squash
