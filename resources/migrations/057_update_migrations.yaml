databaseChangeLog:
  - objectQuotingStrategy: QUOTE_ALL_OBJECTS
  - changeSet:
      id: v57.2025-08-01T10:00:00
      author: qnkhuat
      comment: Add undo/redo change tracking table
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: data_edit_undo_chain
      changes:
        - createTable:
            tableName: data_edit_undo_chain
            remarks: Store the state necessary to power undo / redo.
            columns:
              - column:
                  name: id
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  remarks: Batch number for grouped changes (global increment)
                  name: batch_num
                  type: int
                  constraints:
                    nullable: false
              - column:
                  remarks: Reference to the table being modified
                  name: table_id
                  type: int
                  constraints:
                    nullable: false
              - column:
                  remarks: PK of the row being modified, potentially composite. Stored as a sorted JSON map.
                  name: row_pk
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  remarks: ID of the user who made the change
                  name: user_id
                  type: int
                  constraints:
                    nullable: false
              - column:
                  name: scope
                  type: ${text.type}
                  remarks: Identifies where the changes were made from
                  constraints:
                    nullable: false
              - column:
                  name: undoable
                  type: ${boolean.type}
                  remarks: Identifies whether a change can be undo
                  constraints:
                    nullable: false
                  defaultValue: true
              - column:
                  remarks: Value of the field before the change
                  name: raw_before
                  type: ${text.type}
                  constraints:
                    nullable: true
              - column:
                  remarks: Value of the field after the change
                  name: raw_after
                  type: ${text.type}
                  constraints:
                    nullable: true
              - column:
                  remarks: Whether this change has been undone
                  name: undone
                  type: ${boolean.type}
                  defaultValueBoolean: false
                  constraints:
                    nullable: false
              - column:
                  remarks: The timestamp of when the change was created
                  name: created_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  remarks: The timestamp of when the change was updated
                  name: updated_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false

  - changeSet:
      id: v57.2025-08-01T10:02:00
      author: qnkhuat
      comment: A table for generating atomic sequence numbers
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: sequences
      changes:
        - createTable:
            tableName: sequences
            remarks: A table for generating atomic sequence numbers
            columns:
              - column:
                  name: name
                  type: varchar(50)
                  remarks: The name of the sequence
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: next_val
                  remarks: The next value in this sequence
                  type: bigint
                  constraints:
                    nullable: false

  - changeSet:
      id: v57.2025-08-15T10:00:00
      author: qnkhuat
      comment: Add metabase_table.is_writable
      preConditions:
        - onFail: MARK_RAN
        - not:
            - columnExists:
                tableName: metabase_table
                columnName: is_writable
      changes:
        - addColumn:
            tableName: metabase_table
            columns:
              - column:
                  name: is_writable
                  type: ${boolean.type}
                  remarks: true if current connection can insert, update and delete rows from this table
                  constraints:
                    nullable: true

  - changeSet:
      id: v57.2025-08-21T12:00:00
      author: edpaget
      comment: Create document table
      changes:
        - createTable:
            tableName: document
            remarks: Documents table
            columns:
              - column:
                  name: id
                  remarks: Unique ID
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  remarks: Document name
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  name: created_at
                  remarks: The timestamp of when the document was created
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: document
                  remarks: content of the document
                  type: ${text.type}
              - column:
                  name: content_type
                  remarks: the content_type of the document column
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  name: creator_id
                  remarks: User who created this document
                  type: int
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  remarks: The timestamp of when the document was updated
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: collection_id
                  remarks: What collection I live in. Null if it's Our Analytics.
                  type: int
                  constraints:
                    nullable: true
              - column:
                  name: archived
                  remarks: Has this document been archived?
                  type: ${boolean.type}
                  defaultValueBoolean: false
                  constraints:
                    nullable: false
              - column:
                  name: archived_directly
                  remarks: Was this thing trashed directly
                  type: ${boolean.type}
                  defaultValueBoolean: false
                  constraints:
                    nullable: true
              - column:
                  name: entity_id
                  type: char(21)
                  remarks: Random NanoID tag for unique identity
                  constraints:
                    nullable: true
                    unique: true
              - column:
                  name: last_viewed_at
                  type: ${timestamp_type}
                  remarks: Timestamp of when this document was last viewed
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: view_count
                  type: integer
                  defaultValueNumeric: 0
                  remarks: Keeps a running count of document views
                  constraints:
                    nullable: false
              - column:
                  name: collection_position
                  type: integer
                  remarks: Collection position used for pinning documents. Higher numbers = pinned, null = not pinned.
                  constraints:
                    nullable: true

  - changeSet:
      id: v57.2025-08-21T12:00:10
      author: edpaget
      comment: Add index on document.creator_id
      changes:
        - createIndex:
            tableName: document
            indexName: idx_document_creator_id
            columns:
              - column:
                  name: creator_id

  - changeSet:
      id: v57.2025-08-21T12:00:11
      author: edpaget
      comment: Add `document.creator_id` foreign key constraint
      changes:
        - addForeignKeyConstraint:
            baseTableName: document
            baseColumnNames: creator_id
            referencedTableName: core_user
            referencedColumnNames: id
            constraintName: fk_document_ref_creator_id
            onDelete: CASCADE

  - changeSet:
      id: v57.2025-08-21T12:00:30
      author: edpaget
      comment: Add index on document.collection_id
      changes:
        - createIndex:
            tableName: document
            indexName: idx_document_collection_id
            columns:
              - column:
                  name: collection_id

  - changeSet:
      id: v57.2025-08-21T12:00:59
      author: johnswanson
      comment: Add `document.collection_id` foreign key constraint
      changes:
        - addForeignKeyConstraint:
            baseTableName: document
            baseColumnNames: collection_id
            referencedTableName: collection
            referencedColumnNames: id
            constraintName: fk_document_ref_collection_id
            onDelete: SET NULL

  - changeSet:
      id: v57.2025-08-21T17:23:20
      author: edpaget
      comment: Add document_id column to report_card table
      changes:
        - addColumn:
            tableName: report_card
            columns:
              - column:
                  name: document_id
                  remarks: Associates cards with a particular document
                  type: int
                  constraints:
                    nullable: true

  - changeSet:
      id: v57.2025-08-21T17:23:30
      author: edpaget
      comment: Add index on report_card.document_id
      changes:
        - createIndex:
            tableName: report_card
            indexName: idx_repord_card_document_id
            columns:
              - column:
                  name: document_id

  - changeSet:
      id: v57.2025-08-21T17:23:33
      author: edpaget
      comment: Add foreign key constraint for document_id in report_card
      changes:
        - addForeignKeyConstraint:
            baseTableName: report_card
            baseColumnNames: document_id
            referencedTableName: document
            referencedColumnNames: id
            constraintName: fk_report_card_document_id
            onDelete: CASCADE

  - changeSet:
      id: v57.2025-08-21T17:42:32
      author: edpaget
      comment: Create document_bookmark table
      changes:
        - createTable:
            tableName: document_bookmark
            remarks: Store user bookmarks for documents
            columns:
              - column:
                  name: id
                  remarks: Unique ID
                  type: int
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: user_id
                  remarks: User who bookmarked the document
                  type: int
                  constraints:
                    nullable: false
              - column:
                  name: document_id
                  remarks: The document that was bookmarked
                  type: int
                  constraints:
                    nullable: false
              - column:
                  name: created_at
                  remarks: The timestamp when the bookmark was created
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false

  - changeSet:
      id: v57.2025-08-21T17:42:33
      author: edpaget
      comment: Add index on document_bookmark.user_id
      changes:
        - createIndex:
            tableName: document_bookmark
            indexName: idx_document_bookmark_user_id
            columns:
              - column:
                  name: user_id

  - changeSet:
      id: v57.2025-08-21T17:42:34
      author: edpaget
      comment: Add index on document_bookmark.document_id
      changes:
        - createIndex:
            tableName: document_bookmark
            indexName: idx_document_bookmark_document_id
            columns:
              - column:
                  name: document_id

  - changeSet:
      id: v57.2025-08-21T17:42:35
      author: edpaget
      comment: Add foreign key constraint for document_bookmark.user_id
      changes:
        - addForeignKeyConstraint:
            baseTableName: document_bookmark
            baseColumnNames: user_id
            referencedTableName: core_user
            referencedColumnNames: id
            constraintName: fk_document_bookmark_user_id
            onDelete: CASCADE

  - changeSet:
      id: v57.2025-08-21T17:42:36
      author: edpaget
      comment: Add foreign key constraint for document_bookmark.document_id
      changes:
        - addForeignKeyConstraint:
            baseTableName: document_bookmark
            baseColumnNames: document_id
            referencedTableName: document
            referencedColumnNames: id
            constraintName: fk_document_bookmark_document_id
            onDelete: CASCADE

  - changeSet:
      id: v57.2025-08-21T17:42:37
      author: edpaget
      comment: Add unique constraint for document_bookmark user_id and document_id
      changes:
        - addUniqueConstraint:
            tableName: document_bookmark
            columnNames: user_id, document_id
            constraintName: idx_document_bookmark_user_document_unique

  - changeSet:
      id: v57.2025-08-22T00:00:00
      author: metamben
      comment: Create transform table
      changes:
        - createTable:
            tableName: transform
            remarks: The main table for Transform entities
            columns:
              - column:
                  name: id
                  type: int
                  remarks: Unique ID
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  remarks: Name
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  name: description
                  type: ${text.type}
                  remarks: the description of the transform
                  constraints:
                    nullable: true
              - column:
                  name: source
                  remarks: JSON of source
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  name: target
                  remarks: JSON of target
                  type: ${text.type}
                  constraints:
                    nullable: false
              - column:
                  name: entity_id
                  type: char(21)
                  remarks: Random NanoID tag for unique identity.
                  constraints:
                    nullable: true
                    unique: true
              - column:
                  remarks: The timestamp of when the transform was created
                  name: created_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  remarks: The timestamp of when the transform was updated
                  name: updated_at
                  type: ${timestamp_type}
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false

  - changeSet:
      id: v57.2025-08-22T00:01:00
      author: eric
      comment: Create transform_run table in app database to track transform execution
      changes:
        - createTable:
            tableName: transform_run
            remarks: Table to track transform executions and their status in the app database
            columns:
              - column:
                  name: id
                  type: int
                  remarks: Unique ID
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: transform_id
                  type: int
                  remarks: 'Identifier for the transform'
                  constraints:
                    nullable: false
                    referencedTableName: transform
                    referencedColumnNames: id
                    foreignKeyName: fk_transform_run_transform_id
                    deleteCascade: true
              - column:
                  name: run_method
                  type: varchar(255)
                  remarks: 'Method used to execute the transform job'
                  constraints:
                    nullable: false
              - column:
                  name: status
                  type: varchar(50)
                  remarks: 'Current status of the transform job (running, completed, failed, etc.)'
                  constraints:
                    nullable: false
              - column:
                  name: is_active
                  type: ${boolean.type}
                  remarks: 'True only for currently running jobs, null for the others'
                  constraints:
                    nullable: true
                    defaultValue: true
              - column:
                  name: start_time
                  type: ${timestamp_type}
                  remarks: 'When the transform job started'
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: end_time
                  type: ${timestamp_type}
                  remarks: 'When the transform job completed (null if still running)'
                  constraints:
                    nullable: true
              - column:
                  name: message
                  type: ${text.type}
                  remarks: 'Human-readable message about the run; may contain error message in case status is error'
                  constraints:
                    nullable: true

  - changeSet:
      id: v57.2025-08-22T00:02:00
      author: metamben
      comment: Add last run index on transform_run. Mysql needs the foreign keys dropped on rollback.
      changes:
        - createIndex:
            tableName: transform_run
            indexName: idx_transform_run_last_run_idx
            columns:
              - column:
                  name: transform_id
              - column:
                  name: start_time
                  descending: true
      rollback:
        - dropForeignKeyConstraint:
            baseTableName: transform_run
            constraintName: fk_transform_run_transform_id
        - dropIndex:
            tableName: transform_run
            indexName: idx_transform_run_last_run_idx
        - addForeignKeyConstraint:
            constraintName: fk_transform_run_transform_id
            baseTableName: transform_run
            baseColumnNames: transform_id
            referencedTableName: transform
            referencedColumnNames: id
            onDelete: CASCADE

  - changeSet:
      id: v57.2025-08-22T00:03:00
      author: metamben
      comment: Add unique index to make sure at most one run can be active
      changes:
        - addUniqueConstraint:
            tableName: transform_run
            constraintName: idx_unique_active_transform_run
            columnNames: transform_id, is_active

  - changeSet:
      id: v57.2025-08-22T00:04:00
      author: metamben
      comment: Add index for querying active runs. Mysql needs the foreign keys dropped on rollback.
      changes:
        - createIndex:
            tableName: transform_run
            indexName: idx_transform_run_active_runs
            columns:
              - column:
                  name: is_active
              - column:
                  name: transform_id
      rollback:
        - dropForeignKeyConstraint:
            baseTableName: transform_run
            constraintName: fk_transform_run_transform_id
        - dropIndex:
            tableName: transform_run
            indexName: idx_transform_run_active_runs
        - addForeignKeyConstraint:
            constraintName: fk_transform_run_transform_id
            baseTableName: transform_run
            baseColumnNames: transform_id
            referencedTableName: transform
            referencedColumnNames: id
            onDelete: CASCADE

  - changeSet:
      id: v57.2025-08-22T00:05:00
      author: eric
      comment: Create transform_run_cancelation table to track cancelation.
      changes:
        - createTable:
            tableName: transform_run_cancelation
            remarks: Table to track the cancelation of transform job executions
            columns:
              - column:
                  name: run_id
                  type: int
                  remarks: The transform_run ID
                  constraints:
                    primaryKey: true
                    nullable: false
                    referencedTableName: transform_run
                    referencedColumnNames: id
                    foreignKeyName: fk_transform_run_cancelation_transform_run_run_id
                    deleteCascade: true
              - column:
                  name: time
                  type: ${timestamp_type}
                  remarks: 'The time of the request'
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false

  - changeSet:
      id: v57.2025-08-22T00:06:00
      author: galdre
      comment: Add transform_tag table for grouping transforms
      changes:
        - createTable:
            tableName: transform_tag
            remarks: Tags for grouping transforms
            columns:
              - column:
                  name: id
                  type: int
                  remarks: Unique ID
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  type: VARCHAR(254)
                  remarks: The name of the transform tag.
                  constraints:
                    nullable: false
              - column:
                  name: entity_id
                  type: char(21)
                  remarks: Random NanoID tag for unique identity.
                  constraints:
                    nullable: true
                    unique: true
              - column:
                  name: created_at
                  type: ${timestamp_type}
                  remarks: The time the transform tag was created.
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: ${timestamp_type}
                  remarks: The time the transform tag was last updated.
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: built_in_type
                  type: varchar(255)
                  remarks: 'Type of the built-in transform tag: hourly, daily, weekly, monthly.'
                  constraints:
                    nullable: true

  - changeSet:
      id: v57.2025-08-22T00:07:00
      author: galdre
      comment: Add transform_job table for scheduled execution of tagged transforms
      changes:
        - createTable:
            tableName: transform_job
            remarks: Jobs that execute transforms based on tags
            columns:
              - column:
                  name: id
                  type: int
                  remarks: Unique ID
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  type: ${text.type}
                  remarks: The name of the transform job.
                  constraints:
                    nullable: false
              - column:
                  name: description
                  type: ${text.type}
                  remarks: A description of the transform job.
              - column:
                  name: schedule
                  type: ${text.type}
                  remarks: Cron expression for job schedule
                  constraints:
                    nullable: false
              - column:
                  name: entity_id
                  type: char(21)
                  remarks: NanoID identifier for the job
                  constraints:
                    nullable: true
                    unique: true
              - column:
                  name: created_at
                  type: ${timestamp_type}
                  remarks: The timestamp this transform job was created.
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: ${timestamp_type}
                  remarks: The timestamp this transform job was last updated.
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: built_in_type
                  type: varchar(255)
                  remarks: 'Type of the built-in transform job: hourly, daily, weekly, monthly.'
                  constraints:
                    nullable: true

  - changeSet:
      id: v57.2025-08-22T00:08:00
      author: galdre
      comment: Add transform_transform_tag join table for transform-tag associations
      changes:
        - createTable:
            tableName: transform_transform_tag
            remarks: Join table for transforms and tags
            columns:
              - column:
                  name: id
                  type: int
                  remarks: Unique ID
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: transform_id
                  type: int
                  remarks: The id of the transform.
                  constraints:
                    nullable: false
                    referencedTableName: transform
                    referencedColumnNames: id
                    foreignKeyName: fk_transform_transform_tag_transform_id
                    deleteCascade: true
              - column:
                  name: tag_id
                  type: int
                  remarks: The id of the tag.
                  constraints:
                    nullable: false
                    referencedTableName: transform_tag
                    referencedColumnNames: id
                    foreignKeyName: fk_transform_transform_tag_tag_id
                    deleteCascade: true
              - column:
                  name: entity_id
                  type: char(21)
                  remarks: Random NanoID tag for unique identity.
                  constraints:
                    nullable: true
                    unique: true
              - column:
                  name: position
                  type: int
                  remarks: The relative UI ordering of this tag on the transform
                  constraints:
                    nullable: false

  - changeSet:
      id: v57.2025-08-22T00:09:00
      author: galdre
      comment: Add unique constraints on transform_transform_tag(transform_id, tag_id). Deleting foreign keys needed for mysql.
      changes:
        - addUniqueConstraint:
            tableName: transform_transform_tag
            columnNames: transform_id, tag_id
            constraintName: unique_transform_tag
      rollback:
        - dropForeignKeyConstraint:
            baseTableName: transform_transform_tag
            constraintName: fk_transform_transform_tag_transform_id
        - dropForeignKeyConstraint:
            baseTableName: transform_transform_tag
            constraintName: fk_transform_transform_tag_tag_id
        - dropUniqueConstraint:
            tableName: transform_transform_tag
            constraintName: unique_transform_tag

  - changeSet:
      id: v57.2025-08-22T00:10:00
      author: galdre
      comment: Add transform_job_transform_tag join table for job-tag associations
      changes:
        - createTable:
            tableName: transform_job_transform_tag
            remarks: Join table for jobs and tags
            columns:
              - column:
                  name: id
                  type: int
                  remarks: Unique ID
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: job_id
                  type: int
                  remarks: The id of the transform job.
                  constraints:
                    nullable: false
                    referencedTableName: transform_job
                    referencedColumnNames: id
                    foreignKeyName: fk_transform_job_transform_tag_job_id
                    deleteCascade: true
              - column:
                  name: tag_id
                  type: int
                  remarks: The id of the transform tag.
                  constraints:
                    nullable: false
                    referencedTableName: transform_tag
                    referencedColumnNames: id
                    foreignKeyName: fk_transform_job_transform_tag_tag_id
                    deleteCascade: true
              - column:
                  name: entity_id
                  type: char(21)
                  remarks: Random NanoID tag for unique identity.
                  constraints:
                    nullable: true
                    unique: true
              - column:
                  name: position
                  type: int
                  remarks: The ordering position of this tag for the job.
                  constraints:
                    nullable: false

  - changeSet:
      id: v57.2025-08-22T00:11:00
      author: galdre
      comment: Add unique constraint on transform_job_transform_tag(job_id, tag_id). Mysql needs the foreign keys dropped on rollback.
      changes:
        - addUniqueConstraint:
            tableName: transform_job_transform_tag
            columnNames: job_id, tag_id
            constraintName: unique_job_tag
      rollback:
        - dropForeignKeyConstraint:
            baseTableName: transform_job_transform_tag
            constraintName: fk_transform_job_transform_tag_job_id
        - dropForeignKeyConstraint:
            baseTableName: transform_job_transform_tag
            constraintName: fk_transform_job_transform_tag_tag_id
        - dropUniqueConstraint:
            tableName: transform_job_transform_tag
            constraintName: unique_job_tag
        - addForeignKeyConstraint:
            constraintName: fk_transform_job_transform_tag_tag_id
            baseTableName: transform_job_transform_tag
            baseColumnNames: tag_id
            referencedTableName: transform_tag
            referencedColumnNames: id
            onDelete: CASCADE
        - addForeignKeyConstraint:
            constraintName: fk_transform_job_transform_tag_job_id
            baseTableName: transform_job_transform_tag
            baseColumnNames: job_id
            referencedTableName: transform_job
            referencedColumnNames: id
            onDelete: CASCADE

  - changeSet:
      id: v57.2025-08-22T00:12:00
      author: william
      comment: Create transform_job_run table in app database to track transform job execution
      changes:
        - createTable:
            tableName: transform_job_run
            remarks: Table to track transform job executions and their status in the app database
            columns:
              - column:
                  name: id
                  type: int
                  remarks: Unique ID
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: job_id
                  type: bigint
                  remarks: 'Identifier for the transform job'
                  constraints:
                    nullable: false
              - column:
                  name: run_method
                  type: varchar(255)
                  remarks: 'Method used to execute the transform job'
                  constraints:
                    nullable: false
              - column:
                  name: status
                  type: varchar(50)
                  remarks: 'Current status of the transform job (running, completed, failed, etc.)'
                  constraints:
                    nullable: false
              - column:
                  name: is_active
                  type: ${boolean.type}
                  remarks: 'True only for currently running jobs, null for the others'
                  constraints:
                    nullable: true
                    defaultValue: true
              - column:
                  name: start_time
                  type: ${timestamp_type}
                  remarks: 'When the transform job started'
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: end_time
                  type: ${timestamp_type}
                  remarks: 'When the tranform job completed (null if still running)'
                  constraints:
                    nullable: true
              - column:
                  name: message
                  type: ${text.type}
                  remarks: 'Human-readable message about the run; may contain error message in case status is error'
                  constraints:
                    nullable: true
              - column:
                  name: created_at
                  type: ${timestamp_type}
                  remarks: The timestamp this transform job run was created.
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: ${timestamp_type}
                  remarks: The timestamp this transform job run was last updated.
                  defaultValueComputed: current_timestamp
                  constraints:
                    nullable: false

  - changeSet:
        id: v57.2025-08-22T00:13:00
        author: ranquild
        comment: Create built-in transform tags
        changes:
          - sql: >-
              INSERT INTO transform_tag(name, entity_id, built_in_type) VALUES
              ('hourly', 'wYLcUPbtF7jVPO0duGGHR', 'hourly'),
              ('daily', 'dUW7nvQHQBdA0Rx0gJckI', 'daily'),
              ('weekly', 'qPGCJu7t97kn-X07_fgSj', 'weekly'),
              ('monthly', 'DeeJHc81qKhD9qWINISO8', 'monthly');
        rollback:
          - sql: DELETE FROM transform_tag WHERE built_in_type IS NOT NULL;

  - changeSet:
        id: v57.2025-08-22T00:14:00
        author: ranquild
        comment: Create built-in transform jobs
        changes:
          - sql: >-
              INSERT INTO transform_job(name, description, schedule, entity_id, built_in_type) VALUES
              ('Hourly job', 'Executes transforms tagged with ''hourly'' every hour', '0 0 * * * ? *', 'RognTgBT2fXaxoQh4ws7z', 'hourly'),
              ('Daily job', 'Executes transforms tagged with ''daily'' once per day', '0 0 0 * * ? *', 'PJahvcoF61oX5T4uCT_FY', 'daily'),
              ('Weekly job', 'Executes transforms tagged with ''weekly'' once per week', '0 0 0 ? * 1 *', 'lXIFa2SUrXLgaLZJx33oU', 'weekly'),
              ('Monthly job', 'Executes transforms tagged with ''monthly'' once per month', '0 0 0 1 * ? *', 'CL1TVitmzJrDjdjvO2xmN', 'monthly');
        rollback:
          - sql: DELETE FROM transform_job WHERE built_in_type IS NOT NULL;

  - changeSet:
        id: v57.2025-08-22T00:15:00
        author: ranquild
        comment: Create associations between built-in transform jobs and tags
        changes:
          - sql: >-
              INSERT INTO transform_job_transform_tag(job_id, tag_id, entity_id, position)
              SELECT job.id, tag.id, job.entity_id, 0 AS position
              FROM transform_job AS job
              JOIN transform_tag AS tag ON job.built_in_type = tag.built_in_type
              WHERE job.built_in_type IS NOT NULL AND tag.built_in_type IS NOT NULL;
        rollback:
          - sql: >-
              DELETE FROM transform_job_transform_tag
              WHERE
                job_id IN (SELECT id FROM transform_job WHERE built_in_type IS NOT NULL) AND
                tag_id IN (SELECT id FROM transform_tag WHERE built_in_type IS NOT NULL);

  - changeSet:
      id: v57.2025-08-23T10:00:00
      author: chodorowicz
      comment: Add provider_name column to metabase_database table
      changes:
        - addColumn:
            tableName: metabase_database
            columns:
              - column:
                  name: provider_name
                  type: varchar(100)
                  remarks: "The name of the hosting provider for the database (e.g., AWS RDS, Azure)."
                  constraints:
                    nullable: true
                  defaultValue: null

  - changeSet:
      id: v57.2025-08-23T15:00:00
      author: christruter
      comment: Add data_authority enum field to metabase_table
      changes:
        - addColumn:
            tableName: metabase_table
            columns:
              - column:
                  name: data_authority
                  remarks: Indicates the data authority status - unconfigured, authoritative, computed, or ingested
                  type: varchar(20)
                  defaultValue: 'unconfigured'
                  constraints:
                    nullable: false

  - changeSet:
      id: v57.2025-08-23T16:00:00
      author: rileythomp
      comment: Migrate ClickHouse database details to be use `enable-multiple-db` with db filters
      changes:
        - customChange:
            class: "metabase.app_db.custom_migrations.MigrateClickHouseDetailsToMultiDB"

  - changeSet:
      id: v57.2025-08-26T10:51:08
      author: jds
      comment: Add synced_to_source_of_truth column to transform table
      changes:
        - addColumn:
            tableName: transform
            columns:
              - column:
                  name: synced_to_source_of_truth
                  remarks: Whether this transform is synced to the git source of truth
                  type: ${boolean.type}
                  defaultValueBoolean: false
                  constraints:
                    nullable: false

  - changeSet:
      id: v57.2025-09-04T10:00:00
      author: edpaget
      comment: Add library_identifier column to transform table
      changes:
        - addColumn:
            tableName: transform
            columns:
              - column:
                  name: library_identifier
                  remarks: Unique identifier for transforms within a library
                  type: varchar(254)
                  constraints:
                    nullable: true

  - changeSet:
      id: v57.2025-09-04T10:01:00
      author: edpaget
      comment: Add unique constraint and index on transform.library_identifier
      changes:
        - addUniqueConstraint:
            tableName: transform
            columnNames: library_identifier
            constraintName: unique_transform_library_identifier
        - createIndex:
            tableName: transform
            indexName: idx_transform_library_identifier
            columns:
              - column:
                  name: library_identifier

  - changeSet:
      id: v57.2025-09-09T12:00:00
      author: johnswanson
      comment: Create the Library collection
      changes:
        - sql:
            sql: >-
              INSERT INTO collection (name, slug, entity_id, type) VALUES ('Library', 'library', 'librarylibrarylibrary', 'library');

      rollback:
        - sql:
            sql: >-
              DELETE FROM collection WHERE type = 'library';

# >>>>>>>>>> DO NOT ADD NEW MIGRATIONS BELOW THIS LINE! ADD THEM ABOVE <<<<<<<<<<

########################################################################################################################
#
# ADVICE:
#
# 1) Think through some of these points when writing a migration, learn from our past mistakes:
#    - Do you really need a migration? Could the feature work without it? Prefer not to if possible.
#      Data in the wild can be vastly different from what you expect, and it's hard to get right.
#    - Make sure your migration is backward compatible: it might not be possible to add a constraint back
#      if you drop it in a migration.
#    - Postgres, MySQL and H2 have their differences. Make sure your migration works for all.
#    - Database encryption is a major issue:
#      - Fields like `metabase_database.details` or `setting.value` can be encrypted, so you need to decrypt them in
#        your migration. See #42617, #44048.
#      - Database could be partially encrypted, see https://www.notion.so/72575933ef2a446bafd16909e05a7387
#    - Custom migrations:
#      - Prefer SQL migrations when possible.
#      - Never use application code: it can change and *will* break your migration.
#      - Do not use Toucan models - refer table names directly.
#      - If it's a big change, consider using Quartz, see #42279
#      - More in `metabase.app_db.custom_migrations` namespace doc.
#    - Never delete a migration: users won't be able to downgrade. If you really need to, see #44908
#    - Migration id (`vXX.<date>`) must match its earliest released version:
#      - Do not backport `v51....` to version 50, Metabase will try to downgrade it.
#      - Instead, write a migration with an oldest target you plan to backport to in mind.
#
# 2) Migrations should go in the ###_update_migrations.yaml file for the target version.
#
# 3) Run mage lint-migrations-file to run core.spec checks against any changes you make here. Liquibase is pretty
#    forgiving and won't complain if you accidentally mix up things like deleteCascade and onDelete: CASCADE. CI runs
#    this check but it's nicer to know now instead of waiting for CI.
#
# 3) Migration IDs should follow the format
#
#    vMM.TIMESTAMP
#
#    Where
#
#    M         = major version
#    TIMESTAMP = the current timestamp with format `yyyy-MM-dd'T'HH:mm:ss`
#                To get this timestamp, evaluate this in your REPL: `(dev/migration-timestamp)`
#
#    E.g: You're adding a new migration for version 49, And it's 10:30:00AM on April 1, 2023 (UTC),
#    your migration id should be: `v49.2023-04-01T10:30:00`.
#
# PLEASE KEEP THIS MESSAGE AT THE BOTTOM OF THIS FILE!!!!! Add new migrations above the message.
#
########################################################################################################################
