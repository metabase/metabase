name: Prepare Python Runner
description: |
  Prepare the Python runner environment for tests. This action starts the python-runner
  service using the Makefile, making it available for Python transform tests and driver tests.

runs:
  using: "composite"
  steps:
    - name: Check if python-runner directory exists
      id: check-python-runner
      shell: bash
      run: |
        if [ -d "python-runner" ]; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "‚úÖ python-runner directory found"
          # Echo the current commit for debugging
          echo "üìç Python runner commit:"
          cd python-runner && git rev-parse HEAD && cd ..
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "‚ùå python-runner directory not found - make sure to checkout with submodules!"
          exit 1
        fi
    
    - name: Start python-runner using Makefile
      if: steps.check-python-runner.outputs.exists == 'true'
      shell: bash
      working-directory: python-runner
      run: |
        echo "üöÄ Starting python-runner using make run-all..."
        make run-all
        echo "‚úÖ Python runner started successfully!"
    
    - name: Wait for Python Runner
      if: steps.check-python-runner.outputs.exists == 'true'  
      uses: ./.github/actions/await-port
      with:
        port: 5001
      timeout-minutes: 5
        
    - name: Wait for LocalStack
      if: steps.check-python-runner.outputs.exists == 'true'
      uses: ./.github/actions/await-port
      with:
        port: 4566
      timeout-minutes: 5
      
    - name: Verify LocalStack S3 is ready
      if: steps.check-python-runner.outputs.exists == 'true'
      shell: bash
      run: |
        echo "üîç Verifying LocalStack S3 is accessible..."
        # First try with AWS CLI if available
        if command -v aws >/dev/null 2>&1; then
          echo "Using AWS CLI to check LocalStack..."
          for i in {1..30}; do
            if AWS_ACCESS_KEY_ID=test AWS_SECRET_ACCESS_KEY=test AWS_DEFAULT_REGION=us-east-1 aws --endpoint-url=http://localhost:4566 s3 ls 2>/dev/null; then
              echo "‚úÖ LocalStack S3 is ready!"
              exit 0
            fi
            echo "  Waiting for LocalStack S3... ($i/30)"
            sleep 2
          done
        else
          # Fall back to curl if AWS CLI is not available
          echo "AWS CLI not found, using curl to check LocalStack..."
          for i in {1..30}; do
            if curl -s -f -X GET "http://localhost:4566/_localstack/health" | grep -q '"s3":\s*"available"'; then
              echo "‚úÖ LocalStack S3 is ready!"
              exit 0
            fi
            echo "  Waiting for LocalStack S3... ($i/30)"
            sleep 2
          done
        fi
        echo "‚ùå LocalStack S3 failed to become ready"
        exit 1