name: Prepare front-end environment
inputs:
  node-version:
    description: "The version of Node.js to use, overriding .nvmrc"
    required: false
  skip-wireit-cache:
    description: "Whether to skip wireit cache restoration"
    required: false
    default: "true"
runs:
  using: "composite"
  steps:
    - name: Prepare Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }} # this overrides, if present
        node-version-file: ".nvmrc"

    - name: Check to see if dependencies should be cached
      if: ${{ contains(github.event.head_commit.message, '[ci nocache]') }}
      run: |
        echo "Commit message includes [ci nocache]; dependencies will NOT be cached"
        yarn cache clean
      shell: bash
    - name: Get M2 cache
      uses: actions/cache@v4
      if: ${{ !contains(github.event.head_commit.message, '[ci nocache]') }}
      with:
        path: ~/.m2
        key: ${{ runner.os }}-cljs-${{ hashFiles('**/shadow-cljs.edn') }}

    - name: Get node_modules cache
      uses: actions/cache@v4
      id: node-modules-cache
      if: ${{ !contains(github.event.head_commit.message, '[ci nocache]') }}
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock', '**/patches/*.patch') }}

    # Add wireit cache restoration
    - name: Get wireit cache
      uses: actions/cache@v4
      id: wireit-cache
      if: ${{ !contains(github.event.head_commit.message, '[ci nocache]') && inputs.skip-wireit-cache != 'true' }}
      with:
        path: .wireit
        key: wireit-${{ runner.os }}-${{ hashFiles('src/**/*.cljc', 'src/**/*.cljs', 'src/**/*.clj', '**deps.edn', 'enterprise/backend/src/**', 'src/**', 'modules/drivers/{*,*/{*,!(test)/**}}', '.clj-kondo/**', 'shadow-cljs.edn') }}
        restore-keys: |
          wireit-${{ runner.os }}-

    - run: yarn install --frozen-lockfile --prefer-offline
      shell: bash
