// This file is auto-generated by @hey-api/openapi-ts

import type { _heyapi_10_ } from './types.gen';

export type ClientOptions = {
    baseUrl: `${string}://${string}` | (string & {});
};

export type GsheetsResponse = {
    error: boolean;
    message: string;
} | {
    [key: string]: unknown;
} | {
    created_at: number;
    created_by_id: number;
    db_id: number;
    sync_started_at: number;
    url: string;
} | {
    created_at: number;
    created_by_id: number;
    db_id: number;
    last_sync_at: number;
    next_sync_at: number;
    url: string;
} | {
    created_at: number;
    created_by_id: number;
    db_id: number;
    error_message: string;
    url: string;
};

export type MbqlClause___ = unknown;

export type MbqlClause__ = unknown;

export type MbqlClause__2 = MetabaseLibSchemaExpressionArithmeticPlusMinusTemporalIntervalSchema | MetabaseLibSchemaExpressionArithmeticPlusMinusNumericSchema;

export type MbqlClause = MetabaseLibSchemaExpressionArithmeticPlusMinusTemporalIntervalSchema | MetabaseLibSchemaExpressionArithmeticPlusMinusNumericSchema | MetabaseLibSchemaExpressionArithmeticTemporalDifferenceSchema;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type _heyapi_10_ = unknown;

export type MbqlClause__3 = [
    '<',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionOrderable,
    MetabaseLibSchemaExpressionOrderable
];

export type MbqlClause___2 = [
    '<=',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionOrderable,
    MetabaseLibSchemaExpressionOrderable
];

export type MbqlClause__4 = unknown;

export type MbqlClause__5 = [
    '>',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionOrderable,
    MetabaseLibSchemaExpressionOrderable
];

export type MbqlClause___3 = [
    '>=',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionOrderable,
    MetabaseLibSchemaExpressionOrderable
];

export type MbqlClauseAbs = [
    'abs',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionNumber
];

export type MbqlClauseAbsoluteDatetime = unknown;

export type MbqlClauseAggregation = [
    'aggregation',
    MetabaseLibSchemaRefAggregationOptions,
    string
];

export type MbqlClauseAnd = unknown;

export type MbqlClauseAsc = [
    'asc',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionOrderable
];

export type MbqlClauseAvg = [
    'avg',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionNumber
];

export type MbqlClauseBetween = [
    'between',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionOrderable,
    MetabaseLibSchemaExpressionOrderable,
    MetabaseLibSchemaExpressionOrderable
];

export type MbqlClauseCase = unknown;

export type MbqlClauseCeil = [
    'ceil',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionNumber
];

export type MbqlClauseCoalesce = unknown;

export type MbqlClauseConcat = unknown;

export type MbqlClauseContains = unknown;

export type MbqlClauseConvertTimezone = unknown;

export type MbqlClauseCount = unknown;

export type MbqlClauseCountWhere = [
    'count-where',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionBoolean
];

export type MbqlClauseCumCount = unknown;

export type MbqlClauseCumSum = [
    'cum-sum',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionNumber
];

export type MbqlClauseDate = [
    'date',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionString | MetabaseLibSchemaExpressionTemporal
];

export type MbqlClauseDatetime = unknown;

export type MbqlClauseDatetimeAdd = [
    'datetime-add',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionTemporal,
    number,
    MetabaseLibSchemaTemporalBucketingUnitDateTimeInterval
];

export type MbqlClauseDatetimeDiff = [
    'datetime-diff',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionTemporal,
    MetabaseLibSchemaExpressionTemporal,
    MetabaseLibSchemaExpressionTemporalDatetimeDiffUnit
];

export type MbqlClauseDatetimeSubtract = [
    'datetime-subtract',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionTemporal,
    number,
    MetabaseLibSchemaTemporalBucketingUnitDateTimeInterval
];

export type MbqlClauseDayName = [
    'day-name',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionInteger
];

export type MbqlClauseDesc = [
    'desc',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionOrderable
];

export type MbqlClauseDistinct = [
    'distinct',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionExpression
];

export type MbqlClauseDistinctWhere = [
    'distinct-where',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionExpression,
    MetabaseLibSchemaExpressionBoolean
];

export type MbqlClauseDoesNotContain = unknown;

export type MbqlClauseDomain = [
    'domain',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionString
];

export type MbqlClauseDuring = [
    'during',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionTemporal,
    MetabaseLibSchemaLiteralStringDate | MetabaseLibSchemaLiteralStringDatetime,
    MetabaseLibSchemaTemporalBucketingUnitDateTimeInterval
];

export type MbqlClauseEndsWith = unknown;

export type MbqlClauseExp = [
    'exp',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionNumber
];

export type MbqlClauseExpression = [
    'expression',
    MetabaseLibSchemaRefExpressionOptions,
    MetabaseLibSchemaCommonNonBlankString
];

export type MbqlClauseField = [
    'field',
    MetabaseLibSchemaRefFieldOptions,
    MetabaseLibSchemaIdField | string
] & (MetabaseLibSchemaRefFieldId | MetabaseLibSchemaRefFieldLiteral);

export type MbqlClauseFloat = [
    'float',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionString
];

export type MbqlClauseFloor = [
    'floor',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionNumber
];

export type MbqlClauseGetDay = [
    'get-day',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionTemporal
];

export type MbqlClauseGetDayOfWeek = unknown;

export type MbqlClauseGetHour = [
    'get-hour',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionTemporal
];

export type MbqlClauseGetMinute = [
    'get-minute',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionTemporal
];

export type MbqlClauseGetMonth = [
    'get-month',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionTemporal
];

export type MbqlClauseGetQuarter = [
    'get-quarter',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionTemporal
];

export type MbqlClauseGetSecond = [
    'get-second',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionTemporal
];

export type MbqlClauseGetWeek = unknown;

export type MbqlClauseGetYear = [
    'get-year',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionTemporal
];

export type MbqlClauseHost = [
    'host',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionString
];

export type MbqlClauseIf = unknown;

export type MbqlClauseIn = unknown;

export type MbqlClauseInside = [
    'inside',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionOrderable,
    MetabaseLibSchemaExpressionOrderable,
    MetabaseLibSchemaExpressionOrderable,
    MetabaseLibSchemaExpressionOrderable,
    MetabaseLibSchemaExpressionOrderable,
    MetabaseLibSchemaExpressionOrderable
];

export type MbqlClauseInteger = [
    'integer',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionString | MetabaseLibSchemaExpressionNumber
];

export type MbqlClauseInterval = [
    'interval',
    MetabaseLibSchemaCommonOptions,
    number,
    MetabaseLibSchemaTemporalBucketingUnitDateTimeInterval
];

export type MbqlClauseIsEmpty = [
    'is-empty',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionExpression
];

export type MbqlClauseIsNull = [
    'is-null',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionExpression
];

export type MbqlClauseLength = [
    'length',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionString
];

export type MbqlClauseLog = [
    'log',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionNumber
];

export type MbqlClauseLower = [
    'lower',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionString
];

export type MbqlClauseLtrim = [
    'ltrim',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionString
];

export type MbqlClauseMax = [
    'max',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionOrderable
];

export type MbqlClauseMedian = [
    'median',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionNumber
];

export type MbqlClauseMetric = [
    'metric',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaIdCard
];

export type MbqlClauseMin = [
    'min',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionOrderable
];

export type MbqlClauseMonthName = [
    'month-name',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionInteger
];

export type MbqlClauseNot = [
    'not',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionBoolean
];

export type MbqlClauseNotEmpty = [
    'not-empty',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionExpression
];

export type MbqlClauseNotIn = unknown;

export type MbqlClauseNotNull = [
    'not-null',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionExpression
];

export type MbqlClauseNow = [
    'now',
    MetabaseLibSchemaCommonOptions
];

export type MbqlClauseOffset = [
    'offset',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionExpression,
    MetabaseLibSchemaExpressionWindowOffsetN
];

export type MbqlClauseOr = unknown;

export type MbqlClausePath = [
    'path',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionString
];

export type MbqlClausePercentile = [
    'percentile',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionNumber,
    MetabaseLibSchemaExpressionNumber
];

export type MbqlClausePower = [
    'power',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionNumber,
    MetabaseLibSchemaExpressionNumber
];

export type MbqlClauseQuarterName = [
    'quarter-name',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionInteger
];

export type MbqlClauseRegexMatchFirst = [
    'regex-match-first',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionString,
    MetabaseLibSchemaExpressionString
];

export type MbqlClauseRelativeDatetime = unknown;

export type MbqlClauseRelativeTimeInterval = [
    'relative-time-interval',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionTemporal,
    number,
    MetabaseLibSchemaTemporalBucketingUnitDateTimeInterval,
    number,
    MetabaseLibSchemaTemporalBucketingUnitDateTimeInterval
];

export type MbqlClauseReplace = [
    'replace',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionString,
    string,
    string
];

export type MbqlClauseRound = [
    'round',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionNumber
];

export type MbqlClauseRtrim = [
    'rtrim',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionString
];

export type MbqlClauseSegment = [
    'segment',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaIdSegment
];

export type MbqlClauseShare = [
    'share',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionBoolean
];

export type MbqlClauseSplitPart = [
    'split-part',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionString,
    string,
    MetabaseLibSchemaExpressionInteger
];

export type MbqlClauseSqrt = [
    'sqrt',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionNumber
];

export type MbqlClauseStartsWith = unknown;

export type MbqlClauseStddev = [
    'stddev',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionNumber
];

export type MbqlClauseSubdomain = [
    'subdomain',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionString
];

export type MbqlClauseSubstring = unknown;

export type MbqlClauseSum = [
    'sum',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionNumber
];

export type MbqlClauseSumWhere = [
    'sum-where',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionNumber,
    MetabaseLibSchemaExpressionBoolean
];

export type MbqlClauseTemporalExtract = unknown;

export type MbqlClauseText = [
    'text',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionExpression
];

export type MbqlClauseTime = [
    'time',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionString,
    'default' | MetabaseLibSchemaTemporalBucketingUnitTimeInterval
];

export type MbqlClauseTimeInterval = [
    'time-interval',
    {
        'lib/uuid': MetabaseLibSchemaCommonUuid;
        'base-type'?: MetabaseLibSchemaCommonBaseType | null;
        'effective-type'?: MetabaseLibSchemaCommonBaseType | null;
        'semantic-type'?: MetabaseLibSchemaCommonSemanticOrRelationType | null;
        'database-type'?: MetabaseLibSchemaCommonNonBlankString | null;
        name?: MetabaseLibSchemaCommonNonBlankString | null;
        'display-name'?: MetabaseLibSchemaCommonNonBlankString | null;
        'include-current'?: boolean;
    } & unknown,
    MetabaseLibSchemaExpressionTemporal,
    'current' | 'last' | 'next' | MetabaseLibSchemaExpressionInteger,
    MetabaseLibSchemaTemporalBucketingUnitDateTimeInterval
];

export type MbqlClauseToday = [
    'today',
    MetabaseLibSchemaCommonOptions
];

export type MbqlClauseTrim = [
    'trim',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionString
];

export type MbqlClauseUpper = [
    'upper',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionString
];

export type MbqlClauseValue = [
    'value',
    MetabaseLibSchemaLiteralValueOptions,
    unknown
];

export type MbqlClauseVar = [
    'var',
    MetabaseLibSchemaCommonOptions,
    MetabaseLibSchemaExpressionNumber
];

/**
 * A more relaxed version of ::action-expression that can still have opaque identifiers inside inside.
 */
export type MetabaseEnterpriseActionV2ApiApiActionExpression = {
    [key: string]: unknown;
};

/**
 * Primitive actions, saved actions, and packed encodings from the picker.
 */
export type MetabaseEnterpriseActionV2ApiApiActionId = number | string;

/**
 * All the various ways of referring to an action with the v2 APIs.
 */
export type MetabaseEnterpriseActionV2ApiApiActionIdOrExpression = MetabaseEnterpriseActionV2ApiApiActionId | MetabaseEnterpriseActionV2ApiApiActionExpression;

/**
 * Schema for an instance of a `:model/Card` (everything is optional to support updates).
 */
export type MetabaseEnterpriseDependenciesApiCardBody = {
    dataset_query?: MetabaseQueriesSchemaQuery;
    id?: MetabaseLibSchemaIdCard;
    parameter_mappings?: MetabaseParametersSchemaParameterMappings;
    parameters?: MetabaseParametersSchemaParameters;
    result_metadata?: MetabaseAnalyzeQueryResultsResultsMetadata;
    type?: MetabaseLibSchemaMetadataCardType;
};

export type MetabaseEnterpriseDependenciesApiTransformBody = {
    /**
     * value must be an integer greater than zero.
     */
    id: number;
    name?: string;
    source?: {
        query?: MetabaseQueriesSchemaQuery;
        type?: string;
    };
    /**
     * Value must be a map.
     */
    target?: {
        [key: string]: unknown;
    };
};

export type MetabaseEnterpriseMetabotV3ClientSchemaMessage = {
    content?: string;
    role: MetabaseEnterpriseMetabotV3ClientSchemaRole;
    tool_call_id?: string;
    tool_calls?: Array<{
        arguments: string;
        id: string;
        name: string;
    }>;
};

export type MetabaseEnterpriseMetabotV3ClientSchemaMessages = Array<MetabaseEnterpriseMetabotV3ClientSchemaMessage>;

export const MetabaseEnterpriseMetabotV3ClientSchemaRole = {
    SYSTEM: 'system',
    USER: 'user',
    ASSISTANT: 'assistant',
    TOOL: 'tool'
} as const;

export type MetabaseEnterpriseMetabotV3ClientSchemaRole = typeof MetabaseEnterpriseMetabotV3ClientSchemaRole[keyof typeof MetabaseEnterpriseMetabotV3ClientSchemaRole];

export type MetabaseEnterpriseMetabotV3ContextContext = {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiAggregation = {
    bucket?: MetabaseEnterpriseMetabotV3ToolsApiBucket;
    field_id: string;
    function: 'avg' | 'count' | 'count-distinct' | 'max' | 'min' | 'sum';
    sort_order?: 'asc' | 'desc';
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiAnswerSourcesArguments = {
    with_metric_default_temporal_breakout?: boolean;
    with_metric_queryable_dimensions?: boolean;
    with_model_fields?: boolean;
    with_model_metrics?: boolean;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiAnswerSourcesResult = {
    structured_output: {
        metrics: Array<MetabaseEnterpriseMetabotV3ToolsApiFullMetric>;
        models: Array<MetabaseEnterpriseMetabotV3ToolsApiTableResult>;
    };
} | {
    output: string;
};

export type MetabaseEnterpriseMetabotV3ToolsApiBasicMetric = {
    default_time_dimension_field_id?: string;
    description?: string;
    id: number;
    name: string;
    type: 'metric';
};

export const MetabaseEnterpriseMetabotV3ToolsApiBucket = {
    MILLISECOND: 'millisecond',
    SECOND: 'second',
    MINUTE: 'minute',
    HOUR: 'hour',
    DAY: 'day',
    WEEK: 'week',
    MONTH: 'month',
    QUARTER: 'quarter',
    YEAR: 'year',
    SECOND_OF_MINUTE: 'second-of-minute',
    MINUTE_OF_HOUR: 'minute-of-hour',
    HOUR_OF_DAY: 'hour-of-day',
    DAY_OF_WEEK: 'day-of-week',
    DAY_OF_MONTH: 'day-of-month',
    DAY_OF_YEAR: 'day-of-year',
    WEEK_OF_YEAR: 'week-of-year',
    MONTH_OF_YEAR: 'month-of-year',
    QUARTER_OF_YEAR: 'quarter-of-year',
    YEAR_OF_ERA: 'year-of-era'
} as const;

export type MetabaseEnterpriseMetabotV3ToolsApiBucket = typeof MetabaseEnterpriseMetabotV3ToolsApiBucket[keyof typeof MetabaseEnterpriseMetabotV3ToolsApiBucket];

export type MetabaseEnterpriseMetabotV3ToolsApiColumn = {
    description?: string;
    field_id: string;
    field_values?: MetabaseEnterpriseMetabotV3ToolsApiFieldValues;
    name: string;
    semantic_type?: string;
    type?: MetabaseEnterpriseMetabotV3ToolsApiFieldType;
};

export type MetabaseEnterpriseMetabotV3ToolsApiColumns = Array<MetabaseEnterpriseMetabotV3ToolsApiColumn>;

export type MetabaseEnterpriseMetabotV3ToolsApiCount = number;

export type MetabaseEnterpriseMetabotV3ToolsApiCreateDashboardSubscriptionArguments = {
    dashboard_id: number;
    email: string;
    schedule: MetabaseEnterpriseMetabotV3ToolsApiSubscriptionSchedule;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiDisjunctiveNumericFilter = {
    field_id: string;
    operation: 'equals' | 'not-equals' | 'number-equals' | 'number-not-equals';
    values: Array<number | number>;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiDisjunctiveStringDateFilter = {
    field_id: string;
    operation: 'equals' | 'not-equals' | 'string-contains' | 'string-not-contains' | 'string-starts-with' | 'string-ends-with';
    values: Array<string>;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiDisjunctiveTemporalExtractionFilter = {
    field_id: string;
    operation: 'year-equals' | 'year-not-equals' | 'quarter-equals' | 'quarter-not-equals' | 'month-equals' | 'month-not-equals' | 'day-of-week-equals' | 'day-of-week-not-equals' | 'hour-equals' | 'hour-not-equals' | 'minute-equals' | 'minute-not-equals' | 'second-equals' | 'second-not-equals';
    values: Array<number>;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiDisjunctiveTemporalFilter = {
    bucket?: MetabaseEnterpriseMetabotV3ToolsApiBucket;
    field_id: string;
    operation: 'equals' | 'not-equals' | 'greater-than' | 'greater-than-or-equal' | 'less-than' | 'less-than-or-equal';
    values: Array<string | number>;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiExistenceFilter = {
    field_id: string;
    operation: 'is-null' | 'is-not-null' | 'string-is-empty' | 'string-is-not-empty' | 'is-true' | 'is-false';
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiField = {
    bucket?: MetabaseEnterpriseMetabotV3ToolsApiBucket;
    field_id: string;
} & {
    [key: string]: unknown;
};

export const MetabaseEnterpriseMetabotV3ToolsApiFieldType = {
    BOOLEAN: 'boolean',
    DATE: 'date',
    DATETIME: 'datetime',
    TIME: 'time',
    NUMBER: 'number',
    STRING: 'string'
} as const;

export type MetabaseEnterpriseMetabotV3ToolsApiFieldType = typeof MetabaseEnterpriseMetabotV3ToolsApiFieldType[keyof typeof MetabaseEnterpriseMetabotV3ToolsApiFieldType];

export type MetabaseEnterpriseMetabotV3ToolsApiFieldValues = Array<boolean> | Array<number> | Array<string>;

export type MetabaseEnterpriseMetabotV3ToolsApiFieldValuesArguments = {
    entity_id: number;
    entity_type: 'table' | 'model' | 'metric';
    field_id: string;
    limit?: number;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiFieldValuesResult = {
    structured_output: {
        field_id: string;
        statistics?: MetabaseEnterpriseMetabotV3ToolsApiStatistics;
        values?: Array<unknown>;
    };
} | {
    output: string;
};

export type MetabaseEnterpriseMetabotV3ToolsApiFilter = MetabaseEnterpriseMetabotV3ToolsApiExistenceFilter | MetabaseEnterpriseMetabotV3ToolsApiTemporalExtractionFilter | MetabaseEnterpriseMetabotV3ToolsApiDisjunctiveTemporalExtractionFilter | MetabaseEnterpriseMetabotV3ToolsApiTemporalFilter | MetabaseEnterpriseMetabotV3ToolsApiDisjunctiveTemporalFilter | MetabaseEnterpriseMetabotV3ToolsApiStringFilter | MetabaseEnterpriseMetabotV3ToolsApiDisjunctiveStringDateFilter | MetabaseEnterpriseMetabotV3ToolsApiNumericFilter | MetabaseEnterpriseMetabotV3ToolsApiDisjunctiveNumericFilter;

export type MetabaseEnterpriseMetabotV3ToolsApiFilterRecordsArguments = {
    data_source: ({
        query: {
            database: number;
        };
        query_id?: string;
    } | {
        report_id: number;
    } | {
        table_id: string;
    }) & {
        [key: string]: unknown;
    };
    filters: Array<MetabaseEnterpriseMetabotV3ToolsApiFilter>;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiFilteringResult = {
    structured_output: {
        query: MetabaseLegacyMbqlSchemaQuery;
        query_id: string;
        result_columns: Array<MetabaseEnterpriseMetabotV3ToolsApiColumn>;
        type: 'query';
    };
} | {
    output: string;
};

export type MetabaseEnterpriseMetabotV3ToolsApiFindOutliersArguments = {
    data_source: ({
        query: {
            database: number;
        };
        query_id?: string;
        result_field_id: string;
    } | {
        metric_id: number;
    } | {
        report_id: number;
        result_field_id: string;
    } | {
        result_field_id: string;
        table_id: string;
    }) & {
        [key: string]: unknown;
    };
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiFindOutliersResult = {
    structured_output: Array<{
        dimension: unknown;
        value: number | number;
    }>;
} | {
    output: string;
};

export type MetabaseEnterpriseMetabotV3ToolsApiFullMetric = {
    default_time_dimension_field_id?: string;
    description?: string;
    id: number;
    name: string;
    queryable_dimensions?: MetabaseEnterpriseMetabotV3ToolsApiColumns;
    type: 'metric';
    verified?: boolean;
};

export type MetabaseEnterpriseMetabotV3ToolsApiGenerateInsightsArguments = {
    for: {
        metric_id: number;
    } | {
        table_id: string;
    } | {
        report_id: number;
    } | {
        query: {
            [key: string]: unknown;
        };
    };
};

export type MetabaseEnterpriseMetabotV3ToolsApiGetCurrentUserResult = {
    structured_output: {
        email_address: string;
        id: number;
        name: string;
        type: 'user';
    };
} | {
    output: string;
};

export type MetabaseEnterpriseMetabotV3ToolsApiGetDashboardDetailsResult = {
    structured_output: {
        description?: string;
        id: number;
        name: string;
        type: 'dashboard';
        verified?: boolean;
    };
} | {
    output: string;
};

export type MetabaseEnterpriseMetabotV3ToolsApiGetDocumentDetailsArguments = {
    document_id: number;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiGetDocumentDetailsResult = {
    structured_output: {
        document: string;
        id: number;
        name: string;
    };
} | {
    output: string;
};

export type MetabaseEnterpriseMetabotV3ToolsApiGetMetricDetailsArguments = {
    metric_id: number;
    with_default_temporal_breakout?: boolean;
    with_field_values?: boolean;
    with_queryable_dimensions?: boolean;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiGetMetricDetailsResult = {
    structured_output: MetabaseEnterpriseMetabotV3ToolsApiFullMetric;
} | {
    output: string;
};

export type MetabaseEnterpriseMetabotV3ToolsApiGetQueryDetailsResult = {
    structured_output: {
        query: {
            [key: string]: unknown;
        };
        query_id: string;
        result_columns: MetabaseEnterpriseMetabotV3ToolsApiColumns;
        type: 'query';
    };
} | {
    output: string;
};

export type MetabaseEnterpriseMetabotV3ToolsApiGetReportDetailsArguments = {
    report_id: number;
    with_field_values?: boolean;
    with_fields?: boolean;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiGetReportDetailsResult = {
    structured_output: {
        description?: string;
        id: number;
        name: string;
        result_columns: MetabaseEnterpriseMetabotV3ToolsApiColumns;
        type: 'question';
        verified?: boolean;
    };
} | {
    output: string;
};

export type MetabaseEnterpriseMetabotV3ToolsApiGetTableDetailsArguments = {
    model_id?: number;
    table_id?: number | string;
    with_field_values?: boolean;
    with_fields?: boolean;
    with_metric_default_temporal_breakout?: boolean;
    with_metrics?: boolean;
    with_related_tables?: boolean;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiGetTableDetailsResult = {
    structured_output: MetabaseEnterpriseMetabotV3ToolsApiTableResult;
} | {
    output: string;
};

export type MetabaseEnterpriseMetabotV3ToolsApiGetTablesArguments = {
    database_id: number;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiGetTablesResult = {
    structured_output: {
        database: {
            description: string;
            engine: string;
            id: number;
            name: string;
        };
        tables: Array<{
            columns: Array<{
                description: string;
                id: number;
                name: string;
                type: string;
            }>;
            description: string;
            id: number;
            name: string;
        }>;
    };
} | {
    output: string;
};

export type MetabaseEnterpriseMetabotV3ToolsApiGroupBy = {
    field_granularity?: 'day' | 'week' | 'month' | 'quarter' | 'year';
    field_id: string;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiNumericFilter = {
    field_id: string;
    operation: 'equals' | 'not-equals' | 'greater-than' | 'greater-than-or-equal' | 'less-than' | 'less-than-or-equal' | 'number-equals' | 'number-not-equals' | 'number-greater-than' | 'number-greater-than-or-equal' | 'number-less-than' | 'number-less-than-or-equal';
    value: number | number;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiProportion = number;

export type MetabaseEnterpriseMetabotV3ToolsApiQueryDatasourceArguments = {
    aggregations?: Array<MetabaseEnterpriseMetabotV3ToolsApiAggregation>;
    fields?: Array<MetabaseEnterpriseMetabotV3ToolsApiField>;
    filters?: Array<MetabaseEnterpriseMetabotV3ToolsApiFilter>;
    group_by?: Array<MetabaseEnterpriseMetabotV3ToolsApiGroupBy>;
    limit?: number;
    model_id?: number;
    order_by?: Array<{
        direction: 'asc' | 'desc';
        field: MetabaseEnterpriseMetabotV3ToolsApiField;
    }>;
    table_id?: number;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiQueryMetricArguments = {
    filters?: Array<MetabaseEnterpriseMetabotV3ToolsApiFilter>;
    group_by?: Array<MetabaseEnterpriseMetabotV3ToolsApiGroupBy>;
    metric_id: number;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiQueryModelArguments = {
    aggregations?: Array<MetabaseEnterpriseMetabotV3ToolsApiAggregation>;
    fields?: Array<MetabaseEnterpriseMetabotV3ToolsApiField>;
    filters?: Array<MetabaseEnterpriseMetabotV3ToolsApiFilter>;
    group_by?: Array<MetabaseEnterpriseMetabotV3ToolsApiGroupBy>;
    limit?: number;
    model_id: number;
    order_by?: Array<{
        direction: 'asc' | 'desc';
        field: MetabaseEnterpriseMetabotV3ToolsApiField;
    }>;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiSearchArguments = {
    created_at?: string;
    database_id?: number;
    entity_types?: Array<'table' | 'model' | 'question' | 'dashboard' | 'metric' | 'database'>;
    last_edited_at?: string;
    limit?: number;
    semantic_queries?: Array<string>;
    term_queries?: Array<string>;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiSearchResult = {
    structured_output: {
        data: Array<MetabaseEnterpriseMetabotV3ToolsApiSearchResultItem>;
        total_count: number;
    };
} | {
    output: string;
};

/**
 * Unified schema for search result items.
 */
export type MetabaseEnterpriseMetabotV3ToolsApiSearchResultItem = {
    collection?: {
        authority_level?: string;
        name?: string;
    };
    id: number;
    name: string;
    verified?: boolean;
    database_id?: number;
    updated_at?: string;
    display_name?: string;
    type: 'table' | 'model' | 'dashboard' | 'question' | 'metric' | 'database';
    database_schema?: string;
    created_at?: string;
    description?: string;
};

export type MetabaseEnterpriseMetabotV3ToolsApiStatistics = {
    values?: MetabaseEnterpriseMetabotV3ToolsApiFieldValues;
    min?: number;
    percent_url?: MetabaseEnterpriseMetabotV3ToolsApiProportion;
    average_length?: number;
    earliest?: string;
    q1?: number;
    max?: number;
    distinct_count?: MetabaseEnterpriseMetabotV3ToolsApiCount;
    percent_state?: MetabaseEnterpriseMetabotV3ToolsApiProportion;
    percent_null?: MetabaseEnterpriseMetabotV3ToolsApiProportion;
    avg?: number;
    sd?: number;
    percent_email?: MetabaseEnterpriseMetabotV3ToolsApiProportion;
    latest?: string;
    q3?: number;
    percent_json?: MetabaseEnterpriseMetabotV3ToolsApiProportion;
};

export type MetabaseEnterpriseMetabotV3ToolsApiStringFilter = {
    field_id: string;
    operation: 'equals' | 'not-equals' | 'string-equals' | 'string-not-equals' | 'string-contains' | 'string-not-contains' | 'string-starts-with' | 'string-ends-with';
    value: string;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiSubscriptionSchedule = ({
    frequency: 'hourly';
} | {
    frequency: 'daily';
    hour: number;
} | {
    day_of_week: 'sunday' | 'monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday';
    frequency: 'weekly';
    hour: number;
} | {
    day_of_month: 'first-calendar-day' | 'middle-of-month' | 'last-calendar-day' | 'first-sunday' | 'first-monday' | 'first-tuesday' | 'first-wednesday' | 'first-thursday' | 'first-friday' | 'first-saturday' | 'last-sunday' | 'last-monday' | 'last-tuesday' | 'last-wednesday' | 'last-thursday' | 'last-friday' | 'last-saturday';
    frequency: 'monthly';
    hour: number;
}) & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiTableResult = {
    id: number;
    name: string;
    database_id: number;
    display_name: string;
    type: 'model' | 'table';
    fields: MetabaseEnterpriseMetabotV3ToolsApiColumns;
    database_schema?: string;
    metrics?: Array<MetabaseEnterpriseMetabotV3ToolsApiBasicMetric>;
    description?: string;
};

export type MetabaseEnterpriseMetabotV3ToolsApiTemporalExtractionFilter = {
    field_id: string;
    operation: 'year-equals' | 'year-not-equals' | 'quarter-equals' | 'quarter-not-equals' | 'month-equals' | 'month-not-equals' | 'day-of-week-equals' | 'day-of-week-not-equals' | 'hour-equals' | 'hour-not-equals' | 'minute-equals' | 'minute-not-equals' | 'second-equals' | 'second-not-equals';
    value: number;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiTemporalFilter = {
    bucket?: MetabaseEnterpriseMetabotV3ToolsApiBucket;
    field_id: string;
    operation: 'equals' | 'not-equals' | 'greater-than' | 'greater-than-or-equal' | 'less-than' | 'less-than-or-equal' | 'date-equals' | 'date-not-equals' | 'date-before' | 'date-on-or-before' | 'date-after' | 'date-on-or-after';
    value: string | number;
} & {
    [key: string]: unknown;
};

export type MetabaseEnterpriseMetabotV3ToolsApiToolRequest = {
    /**
     * value must be a valid UUID.
     */
    conversation_id: string;
};

export type MetabaseEnterprisePermissionDebugImplGroupId = number;

export type MetabaseEnterprisePermissionDebugImplPermDebugInfo = {
    data: {
        [key: string]: unknown;
    };
    decision: 'allow' | 'denied' | 'limited';
    message: Array<string>;
    'model-id': string;
    'model-type': 'card' | 'invalid';
    segment: Array<'sandboxed' | 'impersonated' | 'routed'>;
    suggestions: {
        [key: string]: string;
    };
};

export const MetabaseEnterpriseTransformsApiRunTrigger = {
    NONE: 'none',
    GLOBAL_SCHEDULE: 'global-schedule'
} as const;

export type MetabaseEnterpriseTransformsApiRunTrigger = typeof MetabaseEnterpriseTransformsApiRunTrigger[keyof typeof MetabaseEnterpriseTransformsApiRunTrigger];

export type MetabaseEnterpriseTransformsApiTransformSource = {
    query: {
        database: number;
    };
    type: 'query';
} | {
    body: string;
    'source-database'?: number;
    'source-tables': {
        [key: string]: number;
    };
    type: 'python';
};

export type MetabaseEnterpriseTransformsApiTransformTarget = {
    database?: number;
    name: string;
    schema?: string | null;
    type: 'table';
};

/**
 * Schema for inserting a new Action (REST API or internally).
 */
export type MetabaseActionsSchemaActionForInsert = {
    archived?: boolean;
    description?: string;
    model_id: MetabaseLibSchemaIdCard;
    name: string;
    parameter_mappings?: MetabaseParametersSchemaParameterMappings;
    parameters?: MetabaseParametersSchemaParameters;
    type: MetabaseActionsSchemaType;
    visualization_settings?: {
        [key: string]: unknown;
    };
} & (MetabaseActionsSchemaHttpAction | MetabaseActionsSchemaImplicitAction | MetabaseActionsSchemaQueryAction | {
    [key: string]: unknown;
});

/**
 * Schema for updating an Action (REST API or internally).
 */
export type MetabaseActionsSchemaActionForUpdate = {
    visualization_settings?: {
        [key: string]: unknown;
    };
    parameter_mappings?: MetabaseParametersSchemaParameterMappings;
    id?: MetabaseActionsSchemaId;
    name?: string;
    archived?: boolean;
    type?: MetabaseActionsSchemaType;
    model_id?: MetabaseLibSchemaIdCard;
    parameters?: MetabaseParametersSchemaParameters;
    description?: string;
} & (MetabaseActionsSchemaHttpAction | MetabaseActionsSchemaImplicitAction | MetabaseActionsSchemaQueryAction | {
    [key: string]: unknown;
});

/**
 * must be a valid json-query, something like '.item.title'
 */
export type MetabaseActionsSchemaHttpActionJsonQuery = string;

export type MetabaseActionsSchemaHttpActionTemplate = {
    body?: string;
    headers?: string;
    method: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';
    parameters?: MetabaseParametersSchemaParameters;
    url: string;
};

/**
 * Unsupported implicit action kind
 */
export const MetabaseActionsSchemaImplicitActionKind = {
    ROW_CREATE: 'row/create',
    ROW_UPDATE: 'row/update',
    ROW_DELETE: 'row/delete',
    BULK_CREATE: 'bulk/create',
    BULK_UPDATE: 'bulk/update',
    BULK_DELETE: 'bulk/delete'
} as const;

/**
 * Unsupported implicit action kind
 */
export type MetabaseActionsSchemaImplicitActionKind = typeof MetabaseActionsSchemaImplicitActionKind[keyof typeof MetabaseActionsSchemaImplicitActionKind];

/**
 * An Action as it should appear when we `SELECT` it from the app DB.
 */
export type MetabaseActionsSchemaAction = {
    visualization_settings?: {
        [key: string]: unknown;
    };
    parameter_mappings?: MetabaseParametersSchemaParameterMappings;
    id: MetabaseActionsSchemaId;
    made_public_by_id?: MetabaseLibSchemaIdUser;
    name?: string;
    archived?: boolean;
    updated_at?: unknown;
    type?: MetabaseActionsSchemaType;
    created_at?: unknown;
    /**
     * value must be a valid UUID.
     */
    public_uuid?: string;
    model_id?: MetabaseLibSchemaIdCard;
    parameters?: MetabaseParametersSchemaParameters;
    creator_id?: MetabaseLibSchemaIdUser;
    description?: string;
} & (MetabaseActionsSchemaHttpAction | MetabaseActionsSchemaImplicitAction | MetabaseActionsSchemaQueryAction | {
    [key: string]: unknown;
});

export type MetabaseActionsSchemaHttpAction = {
    error_handle?: MetabaseActionsSchemaHttpActionJsonQuery;
    response_handle?: MetabaseActionsSchemaHttpActionJsonQuery;
    template?: MetabaseActionsSchemaHttpActionTemplate;
};

/**
 * Valid Action ID
 */
export type MetabaseActionsSchemaId = number;

export type MetabaseActionsSchemaImplicitAction = {
    kind?: MetabaseActionsSchemaImplicitActionKind;
};

export type MetabaseActionsSchemaQueryAction = {
    database_id?: MetabaseLibSchemaIdDatabase;
    dataset_query?: MetabaseQueriesSchemaQuery;
};

/**
 * Unsupported action type
 */
export const MetabaseActionsSchemaType = {
    HTTP: 'http',
    IMPLICIT: 'implicit',
    QUERY: 'query'
} as const;

/**
 * Unsupported action type
 */
export type MetabaseActionsSchemaType = typeof MetabaseActionsSchemaType[keyof typeof MetabaseActionsSchemaType];

export type MetabaseActionsTypesScopeRaw = {
    /**
     * value must be an integer greater than zero.
     */
    'dashboard-id': number;
} | {
    /**
     * value must be an integer greater than zero.
     */
    'dashcard-id': number;
} | {
    /**
     * value must be an integer greater than zero.
     */
    'card-id': number;
} | {
    /**
     * value must be an integer greater than zero.
     */
    'model-id': number;
} | {
    /**
     * value must be an integer greater than zero.
     */
    'table-id': number;
} | {
    /**
     * value must be an integer greater than zero.
     */
    'webhook-id': number;
} | {
    unknown: 'model-action';
};

/**
 * value must be an array of valid results column metadata maps.
 */
export type MetabaseAnalyzeQueryResultsResultsMetadata = Array<MetabaseLegacyMbqlSchemaLegacyColumnMetadata>;

/**
 * Masked string like 'mb_1234**********'.
 */
export type MetabaseApiKeysSchemaKeyMasked = MetabaseApiKeysSchemaKeyRaw & string;

/**
 * Unhashed string of the form 'mb_<base-64-bytes>'.
 */
export type MetabaseApiKeysSchemaKeyRaw = string;

/**
 * value must be an integer greater than zero.
 */
export type MetabaseApiKeysSchemaId = number;

export type MetabaseApiKeysSchemaName = string;

/**
 * Prefix string of an API Key, suitable for passing around unmasked. This must be unique.
 */
export type MetabaseApiKeysSchemaPrefix = string;

export type MetabaseCacheApiCacheStrategyBaseEe = {
    type: 'nocache' | 'ttl' | 'duration' | 'schedule';
};

export type MetabaseCacheApiCacheStrategyBaseOss = {
    type: 'nocache' | 'ttl';
};

/**
 * Schema for a caching strategy in EE when we have an premium token with `:cache-granular-controls`.
 */
export type MetabaseCacheApiCacheStrategyEe = MetabaseCacheApiCacheStrategyBaseEe & (MetabaseCacheApiCacheStrategyNocache | MetabaseCacheApiCacheStrategyTtl | MetabaseCacheApiCacheStrategyEeDuration | MetabaseCacheApiCacheStrategyEeSchedule);

export type MetabaseCacheApiCacheStrategyEeDuration = {
    /**
     * value must be an integer greater than zero.
     */
    duration: number;
    refresh_automatically?: boolean;
    type: 'duration';
    unit: 'hours' | 'minutes' | 'seconds' | 'days';
};

export type MetabaseCacheApiCacheStrategyEeSchedule = {
    refresh_automatically?: boolean;
    schedule: MetabaseUtilCronCronScheduleString;
    type: 'schedule';
};

export type MetabaseCacheApiCacheStrategyNocache = {
    type: 'nocache';
};

/**
 * Schema for a caching strategy (OSS)
 */
export type MetabaseCacheApiCacheStrategyOss = MetabaseCacheApiCacheStrategyBaseOss & (MetabaseCacheApiCacheStrategyNocache | MetabaseCacheApiCacheStrategyTtl);

export type MetabaseCacheApiCacheStrategyTtl = {
    /**
     * value must be an integer greater or equal to than zero.
     */
    min_duration_ms: number;
    /**
     * value must be an integer greater than zero.
     */
    multiplier: number;
    type: 'ttl';
};

export type MetabaseCacheApiCacheStrategy = MetabaseCacheApiCacheStrategyEe | MetabaseCacheApiCacheStrategyOss;

/**
 * Channel schema.
 */
export type MetabaseChannelModelsChannelChannel = {
    active?: boolean;
    description?: string;
    details: {
        [key: string]: unknown;
    };
    name: string;
    type: string;
};

/**
 * Channel Template schema.
 */
export type MetabaseChannelModelsChannelChannelTemplate = {
    channel_type: unknown;
    details: MetabaseChannelModelsChannelChannelTemplateEmailDetails;
} | unknown;

export type MetabaseChannelModelsChannelChannelTemplateEmailDetails = {
    path: string;
    'recipient-type'?: 'cc' | 'bcc';
    subject: string;
    type: 'email/handlebars-resource' | 'email/handlebars-text';
} | {
    body: string;
    'recipient-type'?: 'cc' | 'bcc';
    subject: string;
    type: 'email/handlebars-resource' | 'email/handlebars-text';
};

export type MetabaseCollectionsApiDashboardQuestionCandidate = {
    description?: string;
    id: number;
    name: string;
    sole_dashboard_info: {
        description?: string;
        id: number;
        name: string;
    };
};

export type MetabaseCollectionsApiDashboardQuestionCandidatesResponse = {
    data: Array<MetabaseCollectionsApiDashboardQuestionCandidate>;
    total: number;
};

export type MetabaseCollectionsApiMoveDashboardQuestionCandidatesResponse = {
    moved: Array<number>;
};

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchema___ = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchema__ = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchema__2 = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchema = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchema__3 = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchema___2 = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchema__4 = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchema__5 = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchema___3 = unknown;

export type MetabaseLegacyMbqlSchemaAddable = MetabaseLegacyMbqlSchemaDateTimeExpressionArg | MetabaseLegacyMbqlSchemaInterval | MetabaseLegacyMbqlSchemaNumericExpressionArg;

export type MetabaseLegacyMbqlSchemaAggregation = MetabaseLegacyMbqlSchemaAggregationOptions | MetabaseLegacyMbqlSchemaUnnamedAggregation;

export type MetabaseLegacyMbqlSchemaBooleanExpression = MetabaseLegacyMbqlSchemaAnd | MetabaseLegacyMbqlSchemaOr | MetabaseLegacyMbqlSchemaNot | MetabaseLegacyMbqlSchema__4 | MetabaseLegacyMbqlSchema___ | MetabaseLegacyMbqlSchema__3 | MetabaseLegacyMbqlSchema__5 | MetabaseLegacyMbqlSchema___2 | MetabaseLegacyMbqlSchema___3 | MetabaseLegacyMbqlSchemaBetween | MetabaseLegacyMbqlSchemaStartsWith | MetabaseLegacyMbqlSchemaEndsWith | MetabaseLegacyMbqlSchemaContains | MetabaseLegacyMbqlSchemaIn | MetabaseLegacyMbqlSchemaNotIn | MetabaseLegacyMbqlSchemaDoesNotContain | MetabaseLegacyMbqlSchemaInside | MetabaseLegacyMbqlSchemaIsEmpty | MetabaseLegacyMbqlSchemaNotEmpty | MetabaseLegacyMbqlSchemaIsNull | MetabaseLegacyMbqlSchemaNotNull | MetabaseLegacyMbqlSchemaRelativeTimeInterval | MetabaseLegacyMbqlSchemaTimeInterval | MetabaseLegacyMbqlSchemaDuring;

/**
 * Schema for a valid `:database` ID, in the top-level 'outer' query. Either a positive integer (referring to an
 * actual Database), or the saved questions virtual ID, which is a placeholder used for queries using the
 * `:source-table "card__id"` shorthand for a source query resolved by middleware (since clients might not know the
 * actual DB for that source query.)
 */
export type MetabaseLegacyMbqlSchemaDatabaseId = MetabaseLibSchemaIdSavedQuestionsVirtualDatabase | MetabaseLibSchemaIdDatabase;

/**
 * Schema for a valid date or datetime literal.
 */
export type MetabaseLegacyMbqlSchemaDateOrDatetimeLiteral = MetabaseLegacyMbqlSchemaRelativeDatetime | MetabaseLegacyMbqlSchemaAbsoluteDatetime | MetabaseLibSchemaLiteralDatetime | MetabaseLibSchemaLiteralDate;

export type MetabaseLegacyMbqlSchemaDateTimeExpressionArg = MetabaseLegacyMbqlSchemaAggregation | MetabaseLegacyMbqlSchemaValue | MetabaseLegacyMbqlSchemaDatetimeExpression | MetabaseLegacyMbqlSchemaDateOrDatetimeLiteral | MetabaseLegacyMbqlSchemaFieldOrExpressionRef;

/**
 * Valid unit for *datetime* bucketing.
 */
export const MetabaseLegacyMbqlSchemaDateTimeUnit = {
    QUARTER: 'quarter',
    DAY: 'day',
    HOUR: 'hour',
    WEEK: 'week',
    SECOND: 'second',
    DEFAULT: 'default',
    DAY_OF_WEEK: 'day-of-week',
    HOUR_OF_DAY: 'hour-of-day',
    MONTH: 'month',
    MONTH_OF_YEAR: 'month-of-year',
    DAY_OF_MONTH: 'day-of-month',
    YEAR: 'year',
    DAY_OF_YEAR: 'day-of-year',
    MILLISECOND: 'millisecond',
    YEAR_OF_ERA: 'year-of-era',
    WEEK_OF_YEAR: 'week-of-year',
    QUARTER_OF_YEAR: 'quarter-of-year',
    MINUTE_OF_HOUR: 'minute-of-hour',
    MINUTE: 'minute'
} as const;

/**
 * Valid unit for *datetime* bucketing.
 */
export type MetabaseLegacyMbqlSchemaDateTimeUnit = typeof MetabaseLegacyMbqlSchemaDateTimeUnit[keyof typeof MetabaseLegacyMbqlSchemaDateTimeUnit];

/**
 * Valid unit for date bucketing.
 */
export const MetabaseLegacyMbqlSchemaDateUnit = {
    QUARTER: 'quarter',
    DAY: 'day',
    WEEK: 'week',
    DEFAULT: 'default',
    DAY_OF_WEEK: 'day-of-week',
    MONTH: 'month',
    MONTH_OF_YEAR: 'month-of-year',
    DAY_OF_MONTH: 'day-of-month',
    YEAR: 'year',
    DAY_OF_YEAR: 'day-of-year',
    YEAR_OF_ERA: 'year-of-era',
    WEEK_OF_YEAR: 'week-of-year',
    QUARTER_OF_YEAR: 'quarter-of-year'
} as const;

/**
 * Valid unit for date bucketing.
 */
export type MetabaseLegacyMbqlSchemaDateUnit = typeof MetabaseLegacyMbqlSchemaDateUnit[keyof typeof MetabaseLegacyMbqlSchemaDateUnit];

/**
 * Valid units for a datetime-diff clause.
 */
export const MetabaseLegacyMbqlSchemaDatetimeDiffUnit = {
    SECOND: 'second',
    MINUTE: 'minute',
    HOUR: 'hour',
    DAY: 'day',
    WEEK: 'week',
    MONTH: 'month',
    QUARTER: 'quarter',
    YEAR: 'year'
} as const;

/**
 * Valid units for a datetime-diff clause.
 */
export type MetabaseLegacyMbqlSchemaDatetimeDiffUnit = typeof MetabaseLegacyMbqlSchemaDatetimeDiffUnit[keyof typeof MetabaseLegacyMbqlSchemaDatetimeDiffUnit];

export type MetabaseLegacyMbqlSchemaDatetimeExpression = MetabaseLegacyMbqlSchema__2 | MetabaseLegacyMbqlSchemaDatetimeAdd | MetabaseLegacyMbqlSchemaDatetimeSubtract | MetabaseLegacyMbqlSchemaConvertTimezone | MetabaseLegacyMbqlSchemaNow | MetabaseLegacyMbqlSchemaDate | MetabaseLegacyMbqlSchemaDatetime | MetabaseLegacyMbqlSchemaToday;

export type MetabaseLegacyMbqlSchemaEmptyable = MetabaseLegacyMbqlSchemaStringExpressionArg | MetabaseLegacyMbqlSchemaFieldOrExpressionRef;

export type MetabaseLegacyMbqlSchemaEqualityComparable = boolean | number | string | MetabaseLegacyMbqlSchemaTemporalLiteral | MetabaseLegacyMbqlSchemaRelativeDatetime | MetabaseLegacyMbqlSchemaFieldOrExpressionRef | MetabaseLegacyMbqlSchemaExpressionArg | MetabaseLegacyMbqlSchemaValue;

export type MetabaseLegacyMbqlSchemaExpressionArg = number | boolean | MetabaseLegacyMbqlSchemaBooleanExpression | MetabaseLegacyMbqlSchemaNumericExpression | MetabaseLegacyMbqlSchemaDatetimeExpression | MetabaseLegacyMbqlSchemaAggregation | string | MetabaseLegacyMbqlSchemaStringExpression | MetabaseLegacyMbqlSchemaValue | MetabaseLegacyMbqlSchemaFieldOrExpressionRef;

/**
 * Valid modes to extract weeks.
 */
export const MetabaseLegacyMbqlSchemaExtractWeekMode = {
    ISO: 'iso',
    US: 'us',
    INSTANCE: 'instance'
} as const;

/**
 * Valid modes to extract weeks.
 */
export type MetabaseLegacyMbqlSchemaExtractWeekMode = typeof MetabaseLegacyMbqlSchemaExtractWeekMode[keyof typeof MetabaseLegacyMbqlSchemaExtractWeekMode];

export type MetabaseLegacyMbqlSchemaFieldOptions = {
    'base-type'?: MetabaseLibSchemaCommonBaseType;
    /**
     * Replaces `binning-strategy`.
     *
     * Using binning requires the driver to support the `:binning` feature.
     */
    binning?: MetabaseLibSchemaBinningBinning;
    'inherited-temporal-unit'?: MetabaseLegacyMbqlSchemaDateTimeUnit;
    /**
     * Replaces `joined-field`.
     *
     * `:join-alias` is used to refer to a FieldOrExpression from a different Table/nested query that you are EXPLICITLY
     * JOINING against.
     */
    'join-alias'?: MetabaseLibSchemaJoinAlias;
    /**
     * Replaces `fk->`.
     *
     * `:source-field` is used to refer to a FieldOrExpression from a different Table you would like IMPLICITLY JOINED to
     * the source table.
     *
     * If both `:source-field` and `:join-alias` are supplied, `:join-alias` should be used to perform the join;
     * `:source-field` should be for information purposes only.
     */
    'source-field'?: MetabaseLibSchemaIdField;
    /**
     * The join alias of the source field used for an implicit join.
     */
    'source-field-join-alias'?: MetabaseLibSchemaCommonNonBlankString;
    /**
     * The name or desired alias of the field used for an implicit join.
     */
    'source-field-name'?: MetabaseLibSchemaCommonNonBlankString;
    /**
     * `:temporal-unit` is used to specify DATE BUCKETING for a FieldOrExpression that represents a moment in time of
     * some sort.
     *
     * There is no requirement that all `:type/Temporal` derived FieldOrExpressions specify a `:temporal-unit`, but for
     * legacy reasons `:field` clauses that refer to `:type/DateTime` FieldOrExpressions will be automatically "bucketed"
     * in the `:breakout` and `:filter` clauses, but nowhere else. Auto-bucketing only applies to `:filter` clauses when
     * values for comparison are `yyyy-MM-dd` date strings. See the `auto-bucket-datetimes` middleware for more details.
     * `:field` clauses elsewhere will not be automatically bucketed, so drivers still need to make sure they do any
     * special datetime handling for plain `:field` clauses when their FieldOrExpression derives from `:type/DateTime`.
     */
    'temporal-unit'?: MetabaseLegacyMbqlSchemaDateTimeUnit;
} & MetabaseLegacyMbqlSchemaValidateTemporalUnit & MetabaseLegacyMbqlSchemaNoBinningOptionsAtTopLevel;

/**
 * Schema for anything that is accepted as a top-level expression definition, either an arithmetic expression such as a
 * `:+` clause or a `:field` or `:value` clause.
 */
export type MetabaseLegacyMbqlSchemaFieldOrExpressionDef = MetabaseLegacyMbqlSchemaNumericExpression | MetabaseLegacyMbqlSchemaStringExpression | MetabaseLegacyMbqlSchemaBooleanExpression | MetabaseLegacyMbqlSchemaDatetimeExpression | MetabaseLegacyMbqlSchemaCase | MetabaseLegacyMbqlSchemaIf | MetabaseLegacyMbqlSchemaOffset | MetabaseLegacyMbqlSchemaValue | MetabaseLegacyMbqlSchemaFieldOrExpressionRef;

export type MetabaseLegacyMbqlSchemaFields = Array<MetabaseLegacyMbqlSchemaFieldOrExpressionRef> & MetabaseLegacyMbqlSchemaHelpersDistinct;

export type MetabaseLegacyMbqlSchemaFilter = MetabaseLegacyMbqlSchemaDatetimeExpression | MetabaseLegacyMbqlSchemaNumericExpression | MetabaseLegacyMbqlSchemaStringExpression | MetabaseLegacyMbqlSchemaBooleanExpression | MetabaseLegacyMbqlSchemaValue | MetabaseLegacyMbqlSchemaSegment | MetabaseLegacyMbqlSchemaFieldOrExpressionRef;

export type MetabaseLegacyMbqlSchemaIntGreaterThanZeroOrNumericExpression = number | MetabaseLegacyMbqlSchemaNumericExpression;

/**
 * Perform the equivalent of a SQL `JOIN` with another Table or nested `:source-query`. JOINs are either explicitly
 * specified in the incoming query, or implicitly generated when one uses a `:field` clause with `:source-field`.
 *
 * In the top-level query, you can reference Fields from the joined table or nested query by including `:source-field`
 * in the `:field` options (known as implicit joins); for explicit joins, you *must* specify `:join-alias` yourself; in
 * the `:field` options, e.g.
 *
 * ;; for joins against other Tables/MBQL source queries
 * [:field 1 {:join-alias "my_join_alias"}]
 *
 * ;; for joins against native queries
 * [:field "my_field" {:base-type :field/Integer, :join-alias "my_join_alias"}]
 */
export type MetabaseLegacyMbqlSchemaJoin = {
    /**
     * The name used to alias the joined table or query. This is usually generated automatically and generally looks
     * like `table__via__field`. You can specify this yourself if you need to reference a joined field with a `:join-alias`
     * in the options.
     *
     * Driver implementations: This is guaranteed to be present after pre-processing.
     */
    alias?: MetabaseLibSchemaJoinAlias;
    /**
     * The condition on which to JOIN. Can be anything that is a valid `:filter` clause. For automatically-generated
     * JOINs this is usually something like
     *
     * [:= <source-table-fk-field> [:field <dest-table-pk-field> {:join-alias <join-table-alias>}]]
     */
    condition: MetabaseLegacyMbqlSchemaFilter;
    /**
     * The Fields from this join to include in parent-level results. This can be either `:none`, `:all`, or a sequence
     * of `:field` clauses.
     *
     * * `:none`: no Fields from the joined table or nested query are included (unless indirectly included by breakouts or
     * other clauses). This is the default, and what is used for automatically-generated joins.
     *
     * * `:all`: will include all of the Field from the joined table or query
     *
     * * a sequence of Field clauses: include only the Fields specified. Valid clauses are the same as the top-level
     * `:fields` clause. This should be non-empty and all elements should be distinct. The normalizer will automatically
     * remove duplicate fields for you, and replace empty clauses with `:none`.
     *
     * Driver implementations: you can ignore this clause. Relevant fields will be added to top-level `:fields` clause with
     * appropriate aliases.
     */
    fields?: 'all' | 'none' | MetabaseLegacyMbqlSchemaFields;
    /**
     * Mostly used only internally. When a join is implicitly generated via a `:field` clause with
     * `:source-field`, the ID of the foreign key field in the source Table will be recorded here. This information is used
     * to add `fk_field_id` information to the `:cols` in the query results, and also for drill-thru. When generating
     * explicit joins by hand you can usually omit this information, altho it doesn't hurt to include it if you know it.
     *
     * Don't set this information yourself. It will have no effect.
     */
    'fk-field-id'?: MetabaseLibSchemaIdField;
    /**
     * Metadata about the source query being used, if pulled in from a Card via the
     * `:source-table "card__id"` syntax. added automatically by the `resolve-card-id-source-tables` middleware.
     */
    'source-metadata'?: Array<MetabaseLegacyMbqlSchemaLegacyColumnMetadata>;
    'source-query'?: MetabaseLegacyMbqlSchemaSourceQuery;
    /**
     * *What* to JOIN. Self-joins can be done by using the same `:source-table` as in the query where
     * this is specified. YOU MUST SUPPLY EITHER `:source-table` OR `:source-query`, BUT NOT BOTH!
     */
    'source-table'?: MetabaseLibSchemaIdTable | string;
    /**
     * Defaults to `:left-join`; used for all automatically-generated JOINs
     *
     * Driver implementations: this is guaranteed to be present after pre-processing.
     */
    strategy?: 'full-join' | 'right-join' | 'left-join' | 'inner-join';
} & unknown;

/**
 * Schema for a valid sequence of `Join`s. Must be a non-empty sequence, and `:alias`, if specified, must be unique.
 */
export type MetabaseLegacyMbqlSchemaJoins = Array<MetabaseLegacyMbqlSchemaJoin>;

export type MetabaseLegacyMbqlSchemaMbqlQuery = {
    breakout?: Array<MetabaseLegacyMbqlSchemaFieldOrExpressionRef>;
    /**
     * Info about the columns of the source query. Added in automatically by middleware. This metadata is
     * primarily used to let power things like binning when used with Field Literals instead of normal Fields.
     */
    'source-metadata'?: Array<MetabaseLegacyMbqlSchemaLegacyColumnMetadata>;
    'source-query'?: MetabaseLegacyMbqlSchemaSourceQuery;
    limit?: MetabaseLibSchemaCommonIntGreaterThanOrEqualToZero;
    filter?: MetabaseLegacyMbqlSchemaFilter;
    joins?: MetabaseLegacyMbqlSchemaJoins;
    aggregation?: Array<MetabaseLegacyMbqlSchemaAggregation>;
    fields?: MetabaseLegacyMbqlSchemaFields;
    'source-table'?: MetabaseLibSchemaIdTable | string;
    'order-by'?: MetabaseLegacyMbqlSchemaOrderBys;
    page?: MetabaseLibSchemaPage;
    expressions?: {
        [key: string]: MetabaseLegacyMbqlSchemaFieldOrExpressionDef;
    };
} & unknown;

export type MetabaseLegacyMbqlSchemaNativeSourceQuery = {
    collection?: MetabaseLibSchemaCommonNonBlankString;
    native: unknown;
    'template-tags'?: MetabaseLegacyMbqlSchemaTemplateTagMap;
} & unknown;

export type MetabaseLegacyMbqlSchemaNumericExpression = MetabaseLegacyMbqlSchema__2 | MetabaseLegacyMbqlSchema | _heyapi_338_ | MetabaseLegacyMbqlSchema__ | MetabaseLegacyMbqlSchemaCoalesce | MetabaseLegacyMbqlSchemaLength | MetabaseLegacyMbqlSchemaFloor | MetabaseLegacyMbqlSchemaCeil | MetabaseLegacyMbqlSchemaRound | MetabaseLegacyMbqlSchemaAbs | MetabaseLegacyMbqlSchemaPower | MetabaseLegacyMbqlSchemaSqrt | MetabaseLegacyMbqlSchemaExp | MetabaseLegacyMbqlSchemaLog | MetabaseLegacyMbqlSchemaCase | MetabaseLegacyMbqlSchemaIf | MetabaseLegacyMbqlSchemaDatetimeDiff | MetabaseLegacyMbqlSchemaInteger | MetabaseLegacyMbqlSchemaFloat | MetabaseLegacyMbqlSchemaTemporalExtract | MetabaseLegacyMbqlSchemaGetYear | MetabaseLegacyMbqlSchemaGetQuarter | MetabaseLegacyMbqlSchemaGetMonth | MetabaseLegacyMbqlSchemaGetWeek | MetabaseLegacyMbqlSchemaGetDay | MetabaseLegacyMbqlSchemaGetDayOfWeek | MetabaseLegacyMbqlSchemaGetHour | MetabaseLegacyMbqlSchemaGetMinute | MetabaseLegacyMbqlSchemaGetSecond | MetabaseLegacyMbqlSchemaAggregation2;

export type MetabaseLegacyMbqlSchemaNumericExpressionArg = number | MetabaseLegacyMbqlSchemaNumericExpression | MetabaseLegacyMbqlSchemaAggregation | MetabaseLegacyMbqlSchemaValue | MetabaseLegacyMbqlSchemaReference;

/**
 * Schema for an `order-by` clause subclause.
 */
export type MetabaseLegacyMbqlSchemaOrderBy = MetabaseLegacyMbqlSchemaAsc | MetabaseLegacyMbqlSchemaDesc;

export type MetabaseLegacyMbqlSchemaOrderBys = Array<MetabaseLegacyMbqlSchemaOrderBy> & MetabaseLegacyMbqlSchemaHelpersDistinct;

export type MetabaseLegacyMbqlSchemaOrderComparable = MetabaseLegacyMbqlSchemaValue | number | string | MetabaseLegacyMbqlSchemaTemporalLiteral | MetabaseLegacyMbqlSchemaExpressionArg | MetabaseLegacyMbqlSchemaRelativeDatetime | MetabaseLegacyMbqlSchemaFieldOrExpressionRef;

export type MetabaseLegacyMbqlSchemaQuery = {
    'update-row'?: MetabaseLibSchemaActionsRow;
    settings?: MetabaseLibSchemaSettingsSettings;
    constraints?: MetabaseLibSchemaConstraintsConstraints;
    query?: MetabaseLegacyMbqlSchemaMbqlQuery;
    native?: {
        collection?: MetabaseLibSchemaCommonNonBlankString;
        query: unknown;
        'template-tags'?: MetabaseLegacyMbqlSchemaTemplateTagMap;
    } & unknown;
    /**
     * Used when recording info about this run in the QueryExecution log; things like context query was
     * ran in and User who ran it.
     */
    info?: MetabaseLibSchemaInfoInfo;
    middleware?: MetabaseLibSchemaMiddlewareOptionsMiddlewareOptions;
    database?: MetabaseLegacyMbqlSchemaDatabaseId;
    /**
     * Type of query. `:query` = MBQL; `:native` = native.
     */
    type: 'query' | 'native';
    parameters?: MetabaseLibSchemaParameterParameters;
    'create-row'?: MetabaseLibSchemaActionsRow;
} & MetabaseLegacyMbqlSchemaCheckKeysForQueryType & MetabaseLegacyMbqlSchemaCheckQueryDoesNotHaveSourceMetadata & unknown;

export type MetabaseLegacyMbqlSchemaReference = MetabaseLegacyMbqlSchemaAggregation2 | MetabaseLegacyMbqlSchemaExpression | MetabaseLegacyMbqlSchemaField;

export const MetabaseLegacyMbqlSchemaRelativeDatetimeUnit = {
    DEFAULT: 'default',
    MINUTE: 'minute',
    HOUR: 'hour',
    DAY: 'day',
    WEEK: 'week',
    MONTH: 'month',
    QUARTER: 'quarter',
    YEAR: 'year'
} as const;

export type MetabaseLegacyMbqlSchemaRelativeDatetimeUnit = typeof MetabaseLegacyMbqlSchemaRelativeDatetimeUnit[keyof typeof MetabaseLegacyMbqlSchemaRelativeDatetimeUnit];

export type MetabaseLegacyMbqlSchemaSourceQuery = MetabaseLegacyMbqlSchemaNativeSourceQuery | MetabaseLegacyMbqlSchemaMbqlQuery;

export type MetabaseLegacyMbqlSchemaStringExpression = MetabaseLegacyMbqlSchemaSubstring | MetabaseLegacyMbqlSchemaTrim | MetabaseLegacyMbqlSchemaLtrim | MetabaseLegacyMbqlSchemaRtrim | MetabaseLegacyMbqlSchemaReplace | MetabaseLegacyMbqlSchemaLower | MetabaseLegacyMbqlSchemaUpper | MetabaseLegacyMbqlSchemaConcat | MetabaseLegacyMbqlSchemaRegexMatchFirst | MetabaseLegacyMbqlSchemaCoalesce | MetabaseLegacyMbqlSchemaCase | MetabaseLegacyMbqlSchemaIf | MetabaseLegacyMbqlSchemaHost | MetabaseLegacyMbqlSchemaDomain | MetabaseLegacyMbqlSchemaSubdomain | MetabaseLegacyMbqlSchemaPath | MetabaseLegacyMbqlSchemaMonthName | MetabaseLegacyMbqlSchemaQuarterName | MetabaseLegacyMbqlSchemaDayName | MetabaseLegacyMbqlSchemaText | MetabaseLegacyMbqlSchemaSplitPart;

export type MetabaseLegacyMbqlSchemaStringExpressionArg = string | MetabaseLegacyMbqlSchemaStringExpression | MetabaseLegacyMbqlSchemaValue | MetabaseLegacyMbqlSchemaFieldOrExpressionRef;

/**
 * Schema for a template tag as specified in a native query. There are four types of template tags, differentiated by
 * `:type`.
 *
 * Template tags are used to specify {{placeholders}} in native queries that are replaced with some sort of value when
 * the query itself runs. There are four basic types of template tag for native queries:
 *
 * 1. Field filters, which are used like
 *
 * SELECT * FROM table WHERE {{field_filter}}
 *
 * These reference specific Fields and are replaced with entire conditions, e.g. `some_field > 1000`
 *
 * 2. Raw values, which are used like
 *
 * SELECT * FROM table WHERE my_field = {{x}}
 *
 * These are replaced with raw values.
 *
 * 3. Native query snippets, which might be used like
 *
 * SELECT * FROM ({{snippet: orders}}) source
 *
 * These are replaced with `NativeQuerySnippet`s from the application database.
 *
 * 4. Source query Card IDs, which are used like
 *
 * SELECT * FROM ({{#123}}) source
 *
 * These are replaced with the query from the Card with that ID.
 *
 * Field filters and raw values usually have their value specified by `:parameters`.
 */
export type MetabaseLegacyMbqlSchemaTemplateTag = MetabaseLegacyMbqlSchemaTemplateTag_FieldFilter | MetabaseLegacyMbqlSchemaTemplateTag_Snippet | MetabaseLegacyMbqlSchemaTemplateTag_SourceQuery | MetabaseLegacyMbqlSchemaTemplateTag_TemporalUnit | MetabaseLegacyMbqlSchemaTemplateTag_RawValue;

/**
 * Schema for a field filter template tag.
 */
export type MetabaseLegacyMbqlSchemaTemplateTag_FieldFilter = {
    'display-name': MetabaseLibSchemaCommonNonBlankString;
    id?: MetabaseLibSchemaTemplateTagId;
    name: MetabaseLibSchemaCommonNonBlankString;
    required?: boolean;
    type: 'dimension';
    alias?: string;
    /**
     * optional map to be appended to filter clause
     */
    options?: {
        [key: string]: unknown;
    };
    dimension: MetabaseLegacyMbqlSchemaField;
    default?: unknown;
    /**
     * which type of widget the frontend should show for this Field Filter; this also affects which parameter types
     * are allowed to be specified for it.
     */
    'widget-type': MetabaseLegacyMbqlSchemaWidgetType;
};

/**
 * Schema for a raw value template tag.
 */
export type MetabaseLegacyMbqlSchemaTemplateTag_RawValue = {
    default?: unknown;
    'display-name': MetabaseLibSchemaCommonNonBlankString;
    id?: MetabaseLibSchemaTemplateTagId;
    name: MetabaseLibSchemaCommonNonBlankString;
    required?: boolean;
    type: 'date' | 'number' | 'boolean' | 'text';
};

/**
 * Schema for a native query snippet template tag.
 */
export type MetabaseLegacyMbqlSchemaTemplateTag_Snippet = {
    database?: MetabaseLibSchemaIdDatabase;
    'display-name': MetabaseLibSchemaCommonNonBlankString;
    id?: MetabaseLibSchemaTemplateTagId;
    name: MetabaseLibSchemaCommonNonBlankString;
    'snippet-id': MetabaseLibSchemaIdSnippet;
    'snippet-name': MetabaseLibSchemaCommonNonBlankString;
    type: 'snippet';
};

/**
 * Schema for a source query template tag.
 */
export type MetabaseLegacyMbqlSchemaTemplateTag_SourceQuery = {
    'card-id': MetabaseLibSchemaIdCard;
    'display-name': MetabaseLibSchemaCommonNonBlankString;
    id?: MetabaseLibSchemaTemplateTagId;
    name: MetabaseLibSchemaCommonNonBlankString;
    type: 'card';
};

/**
 * Schema for a temporal unit template tag.
 */
export type MetabaseLegacyMbqlSchemaTemplateTag_TemporalUnit = {
    alias?: string;
    default?: unknown;
    dimension: MetabaseLegacyMbqlSchemaField;
    'display-name': MetabaseLibSchemaCommonNonBlankString;
    id?: MetabaseLibSchemaTemplateTagId;
    name: MetabaseLibSchemaCommonNonBlankString;
    required?: boolean;
    type: 'temporal-unit';
};

/**
 * Schema for the `:template-tags` map passed in as part of a native query.
 *
 * Map of template tag name -> template tag definition
 */
export type MetabaseLegacyMbqlSchemaTemplateTagMap = {
    [key: string]: MetabaseLegacyMbqlSchemaTemplateTag;
} & MetabaseLibSchemaTemplateTagTemplateTagMapValidateNames;

/**
 * Valid units to extract from a temporal.
 */
export const MetabaseLegacyMbqlSchemaTemporalExtractUnit = {
    YEAR_OF_ERA: 'year-of-era',
    QUARTER_OF_YEAR: 'quarter-of-year',
    MONTH_OF_YEAR: 'month-of-year',
    WEEK_OF_YEAR_ISO: 'week-of-year-iso',
    WEEK_OF_YEAR_US: 'week-of-year-us',
    WEEK_OF_YEAR_INSTANCE: 'week-of-year-instance',
    DAY_OF_MONTH: 'day-of-month',
    DAY_OF_WEEK: 'day-of-week',
    DAY_OF_WEEK_ISO: 'day-of-week-iso',
    HOUR_OF_DAY: 'hour-of-day',
    MINUTE_OF_HOUR: 'minute-of-hour',
    SECOND_OF_MINUTE: 'second-of-minute'
} as const;

/**
 * Valid units to extract from a temporal.
 */
export type MetabaseLegacyMbqlSchemaTemporalExtractUnit = typeof MetabaseLegacyMbqlSchemaTemporalExtractUnit[keyof typeof MetabaseLegacyMbqlSchemaTemporalExtractUnit];

/**
 * Schema for valid temporal literals.
 */
export type MetabaseLegacyMbqlSchemaTemporalLiteral = MetabaseLegacyMbqlSchemaDateOrDatetimeLiteral | MetabaseLegacyMbqlSchemaTimeLiteral;

/**
 * Schema for valid time literals.
 */
export type MetabaseLegacyMbqlSchemaTimeLiteral = MetabaseLegacyMbqlSchemaTime | MetabaseLibSchemaLiteralTime;

/**
 * Valid unit for time bucketing.
 */
export const MetabaseLegacyMbqlSchemaTimeUnit = {
    HOUR: 'hour',
    SECOND: 'second',
    DEFAULT: 'default',
    HOUR_OF_DAY: 'hour-of-day',
    MILLISECOND: 'millisecond',
    MINUTE_OF_HOUR: 'minute-of-hour',
    MINUTE: 'minute'
} as const;

/**
 * Valid unit for time bucketing.
 */
export type MetabaseLegacyMbqlSchemaTimeUnit = typeof MetabaseLegacyMbqlSchemaTimeUnit[keyof typeof MetabaseLegacyMbqlSchemaTimeUnit];

export type MetabaseLegacyMbqlSchemaUnnamedAggregation = MetabaseLegacyMbqlSchemaNumericExpression | MetabaseLegacyMbqlSchemaAggregation2 | MetabaseLegacyMbqlSchemaAvg | MetabaseLegacyMbqlSchemaCumSum | MetabaseLegacyMbqlSchemaDistinct | MetabaseLegacyMbqlSchemaDistinctWhere | MetabaseLegacyMbqlSchemaStddev | MetabaseLegacyMbqlSchemaSum | MetabaseLegacyMbqlSchemaMin | MetabaseLegacyMbqlSchemaMax | MetabaseLegacyMbqlSchemaMetric | MetabaseLegacyMbqlSchemaShare | MetabaseLegacyMbqlSchemaCountWhere | MetabaseLegacyMbqlSchemaSumWhere | MetabaseLegacyMbqlSchemaCase | MetabaseLegacyMbqlSchemaIf | MetabaseLegacyMbqlSchemaMedian | MetabaseLegacyMbqlSchemaPercentile | MetabaseLegacyMbqlSchemaVar | MetabaseLegacyMbqlSchemaCumCount | MetabaseLegacyMbqlSchemaCount | MetabaseLegacyMbqlSchemaOffset;

/**
 * Type info about a value in a `:value` clause. Added automatically by `wrap-value-literals` middleware to values in filter clauses based on the Field in the clause.
 */
export type MetabaseLegacyMbqlSchemaValueTypeInfo = {
    base_type?: MetabaseLibSchemaCommonBaseType;
    database_type?: MetabaseLibSchemaCommonNonBlankString;
    name?: MetabaseLibSchemaCommonNonBlankString;
    semantic_type?: MetabaseLibSchemaCommonSemanticOrRelationType;
    unit?: MetabaseLegacyMbqlSchemaDateTimeUnit;
};

/**
 * Schema for valid values of `:widget-type` for a [[::TemplateTag:FieldFilter]].
 */
export type MetabaseLegacyMbqlSchemaWidgetType = MetabaseLibSchemaParameterWidgetType;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaAbs = unknown;

export type MetabaseLegacyMbqlSchemaAbsoluteDatetime = unknown | unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaAggregation2 = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaAggregationOptions = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaAnd = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaAsc = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaAvg = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaBetween = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaCase = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaCeil = unknown;

export type MetabaseLegacyMbqlSchemaCheckKeysForQueryType = unknown;

/**
 * `:source-metadata` is added to queries when `card__id` source queries are resolved. It contains info about the
 * columns in the source query.
 *
 * Where this is added was changed in Metabase 0.33.0 -- previously, when `card__id` source queries were resolved, the
 * middleware would add `:source-metadata` to the top-level; to support joins against source queries, this has been
 * changed so it is always added at the same level the resolved `:source-query` is added.
 *
 * This should automatically be fixed by `normalize`; if we encounter it, it means some middleware is not functioning
 * properly.
 */
export type MetabaseLegacyMbqlSchemaCheckQueryDoesNotHaveSourceMetadata = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaCoalesce = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaConcat = unknown;

export type MetabaseLegacyMbqlSchemaContains = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaConvertTimezone = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaCount = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaCountWhere = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaCumCount = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaCumSum = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaDate = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaDatetime = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaDatetimeAdd = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaDatetimeDiff = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaDatetimeSubtract = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaDayName = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaDesc = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaDistinct = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaDistinctWhere = unknown;

export type MetabaseLegacyMbqlSchemaDoesNotContain = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaDomain = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaDuring = unknown;

export type MetabaseLegacyMbqlSchemaEndsWith = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaExp = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaExpression = unknown;

export type MetabaseLegacyMbqlSchemaField = unknown & MetabaseLegacyMbqlSchemaRequireBaseTypeForFieldName;

export type MetabaseLegacyMbqlSchemaFieldOrExpressionRef = MetabaseLegacyMbqlSchemaExpression | MetabaseLegacyMbqlSchemaField;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaFloat = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaFloor = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaGetDay = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaGetDayOfWeek = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaGetHour = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaGetMinute = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaGetMonth = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaGetQuarter = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaGetSecond = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaGetWeek = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaGetYear = unknown;

/**
 * values must be distinct
 */
export type MetabaseLegacyMbqlSchemaHelpersDistinct = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaHost = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaIf = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaIn = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaInside = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaInteger = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaInterval = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaIsEmpty = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaIsNull = unknown;

/**
 * Schema for a single legacy metadata column. This is the pre-Lib equivalent of
 * `:metabase.lib.schema.metadata/column`.
 */
export type MetabaseLegacyMbqlSchemaLegacyColumnMetadata = {
    field_ref?: MetabaseLegacyMbqlSchemaReference;
    fingerprint?: MetabaseLibSchemaMetadataFingerprintFingerprint;
    visibility_type?: MetabaseLibSchemaMetadataColumnVisibilityType;
    base_type: MetabaseLibSchemaCommonBaseType;
    id?: MetabaseLibSchemaIdField;
    name: string;
    semantic_type?: MetabaseLibSchemaCommonSemanticOrRelationType;
    display_name: string;
    converted_timezone?: MetabaseLibSchemaExpressionTemporalTimezoneId;
    source?: MetabaseLibSchemaMetadataColumnLegacySource;
    effective_type?: MetabaseLibSchemaCommonBaseType;
    unit?: MetabaseLibSchemaTemporalBucketingUnit;
};

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaLength = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaLog = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaLower = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaLtrim = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaMax = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaMedian = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaMetric = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaMin = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaMonthName = unknown;

export type MetabaseLegacyMbqlSchemaNoBinningOptionsAtTopLevel = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaNot = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaNotEmpty = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaNotIn = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaNotNull = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaNow = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaOffset = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaOr = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaPath = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaPercentile = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaPower = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaQuarterName = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaRegexMatchFirst = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaRelativeDatetime = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaRelativeTimeInterval = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaReplace = unknown;

export type MetabaseLegacyMbqlSchemaRequireBaseTypeForFieldName = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaRound = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaRtrim = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaSegment = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaShare = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaSplitPart = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaSqrt = unknown;

export type MetabaseLegacyMbqlSchemaStartsWith = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaStddev = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaSubdomain = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaSubstring = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaSum = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaSumWhere = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaTemporalExtract = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaText = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaTime = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaTimeInterval = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaToday = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaTrim = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaUpper = unknown;

export type MetabaseLegacyMbqlSchemaValidateTemporalUnit = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaValue = unknown;

/**
 * schema for a valid legacy MBQL :tag clause
 */
export type MetabaseLegacyMbqlSchemaVar = unknown;

/**
 * Schema for something that satisfies the [[metabase.lib.metadata.protocols/MetadataProvider]] protocol.
 */
export type MetabaseLibMetadataProtocolsMetadataProvider = unknown;

export type MetabaseLibSchemaStageAdditional = unknown;

export type MetabaseLibSchemaStageCommon = {
    'lib/stage-metadata'?: MetabaseLibSchemaMetadataStage;
    parameters?: MetabaseLibSchemaParameterParameters;
};

export type MetabaseLibSchemaStageInitial = {
    [key: string]: unknown;
} | unknown;

export type MetabaseLibSchemaStageMbql = {
    'source-card'?: MetabaseLibSchemaIdCard;
    'lib/type': 'mbql.stage/mbql';
    'lib/stage-metadata'?: MetabaseLibSchemaMetadataStage;
    breakout?: MetabaseLibSchemaBreakouts;
    filters?: MetabaseLibSchemaFilters;
    limit?: MetabaseLibSchemaCommonIntGreaterThanOrEqualToZero;
    joins?: MetabaseLibSchemaJoinJoins;
    aggregation?: MetabaseLibSchemaAggregationAggregations;
    fields?: MetabaseLibSchemaFields;
    'source-table'?: MetabaseLibSchemaIdTable;
    'order-by'?: MetabaseLibSchemaOrderByOrderBys;
    page?: MetabaseLibSchemaPage;
    parameters?: MetabaseLibSchemaParameterParameters;
    expressions?: MetabaseLibSchemaExpressionExpressions;
} & MetabaseLibSchemaStageValidRefs & unknown;

export type MetabaseLibSchemaStageNative = {
    collection?: MetabaseLibSchemaCommonNonBlankString;
    'lib/stage-metadata'?: MetabaseLibSchemaMetadataStage;
    'lib/type': 'mbql.stage/native';
    native?: unknown;
    parameters?: MetabaseLibSchemaParameterParameters;
    params?: Array<MetabaseLibSchemaLiteralLiteral | unknown>;
    'query-permissions/referenced-card-ids'?: Array<MetabaseLibSchemaIdCard>;
    'template-tags'?: MetabaseLibSchemaTemplateTagTemplateTagMap;
} & unknown;

export const MetabaseLibSchemaStageType = {
    MBQL_STAGE_NATIVE: 'mbql.stage/native',
    MBQL_STAGE_MBQL: 'mbql.stage/mbql'
} as const;

export type MetabaseLibSchemaStageType = typeof MetabaseLibSchemaStageType[keyof typeof MetabaseLibSchemaStageType];

export type MetabaseLibSchemaStageValidRefs = unknown;

export type MetabaseLibSchemaStagesValidRefs = unknown;

export type MetabaseLibSchemaActionsRow = {
    [key: string]: unknown;
};

export type MetabaseLibSchemaAggregationDistinctArg = MetabaseLibSchemaExpressionExpression;

export type MetabaseLibSchemaAggregationPercentilePercentile = MetabaseLibSchemaExpressionNumber;

export type MetabaseLibSchemaAggregationAggregation = MetabaseLibSchemaMbqlClauseClause;

export type MetabaseLibSchemaAggregationAggregations = Array<MetabaseLibSchemaMbqlClauseClause>;

/**
 * Bin width (size of each bin).
 */
export type MetabaseLibSchemaBinningBinWidth = MetabaseLibSchemaCommonPositiveNumber;

/**
 * Schema for `:binning` options passed to a `:field` clause.
 */
export type MetabaseLibSchemaBinningBinning = {
    strategy: MetabaseLibSchemaBinningStrategy;
} & ({
    strategy: 'default';
} | {
    'bin-width': MetabaseLibSchemaBinningBinWidth;
    strategy: 'bin-width';
} | {
    'num-bins': MetabaseLibSchemaBinningNumBins;
    strategy: 'num-bins';
});

/**
 * Number of bins to use.
 */
export type MetabaseLibSchemaBinningNumBins = number;

export const MetabaseLibSchemaBinningStrategy = {
    BIN_WIDTH: 'bin-width',
    DEFAULT: 'default',
    NUM_BINS: 'num-bins'
} as const;

export type MetabaseLibSchemaBinningStrategy = typeof MetabaseLibSchemaBinningStrategy[keyof typeof MetabaseLibSchemaBinningStrategy];

export type MetabaseLibSchemaBreakout = MetabaseLibSchemaMbqlClauseClause;

export type MetabaseLibSchemaBreakouts = Array<MetabaseLibSchemaMbqlClauseClause> & MetabaseLibSchemaUtilDistinctMbqlClauses;

export type MetabaseLibSchemaCommonBaseType = string;

/**
 * Schema representing an integer than must also be greater than or equal to zero.
 */
export type MetabaseLibSchemaCommonIntGreaterThanOrEqualToZero = number;

export type MetabaseLibSchemaCommonKebabCasedMap = unknown;

export type MetabaseLibSchemaCommonNonBlankString = string;

export type MetabaseLibSchemaCommonOptions = {
    'base-type'?: MetabaseLibSchemaCommonBaseType;
    'database-type'?: MetabaseLibSchemaCommonNonBlankString;
    'display-name'?: MetabaseLibSchemaCommonNonBlankString;
    'effective-type'?: MetabaseLibSchemaCommonBaseType;
    'lib/uuid': MetabaseLibSchemaCommonUuid;
    name?: MetabaseLibSchemaCommonNonBlankString;
    'semantic-type'?: MetabaseLibSchemaCommonSemanticOrRelationType;
};

export type MetabaseLibSchemaCommonPositiveNumber = unknown;

/**
 * valid semantic or relation type
 */
export type MetabaseLibSchemaCommonSemanticOrRelationType = string;

export type MetabaseLibSchemaCommonUuid = string;

/**
 * Additional constraints added to a query limiting the maximum number of rows that can be returned. Mostly useful
 * because native queries don't support the MBQL `:limit` clause. For MBQL queries, if `:limit` is set, it will
 * override these values.
 */
export type MetabaseLibSchemaConstraintsConstraints = {
    /**
     * Maximum number of results to allow for a query with aggregations. If `max-results-bare-rows` is unset, this
     * applies to all queries
     */
    'max-results'?: MetabaseLibSchemaCommonIntGreaterThanOrEqualToZero;
    /**
     * Maximum number of results to allow for a query with no aggregations. If set, this should be LOWER than
     * `:max-results`.
     */
    'max-results-bare-rows'?: MetabaseLibSchemaCommonIntGreaterThanOrEqualToZero;
};

export type MetabaseLibSchemaExpressionExpressionDefinition = MetabaseLibSchemaExpressionExpression;

export type MetabaseLibSchemaExpressionArithmeticArgsNumbers = unknown;

export type MetabaseLibSchemaExpressionArithmeticPlusMinusNumericSchema = unknown;

export type MetabaseLibSchemaExpressionArithmeticPlusMinusTemporalIntervalSchema = unknown;

export type MetabaseLibSchemaExpressionArithmeticTemporalDifferenceSchema = unknown;

export type MetabaseLibSchemaExpressionBoolean = MetabaseLibSchemaMbqlClauseClause | MetabaseLibSchemaLiteralLiteral;

export type MetabaseLibSchemaExpressionEqualityComparable = MetabaseLibSchemaMbqlClauseClause | MetabaseLibSchemaLiteralLiteral;

export type MetabaseLibSchemaExpressionExpression = MetabaseLibSchemaMbqlClauseClause | MetabaseLibSchemaLiteralLiteral;

/**
 * The `:expressions` definition map as found as a top-level key in an MBQL stage.
 */
export type MetabaseLibSchemaExpressionExpressions = Array<MetabaseLibSchemaExpressionExpression>;

export type MetabaseLibSchemaExpressionInteger = MetabaseLibSchemaMbqlClauseClause | MetabaseLibSchemaLiteralLiteral;

export type MetabaseLibSchemaExpressionNumber = MetabaseLibSchemaMbqlClauseClause | MetabaseLibSchemaLiteralLiteral;

export type MetabaseLibSchemaExpressionOrderable = MetabaseLibSchemaMbqlClauseClause | MetabaseLibSchemaLiteralLiteral;

export type MetabaseLibSchemaExpressionPositiveIntegerOrNumericExpression = MetabaseLibSchemaExpressionInteger;

export type MetabaseLibSchemaExpressionString = MetabaseLibSchemaMbqlClauseClause | MetabaseLibSchemaLiteralLiteral;

export type MetabaseLibSchemaExpressionTemporal = MetabaseLibSchemaMbqlClauseClause | MetabaseLibSchemaLiteralLiteral;

export type MetabaseLibSchemaExpressionTemporalAbsoluteDatetimeBaseType = MetabaseLibSchemaCommonBaseType;

export type MetabaseLibSchemaExpressionTemporalAbsoluteDatetimeOptions = {
    'base-type'?: MetabaseLibSchemaCommonBaseType;
    'database-type'?: MetabaseLibSchemaCommonNonBlankString;
    'display-name'?: MetabaseLibSchemaCommonNonBlankString;
    'effective-type'?: MetabaseLibSchemaCommonBaseType;
    'lib/uuid': MetabaseLibSchemaCommonUuid;
    name?: MetabaseLibSchemaCommonNonBlankString;
    'semantic-type'?: MetabaseLibSchemaCommonSemanticOrRelationType;
};

export type MetabaseLibSchemaExpressionTemporalRelativeDatetimeAmount = 'current' | number;

export type MetabaseLibSchemaExpressionTemporalRelativeDatetimeUnit = 'default' | MetabaseLibSchemaTemporalBucketingUnitDateTimeInterval;

export const MetabaseLibSchemaExpressionTemporalTemporalExtractUnit = {
    YEAR_OF_ERA: 'year-of-era',
    QUARTER_OF_YEAR: 'quarter-of-year',
    MONTH_OF_YEAR: 'month-of-year',
    WEEK_OF_YEAR_ISO: 'week-of-year-iso',
    WEEK_OF_YEAR_US: 'week-of-year-us',
    WEEK_OF_YEAR_INSTANCE: 'week-of-year-instance',
    DAY_OF_MONTH: 'day-of-month',
    DAY_OF_WEEK: 'day-of-week',
    DAY_OF_WEEK_ISO: 'day-of-week-iso',
    HOUR_OF_DAY: 'hour-of-day',
    MINUTE_OF_HOUR: 'minute-of-hour',
    SECOND_OF_MINUTE: 'second-of-minute'
} as const;

export type MetabaseLibSchemaExpressionTemporalTemporalExtractUnit = typeof MetabaseLibSchemaExpressionTemporalTemporalExtractUnit[keyof typeof MetabaseLibSchemaExpressionTemporalTemporalExtractUnit];

export const MetabaseLibSchemaExpressionTemporalDatetimeDiffUnit = {
    DAY: 'day',
    WEEK: 'week',
    MONTH: 'month',
    QUARTER: 'quarter',
    YEAR: 'year',
    SECOND: 'second',
    MINUTE: 'minute',
    HOUR: 'hour'
} as const;

export type MetabaseLibSchemaExpressionTemporalDatetimeDiffUnit = typeof MetabaseLibSchemaExpressionTemporalDatetimeDiffUnit[keyof typeof MetabaseLibSchemaExpressionTemporalDatetimeDiffUnit];

export type MetabaseLibSchemaExpressionTemporalTimezoneId = MetabaseLibSchemaCommonNonBlankString & ('Africa/Abidjan' | 'Africa/Accra' | 'Africa/Addis_Ababa' | 'Africa/Algiers' | 'Africa/Asmara' | 'Africa/Asmera' | 'Africa/Bamako' | 'Africa/Bangui' | 'Africa/Banjul' | 'Africa/Bissau' | 'Africa/Blantyre' | 'Africa/Brazzaville' | 'Africa/Bujumbura' | 'Africa/Cairo' | 'Africa/Casablanca' | 'Africa/Ceuta' | 'Africa/Conakry' | 'Africa/Dakar' | 'Africa/Dar_es_Salaam' | 'Africa/Djibouti' | 'Africa/Douala' | 'Africa/El_Aaiun' | 'Africa/Freetown' | 'Africa/Gaborone' | 'Africa/Harare' | 'Africa/Johannesburg' | 'Africa/Juba' | 'Africa/Kampala' | 'Africa/Khartoum' | 'Africa/Kigali' | 'Africa/Kinshasa' | 'Africa/Lagos' | 'Africa/Libreville' | 'Africa/Lome' | 'Africa/Luanda' | 'Africa/Lubumbashi' | 'Africa/Lusaka' | 'Africa/Malabo' | 'Africa/Maputo' | 'Africa/Maseru' | 'Africa/Mbabane' | 'Africa/Mogadishu' | 'Africa/Monrovia' | 'Africa/Nairobi' | 'Africa/Ndjamena' | 'Africa/Niamey' | 'Africa/Nouakchott' | 'Africa/Ouagadougou' | 'Africa/Porto-Novo' | 'Africa/Sao_Tome' | 'Africa/Timbuktu' | 'Africa/Tripoli' | 'Africa/Tunis' | 'Africa/Windhoek' | 'America/Adak' | 'America/Anchorage' | 'America/Anguilla' | 'America/Antigua' | 'America/Araguaina' | 'America/Argentina/Buenos_Aires' | 'America/Argentina/Catamarca' | 'America/Argentina/ComodRivadavia' | 'America/Argentina/Cordoba' | 'America/Argentina/Jujuy' | 'America/Argentina/La_Rioja' | 'America/Argentina/Mendoza' | 'America/Argentina/Rio_Gallegos' | 'America/Argentina/Salta' | 'America/Argentina/San_Juan' | 'America/Argentina/San_Luis' | 'America/Argentina/Tucuman' | 'America/Argentina/Ushuaia' | 'America/Aruba' | 'America/Asuncion' | 'America/Atikokan' | 'America/Atka' | 'America/Bahia' | 'America/Bahia_Banderas' | 'America/Barbados' | 'America/Belem' | 'America/Belize' | 'America/Blanc-Sablon' | 'America/Boa_Vista' | 'America/Bogota' | 'America/Boise' | 'America/Buenos_Aires' | 'America/Cambridge_Bay' | 'America/Campo_Grande' | 'America/Cancun' | 'America/Caracas' | 'America/Catamarca' | 'America/Cayenne' | 'America/Cayman' | 'America/Chicago' | 'America/Chihuahua' | 'America/Ciudad_Juarez' | 'America/Coral_Harbour' | 'America/Cordoba' | 'America/Costa_Rica' | 'America/Creston' | 'America/Cuiaba' | 'America/Curacao' | 'America/Danmarkshavn' | 'America/Dawson' | 'America/Dawson_Creek' | 'America/Denver' | 'America/Detroit' | 'America/Dominica' | 'America/Edmonton' | 'America/Eirunepe' | 'America/El_Salvador' | 'America/Ensenada' | 'America/Fort_Nelson' | 'America/Fort_Wayne' | 'America/Fortaleza' | 'America/Glace_Bay' | 'America/Godthab' | 'America/Goose_Bay' | 'America/Grand_Turk' | 'America/Grenada' | 'America/Guadeloupe' | 'America/Guatemala' | 'America/Guayaquil' | 'America/Guyana' | 'America/Halifax' | 'America/Havana' | 'America/Hermosillo' | 'America/Indiana/Indianapolis' | 'America/Indiana/Knox' | 'America/Indiana/Marengo' | 'America/Indiana/Petersburg' | 'America/Indiana/Tell_City' | 'America/Indiana/Vevay' | 'America/Indiana/Vincennes' | 'America/Indiana/Winamac' | 'America/Indianapolis' | 'America/Inuvik' | 'America/Iqaluit' | 'America/Jamaica' | 'America/Jujuy' | 'America/Juneau' | 'America/Kentucky/Louisville' | 'America/Kentucky/Monticello' | 'America/Knox_IN' | 'America/Kralendijk' | 'America/La_Paz' | 'America/Lima' | 'America/Los_Angeles' | 'America/Louisville' | 'America/Lower_Princes' | 'America/Maceio' | 'America/Managua' | 'America/Manaus' | 'America/Marigot' | 'America/Martinique' | 'America/Matamoros' | 'America/Mazatlan' | 'America/Mendoza' | 'America/Menominee' | 'America/Merida' | 'America/Metlakatla' | 'America/Mexico_City' | 'America/Miquelon' | 'America/Moncton' | 'America/Monterrey' | 'America/Montevideo' | 'America/Montreal' | 'America/Montserrat' | 'America/Nassau' | 'America/New_York' | 'America/Nipigon' | 'America/Nome' | 'America/Noronha' | 'America/North_Dakota/Beulah' | 'America/North_Dakota/Center' | 'America/North_Dakota/New_Salem' | 'America/Nuuk' | 'America/Ojinaga' | 'America/Panama' | 'America/Pangnirtung' | 'America/Paramaribo' | 'America/Phoenix' | 'America/Port-au-Prince' | 'America/Port_of_Spain' | 'America/Porto_Acre' | 'America/Porto_Velho' | 'America/Puerto_Rico' | 'America/Punta_Arenas' | 'America/Rainy_River' | 'America/Rankin_Inlet' | 'America/Recife' | 'America/Regina' | 'America/Resolute' | 'America/Rio_Branco' | 'America/Rosario' | 'America/Santa_Isabel' | 'America/Santarem' | 'America/Santiago' | 'America/Santo_Domingo' | 'America/Sao_Paulo' | 'America/Scoresbysund' | 'America/Shiprock' | 'America/Sitka' | 'America/St_Barthelemy' | 'America/St_Johns' | 'America/St_Kitts' | 'America/St_Lucia' | 'America/St_Thomas' | 'America/St_Vincent' | 'America/Swift_Current' | 'America/Tegucigalpa' | 'America/Thule' | 'America/Thunder_Bay' | 'America/Tijuana' | 'America/Toronto' | 'America/Tortola' | 'America/Vancouver' | 'America/Virgin' | 'America/Whitehorse' | 'America/Winnipeg' | 'America/Yakutat' | 'America/Yellowknife' | 'Antarctica/Casey' | 'Antarctica/Davis' | 'Antarctica/DumontDUrville' | 'Antarctica/Macquarie' | 'Antarctica/Mawson' | 'Antarctica/McMurdo' | 'Antarctica/Palmer' | 'Antarctica/Rothera' | 'Antarctica/South_Pole' | 'Antarctica/Syowa' | 'Antarctica/Troll' | 'Antarctica/Vostok' | 'Arctic/Longyearbyen' | 'Asia/Aden' | 'Asia/Almaty' | 'Asia/Amman' | 'Asia/Anadyr' | 'Asia/Aqtau' | 'Asia/Aqtobe' | 'Asia/Ashgabat' | 'Asia/Ashkhabad' | 'Asia/Atyrau' | 'Asia/Baghdad' | 'Asia/Bahrain' | 'Asia/Baku' | 'Asia/Bangkok' | 'Asia/Barnaul' | 'Asia/Beirut' | 'Asia/Bishkek' | 'Asia/Brunei' | 'Asia/Calcutta' | 'Asia/Chita' | 'Asia/Choibalsan' | 'Asia/Chongqing' | 'Asia/Chungking' | 'Asia/Colombo' | 'Asia/Dacca' | 'Asia/Damascus' | 'Asia/Dhaka' | 'Asia/Dili' | 'Asia/Dubai' | 'Asia/Dushanbe' | 'Asia/Famagusta' | 'Asia/Gaza' | 'Asia/Harbin' | 'Asia/Hebron' | 'Asia/Ho_Chi_Minh' | 'Asia/Hong_Kong' | 'Asia/Hovd' | 'Asia/Irkutsk' | 'Asia/Istanbul' | 'Asia/Jakarta' | 'Asia/Jayapura' | 'Asia/Jerusalem' | 'Asia/Kabul' | 'Asia/Kamchatka' | 'Asia/Karachi' | 'Asia/Kashgar' | 'Asia/Kathmandu' | 'Asia/Katmandu' | 'Asia/Khandyga' | 'Asia/Kolkata' | 'Asia/Krasnoyarsk' | 'Asia/Kuala_Lumpur' | 'Asia/Kuching' | 'Asia/Kuwait' | 'Asia/Macao' | 'Asia/Macau' | 'Asia/Magadan' | 'Asia/Makassar' | 'Asia/Manila' | 'Asia/Muscat' | 'Asia/Nicosia' | 'Asia/Novokuznetsk' | 'Asia/Novosibirsk' | 'Asia/Omsk' | 'Asia/Oral' | 'Asia/Phnom_Penh' | 'Asia/Pontianak' | 'Asia/Pyongyang' | 'Asia/Qatar' | 'Asia/Qostanay' | 'Asia/Qyzylorda' | 'Asia/Rangoon' | 'Asia/Riyadh' | 'Asia/Saigon' | 'Asia/Sakhalin' | 'Asia/Samarkand' | 'Asia/Seoul' | 'Asia/Shanghai' | 'Asia/Singapore' | 'Asia/Srednekolymsk' | 'Asia/Taipei' | 'Asia/Tashkent' | 'Asia/Tbilisi' | 'Asia/Tehran' | 'Asia/Tel_Aviv' | 'Asia/Thimbu' | 'Asia/Thimphu' | 'Asia/Tokyo' | 'Asia/Tomsk' | 'Asia/Ujung_Pandang' | 'Asia/Ulaanbaatar' | 'Asia/Ulan_Bator' | 'Asia/Urumqi' | 'Asia/Ust-Nera' | 'Asia/Vientiane' | 'Asia/Vladivostok' | 'Asia/Yakutsk' | 'Asia/Yangon' | 'Asia/Yekaterinburg' | 'Asia/Yerevan' | 'Atlantic/Azores' | 'Atlantic/Bermuda' | 'Atlantic/Canary' | 'Atlantic/Cape_Verde' | 'Atlantic/Faeroe' | 'Atlantic/Faroe' | 'Atlantic/Jan_Mayen' | 'Atlantic/Madeira' | 'Atlantic/Reykjavik' | 'Atlantic/South_Georgia' | 'Atlantic/St_Helena' | 'Atlantic/Stanley' | 'Australia/ACT' | 'Australia/Adelaide' | 'Australia/Brisbane' | 'Australia/Broken_Hill' | 'Australia/Canberra' | 'Australia/Currie' | 'Australia/Darwin' | 'Australia/Eucla' | 'Australia/Hobart' | 'Australia/LHI' | 'Australia/Lindeman' | 'Australia/Lord_Howe' | 'Australia/Melbourne' | 'Australia/NSW' | 'Australia/North' | 'Australia/Perth' | 'Australia/Queensland' | 'Australia/South' | 'Australia/Sydney' | 'Australia/Tasmania' | 'Australia/Victoria' | 'Australia/West' | 'Australia/Yancowinna' | 'Brazil/Acre' | 'Brazil/DeNoronha' | 'Brazil/East' | 'Brazil/West' | 'CET' | 'CST6CDT' | 'Canada/Atlantic' | 'Canada/Central' | 'Canada/Eastern' | 'Canada/Mountain' | 'Canada/Newfoundland' | 'Canada/Pacific' | 'Canada/Saskatchewan' | 'Canada/Yukon' | 'Chile/Continental' | 'Chile/EasterIsland' | 'Cuba' | 'EET' | 'EST5EDT' | 'Egypt' | 'Eire' | 'Etc/GMT' | 'Etc/GMT+0' | 'Etc/GMT+1' | 'Etc/GMT+10' | 'Etc/GMT+11' | 'Etc/GMT+12' | 'Etc/GMT+2' | 'Etc/GMT+3' | 'Etc/GMT+4' | 'Etc/GMT+5' | 'Etc/GMT+6' | 'Etc/GMT+7' | 'Etc/GMT+8' | 'Etc/GMT+9' | 'Etc/GMT-0' | 'Etc/GMT-1' | 'Etc/GMT-10' | 'Etc/GMT-11' | 'Etc/GMT-12' | 'Etc/GMT-13' | 'Etc/GMT-14' | 'Etc/GMT-2' | 'Etc/GMT-3' | 'Etc/GMT-4' | 'Etc/GMT-5' | 'Etc/GMT-6' | 'Etc/GMT-7' | 'Etc/GMT-8' | 'Etc/GMT-9' | 'Etc/GMT0' | 'Etc/Greenwich' | 'Etc/UCT' | 'Etc/UTC' | 'Etc/Universal' | 'Etc/Zulu' | 'Europe/Amsterdam' | 'Europe/Andorra' | 'Europe/Astrakhan' | 'Europe/Athens' | 'Europe/Belfast' | 'Europe/Belgrade' | 'Europe/Berlin' | 'Europe/Bratislava' | 'Europe/Brussels' | 'Europe/Bucharest' | 'Europe/Budapest' | 'Europe/Busingen' | 'Europe/Chisinau' | 'Europe/Copenhagen' | 'Europe/Dublin' | 'Europe/Gibraltar' | 'Europe/Guernsey' | 'Europe/Helsinki' | 'Europe/Isle_of_Man' | 'Europe/Istanbul' | 'Europe/Jersey' | 'Europe/Kaliningrad' | 'Europe/Kiev' | 'Europe/Kirov' | 'Europe/Kyiv' | 'Europe/Lisbon' | 'Europe/Ljubljana' | 'Europe/London' | 'Europe/Luxembourg' | 'Europe/Madrid' | 'Europe/Malta' | 'Europe/Mariehamn' | 'Europe/Minsk' | 'Europe/Monaco' | 'Europe/Moscow' | 'Europe/Nicosia' | 'Europe/Oslo' | 'Europe/Paris' | 'Europe/Podgorica' | 'Europe/Prague' | 'Europe/Riga' | 'Europe/Rome' | 'Europe/Samara' | 'Europe/San_Marino' | 'Europe/Sarajevo' | 'Europe/Saratov' | 'Europe/Simferopol' | 'Europe/Skopje' | 'Europe/Sofia' | 'Europe/Stockholm' | 'Europe/Tallinn' | 'Europe/Tirane' | 'Europe/Tiraspol' | 'Europe/Ulyanovsk' | 'Europe/Uzhgorod' | 'Europe/Vaduz' | 'Europe/Vatican' | 'Europe/Vienna' | 'Europe/Vilnius' | 'Europe/Volgograd' | 'Europe/Warsaw' | 'Europe/Zagreb' | 'Europe/Zaporozhye' | 'Europe/Zurich' | 'GB' | 'GB-Eire' | 'GMT' | 'GMT0' | 'Greenwich' | 'Hongkong' | 'Iceland' | 'Indian/Antananarivo' | 'Indian/Chagos' | 'Indian/Christmas' | 'Indian/Cocos' | 'Indian/Comoro' | 'Indian/Kerguelen' | 'Indian/Mahe' | 'Indian/Maldives' | 'Indian/Mauritius' | 'Indian/Mayotte' | 'Indian/Reunion' | 'Iran' | 'Israel' | 'Jamaica' | 'Japan' | 'Kwajalein' | 'Libya' | 'MET' | 'MST7MDT' | 'Mexico/BajaNorte' | 'Mexico/BajaSur' | 'Mexico/General' | 'NZ' | 'NZ-CHAT' | 'Navajo' | 'PRC' | 'PST8PDT' | 'Pacific/Apia' | 'Pacific/Auckland' | 'Pacific/Bougainville' | 'Pacific/Chatham' | 'Pacific/Chuuk' | 'Pacific/Easter' | 'Pacific/Efate' | 'Pacific/Enderbury' | 'Pacific/Fakaofo' | 'Pacific/Fiji' | 'Pacific/Funafuti' | 'Pacific/Galapagos' | 'Pacific/Gambier' | 'Pacific/Guadalcanal' | 'Pacific/Guam' | 'Pacific/Honolulu' | 'Pacific/Johnston' | 'Pacific/Kanton' | 'Pacific/Kiritimati' | 'Pacific/Kosrae' | 'Pacific/Kwajalein' | 'Pacific/Majuro' | 'Pacific/Marquesas' | 'Pacific/Midway' | 'Pacific/Nauru' | 'Pacific/Niue' | 'Pacific/Norfolk' | 'Pacific/Noumea' | 'Pacific/Pago_Pago' | 'Pacific/Palau' | 'Pacific/Pitcairn' | 'Pacific/Pohnpei' | 'Pacific/Ponape' | 'Pacific/Port_Moresby' | 'Pacific/Rarotonga' | 'Pacific/Saipan' | 'Pacific/Samoa' | 'Pacific/Tahiti' | 'Pacific/Tarawa' | 'Pacific/Tongatapu' | 'Pacific/Truk' | 'Pacific/Wake' | 'Pacific/Wallis' | 'Pacific/Yap' | 'Poland' | 'Portugal' | 'ROK' | 'Singapore' | 'SystemV/AST4' | 'SystemV/AST4ADT' | 'SystemV/CST6' | 'SystemV/CST6CDT' | 'SystemV/EST5' | 'SystemV/EST5EDT' | 'SystemV/HST10' | 'SystemV/MST7' | 'SystemV/MST7MDT' | 'SystemV/PST8' | 'SystemV/PST8PDT' | 'SystemV/YST9' | 'SystemV/YST9YDT' | 'Turkey' | 'UCT' | 'US/Alaska' | 'US/Aleutian' | 'US/Arizona' | 'US/Central' | 'US/East-Indiana' | 'US/Eastern' | 'US/Hawaii' | 'US/Indiana-Starke' | 'US/Michigan' | 'US/Mountain' | 'US/Pacific' | 'US/Samoa' | 'UTC' | 'Universal' | 'W-SU' | 'WET' | 'Zulu' | MetabaseLibSchemaLiteralStringZoneOffset);

export const MetabaseLibSchemaExpressionTemporalWeekMode = {
    ISO: 'iso',
    US: 'us',
    INSTANCE: 'instance'
} as const;

export type MetabaseLibSchemaExpressionTemporalWeekMode = typeof MetabaseLibSchemaExpressionTemporalWeekMode[keyof typeof MetabaseLibSchemaExpressionTemporalWeekMode];

export type MetabaseLibSchemaExpressionWindowOffsetN = number;

export type MetabaseLibSchemaFields = Array<MetabaseLibSchemaMbqlClauseClause> & MetabaseLibSchemaUtilDistinctMbqlClauses;

/**
 * String filter operator options. Only set for `:contains`, `:does-not-contain`, `:starts-with`, `:ends-with`
 * operators.
 */
export type MetabaseLibSchemaFilterStringFilterOptions = {
    'case-sensitive'?: boolean;
};

/**
 * Options for `:time-interval` operator. Note that `:relative-time-interval` does not support these options.
 */
export type MetabaseLibSchemaFilterTimeIntervalOptions = {
    'include-current'?: boolean;
};

export type MetabaseLibSchemaFilters = Array<MetabaseLibSchemaExpressionBoolean>;

/**
 * Valid Action ID
 */
export type MetabaseLibSchemaIdAction = number;

/**
 * Valid Card ID
 */
export type MetabaseLibSchemaIdCard = number;

/**
 * Valid Dashboard ID
 */
export type MetabaseLibSchemaIdDashboard = number;

/**
 * Valid DashboardCard ID
 */
export type MetabaseLibSchemaIdDashcard = number;

/**
 * Valid Database ID
 */
export type MetabaseLibSchemaIdDatabase = number;

/**
 * Valid Dimension ID
 */
export type MetabaseLibSchemaIdDimension = number;

/**
 * Valid Field ID
 */
export type MetabaseLibSchemaIdField = number;

/**
 * Valid Pulse ID
 */
export type MetabaseLibSchemaIdPulse = number;

/**
 * The ID used to signify that a database is 'virtual' rather than physical.
 *
 * A fake integer ID is used so as to minimize the number of changes that need to be made on the frontend -- by using
 * something that would otherwise be a legal ID, *nothing* need change there, and the frontend can query against this
 * 'database' none the wiser. (This integer ID is negative which means it will never conflict with a *real* database
 * ID.)
 *
 * This ID acts as a sort of flag. The relevant places in the middleware can check whether the DB we're querying is
 * this 'virtual' database and take the appropriate actions.
 */
export type MetabaseLibSchemaIdSavedQuestionsVirtualDatabase = -1337;

/**
 * Valid legacy Segment ID
 */
export type MetabaseLibSchemaIdSegment = number;

/**
 * Valid Snippet ID
 */
export type MetabaseLibSchemaIdSnippet = number;

/**
 * Valid Table ID
 */
export type MetabaseLibSchemaIdTable = number;

/**
 * Valid User ID
 */
export type MetabaseLibSchemaIdUser = number;

export const MetabaseLibSchemaInfoContext = {
    ACTION: 'action',
    AD_HOC: 'ad-hoc',
    CACHE_REFRESH: 'cache-refresh',
    COLLECTION: 'collection',
    MAP_TILES: 'map-tiles',
    PULSE: 'pulse',
    DASHBOARD_SUBSCRIPTION: 'dashboard-subscription',
    DASHBOARD: 'dashboard',
    QUESTION: 'question',
    CSV_DOWNLOAD: 'csv-download',
    XLSX_DOWNLOAD: 'xlsx-download',
    JSON_DOWNLOAD: 'json-download',
    PUBLIC_DASHBOARD: 'public-dashboard',
    PUBLIC_QUESTION: 'public-question',
    PUBLIC_CSV_DOWNLOAD: 'public-csv-download',
    PUBLIC_XLSX_DOWNLOAD: 'public-xlsx-download',
    PUBLIC_JSON_DOWNLOAD: 'public-json-download',
    EMBEDDED_DASHBOARD: 'embedded-dashboard',
    EMBEDDED_QUESTION: 'embedded-question',
    EMBEDDED_CSV_DOWNLOAD: 'embedded-csv-download',
    EMBEDDED_XLSX_DOWNLOAD: 'embedded-xlsx-download',
    EMBEDDED_JSON_DOWNLOAD: 'embedded-json-download',
    TABLE_GRID: 'table-grid'
} as const;

export type MetabaseLibSchemaInfoContext = typeof MetabaseLibSchemaInfoContext[keyof typeof MetabaseLibSchemaInfoContext];

export type MetabaseLibSchemaInfoHash = string;

/**
 * Schema for query `:info` dictionary, which is used for informational purposes to record information about how a query
 * was executed in QueryExecution and other places. It is considered bad form for middleware to change its behavior
 * based on this information, don't do it!
 *
 * TODO - this schema is somewhat misleading because if you use a function
 * like [[metabase.query-processor/userland-query]] some of these keys (e.g. `:context`) are in fact required
 */
export type MetabaseLibSchemaInfoInfo = {
    'query-hash'?: MetabaseLibSchemaInfoHash;
    'action-id'?: MetabaseLibSchemaIdAction;
    'pivot/original-query'?: {
        [key: string]: unknown;
    };
    'executed-by'?: MetabaseLibSchemaIdUser;
    'card-id'?: MetabaseLibSchemaIdCard;
    'pivot/result-metadata'?: 'none' | Array<MetabaseLibSchemaMetadataColumn>;
    context?: MetabaseLibSchemaInfoContext;
    'dashboard-id'?: MetabaseLibSchemaIdDashboard;
    'metadata/model-metadata'?: Array<MetabaseLibSchemaMetadataLibOrLegacyColumn>;
    'pulse-id'?: MetabaseLibSchemaIdPulse;
    'card-name'?: MetabaseLibSchemaCommonNonBlankString;
};

/**
 * The name used to alias the joined table or query. This is usually generated automatically and generally looks like
 * `table__via__field`. You can specify this yourself if you need to reference a joined field with a `:join-alias` in
 * the options.
 */
export type MetabaseLibSchemaJoinAlias = MetabaseLibSchemaCommonNonBlankString;

export type MetabaseLibSchemaJoinCondition = MetabaseLibSchemaExpressionBoolean;

export type MetabaseLibSchemaJoinConditions = Array<MetabaseLibSchemaExpressionBoolean>;

/**
 * The Fields to include in the results *if* a top-level `:fields` clause *is not* specified. This can be either
 * `:none`, `:all`, or a sequence of Field clauses.
 *
 * * `:none`: no Fields from the joined table or nested query are included (unless indirectly included by breakouts or
 * other clauses). This is the default, and what is used for automatically-generated joins.
 *
 * * `:all`: will include all of the Fields from the joined table or query
 *
 * * a sequence of Field clauses: include only the Fields specified. Only `:field` clauses are allowed here! References
 * to expressions or aggregations in the thing we're joining should use column literal (string column name) `:field`
 * references. This should be non-empty and all elements should be distinct (ignoring `:lib/uuid`).
 */
export type MetabaseLibSchemaJoinFields = 'all' | 'none' | (Array<MbqlClauseField> & MetabaseLibSchemaUtilDistinctMbqlClauses);

export type MetabaseLibSchemaJoinJoin = {
    alias: MetabaseLibSchemaJoinAlias;
    conditions: MetabaseLibSchemaJoinConditions;
    fields?: MetabaseLibSchemaJoinFields;
    'lib/type': 'mbql/join';
    stages: MetabaseLibSchemaStages;
    strategy?: MetabaseLibSchemaJoinStrategy;
} & unknown & MetabaseLibSchemaJoinValidateFieldAliasesMatchJoinAlias;

export type MetabaseLibSchemaJoinJoins = Array<MetabaseLibSchemaJoinJoin>;

/**
 * Valid values for the optional `:strategy` key in a join. Note that these are only valid if the current Database
 * supports that specific join type; these match 1:1 with the Database `:features`, e.g. a Database that supports left
 * joins will support the `:left-join` feature.
 *
 * When `:strategy` is not specified, `:left-join` is the default strategy.
 */
export const MetabaseLibSchemaJoinStrategy = {
    LEFT_JOIN: 'left-join',
    RIGHT_JOIN: 'right-join',
    INNER_JOIN: 'inner-join',
    FULL_JOIN: 'full-join'
} as const;

/**
 * Valid values for the optional `:strategy` key in a join. Note that these are only valid if the current Database
 * supports that specific join type; these match 1:1 with the Database `:features`, e.g. a Database that supports left
 * joins will support the `:left-join` feature.
 *
 * When `:strategy` is not specified, `:left-join` is the default strategy.
 */
export type MetabaseLibSchemaJoinStrategy = typeof MetabaseLibSchemaJoinStrategy[keyof typeof MetabaseLibSchemaJoinStrategy];

export type MetabaseLibSchemaJoinValidateFieldAliasesMatchJoinAlias = unknown;

export type MetabaseLibSchemaLiteralStringDate = string;

export type MetabaseLibSchemaLiteralStringDatetime = string | string;

export type MetabaseLibSchemaLiteralStringTime = string | string;

export type MetabaseLibSchemaLiteralStringYear = string;

export type MetabaseLibSchemaLiteralStringYearMonth = string;

export type MetabaseLibSchemaLiteralStringZoneOffset = string;

export type MetabaseLibSchemaLiteralValueOptions = {
    'base-type'?: MetabaseLibSchemaCommonBaseType;
    'database-type'?: MetabaseLibSchemaCommonNonBlankString;
    'display-name'?: MetabaseLibSchemaCommonNonBlankString;
    'effective-type': string;
    'lib/uuid': MetabaseLibSchemaCommonUuid;
    name?: MetabaseLibSchemaCommonNonBlankString;
    'semantic-type'?: MetabaseLibSchemaCommonSemanticOrRelationType;
    unit?: MetabaseLibSchemaTemporalBucketingUnit;
};

export type MetabaseLibSchemaLiteralDate = unknown | MetabaseLibSchemaLiteralStringDate;

export type MetabaseLibSchemaLiteralDatetime = MetabaseLibSchemaLiteralStringDatetime | unknown;

export type MetabaseLibSchemaLiteralInteger = number | unknown;

export type MetabaseLibSchemaLiteralJvmBigDecimal = unknown;

export type MetabaseLibSchemaLiteralJvmFloat = unknown;

export type MetabaseLibSchemaLiteralLiteral = null | boolean | string | MetabaseLibSchemaLiteralInteger | MetabaseLibSchemaLiteralNonIntegerReal | MetabaseLibSchemaLiteralTemporal;

export type MetabaseLibSchemaLiteralNonIntegerReal = number | MetabaseLibSchemaLiteralJvmFloat | MetabaseLibSchemaLiteralJvmBigDecimal;

export type MetabaseLibSchemaLiteralTemporal = MetabaseLibSchemaLiteralDate | MetabaseLibSchemaLiteralTime | MetabaseLibSchemaLiteralDatetime;

/**
 * time literal
 */
export type MetabaseLibSchemaLiteralTime = MetabaseLibSchemaLiteralStringTime | unknown;

export type MetabaseLibSchemaMbqlClauseClause = unknown | MbqlClause___ | MbqlClause__ | MbqlClause__2 | MbqlClause | _heyapi_504_ | MbqlClause__3 | MbqlClause___2 | MbqlClause__4 | MbqlClause__5 | MbqlClause___3 | MbqlClauseAbs | MbqlClauseAbsoluteDatetime | MbqlClauseAggregation | MbqlClauseAnd | MbqlClauseAsc | MbqlClauseAvg | MbqlClauseBetween | MbqlClauseCase | MbqlClauseCeil | MbqlClauseCoalesce | MbqlClauseConcat | MbqlClauseContains | MbqlClauseConvertTimezone | MbqlClauseCount | MbqlClauseCountWhere | MbqlClauseCumCount | MbqlClauseCumSum | MbqlClauseDate | MbqlClauseDatetime | MbqlClauseDatetimeAdd | MbqlClauseDatetimeDiff | MbqlClauseDatetimeSubtract | MbqlClauseDayName | MbqlClauseDesc | MbqlClauseDistinct | MbqlClauseDistinctWhere | MbqlClauseDoesNotContain | MbqlClauseDomain | MbqlClauseDuring | MbqlClauseEndsWith | MbqlClauseExp | MbqlClauseExpression | MbqlClauseField | MbqlClauseFloat | MbqlClauseFloor | MbqlClauseGetDay | MbqlClauseGetDayOfWeek | MbqlClauseGetHour | MbqlClauseGetMinute | MbqlClauseGetMonth | MbqlClauseGetQuarter | MbqlClauseGetSecond | MbqlClauseGetWeek | MbqlClauseGetYear | MbqlClauseHost | MbqlClauseIf | MbqlClauseIn | MbqlClauseInside | MbqlClauseInteger | MbqlClauseInterval | MbqlClauseIsEmpty | MbqlClauseIsNull | MbqlClauseLength | MbqlClauseLog | MbqlClauseLower | MbqlClauseLtrim | MbqlClauseMax | MbqlClauseMedian | MbqlClauseMetric | MbqlClauseMin | MbqlClauseMonthName | MbqlClauseNot | MbqlClauseNotEmpty | MbqlClauseNotIn | MbqlClauseNotNull | MbqlClauseNow | MbqlClauseOffset | MbqlClauseOr | MbqlClausePath | MbqlClausePercentile | MbqlClausePower | MbqlClauseQuarterName | MbqlClauseRegexMatchFirst | MbqlClauseRelativeDatetime | MbqlClauseRelativeTimeInterval | MbqlClauseReplace | MbqlClauseRound | MbqlClauseRtrim | MbqlClauseSegment | MbqlClauseShare | MbqlClauseSplitPart | MbqlClauseSqrt | MbqlClauseStartsWith | MbqlClauseStddev | MbqlClauseSubdomain | MbqlClauseSubstring | MbqlClauseSum | MbqlClauseSumWhere | MbqlClauseTemporalExtract | MbqlClauseText | MbqlClauseTime | MbqlClauseTimeInterval | MbqlClauseToday | MbqlClauseTrim | MbqlClauseUpper | MbqlClauseValue | MbqlClauseVar;

/**
 * All acceptable card types.
 *
 * Previously (< 49), we only had 2 card types: question and model, which were differentiated using the boolean
 * `dataset` column. Soon we'll have more card types (e.g: metric) and we will longer be able to use a boolean column
 * to differentiate between all types. So we've added a new `type` column for this purpose.
 *
 * Migrating all the code to use `report_card.type` will be quite an effort, we decided that we'll migrate it
 * gradually.
 */
export const MetabaseLibSchemaMetadataCardType = {
    QUESTION: 'question',
    METRIC: 'metric',
    MODEL: 'model'
} as const;

/**
 * All acceptable card types.
 *
 * Previously (< 49), we only had 2 card types: question and model, which were differentiated using the boolean
 * `dataset` column. Soon we'll have more card types (e.g: metric) and we will longer be able to use a boolean column
 * to differentiate between all types. So we've added a new `type` column for this purpose.
 *
 * Migrating all the code to use `report_card.type` will be quite an effort, we decided that we'll migrate it
 * gradually.
 */
export type MetabaseLibSchemaMetadataCardType = typeof MetabaseLibSchemaMetadataCardType[keyof typeof MetabaseLibSchemaMetadataCardType];

export const MetabaseLibSchemaMetadataColumnHasFieldValues = {
    AUTO_LIST: 'auto-list',
    LIST: 'list',
    NONE: 'none',
    SEARCH: 'search'
} as const;

export type MetabaseLibSchemaMetadataColumnHasFieldValues = typeof MetabaseLibSchemaMetadataColumnHasFieldValues[keyof typeof MetabaseLibSchemaMetadataColumnHasFieldValues];

/**
 * Possible values for `column.source` -- this is added by [[metabase.lib.metadata.result-metadata]] for historical
 * reasons (it is used in a few places in the FE). DO NOT use this in the backend for any purpose, use `:lib/source`
 * instead.
 */
export const MetabaseLibSchemaMetadataColumnLegacySource = {
    AGGREGATION: 'aggregation',
    FIELDS: 'fields',
    BREAKOUT: 'breakout',
    NATIVE: 'native'
} as const;

/**
 * Possible values for `column.source` -- this is added by [[metabase.lib.metadata.result-metadata]] for historical
 * reasons (it is used in a few places in the FE). DO NOT use this in the backend for any purpose, use `:lib/source`
 * instead.
 */
export type MetabaseLibSchemaMetadataColumnLegacySource = typeof MetabaseLibSchemaMetadataColumnLegacySource[keyof typeof MetabaseLibSchemaMetadataColumnLegacySource];

/**
 * External remapping (Dimension) for a column. From the [[metabase.warehouse-schema.models.dimension]] with `type =
 * external` associated with a `Field` in the application database.
 * See [[metabase.query-processor.middleware.add-remaps]] for what this means.
 */
export type MetabaseLibSchemaMetadataColumnRemappingExternal = {
    'field-id': MetabaseLibSchemaIdField;
    id: MetabaseLibSchemaIdDimension;
    'lib/type': 'metadata.column.remapping/external';
    name: MetabaseLibSchemaCommonNonBlankString;
};

/**
 * Internal remapping (FieldValues) for a column. From [[metabase.warehouse-schema.models.dimension]] with `type =
 * internal` and the [[metabase.warehouse-schema.models.field-values]] associated with a `Field` in the application
 * database. See [[metabase.query-processor.middleware.add-remaps]] for what this means.
 */
export type MetabaseLibSchemaMetadataColumnRemappingInternal = {
    'human-readable-values': Array<unknown>;
    id: MetabaseLibSchemaIdDimension;
    'lib/type': 'metadata.column.remapping/internal';
    name: MetabaseLibSchemaCommonNonBlankString;
    values: Array<unknown>;
};

/**
 * `:lib/source` -- where a column came from with respect to the current stage.
 *
 * Traditionally, `:lib/source` meant something slightly different -- it denoted what part of the current stage a
 * column came from, and thus included two additional options -- `:source/fields`, for columns used by `:fields`, and
 * `:source/breakouts`, for columns used in `:breakout`. This was not really useful information and made `:lib/source`
 * itself useless for determining if a column was 'inherited' or not (i.e., whether it came from a previous stage,
 * source card, or a join, and should get field name refs instead of field ID refs --
 * see [[metabase.lib.field.util/inherited-column?]]).
 */
export const MetabaseLibSchemaMetadataColumnSource = {
    SOURCE_CARD: 'source/card',
    SOURCE_NATIVE: 'source/native',
    SOURCE_PREVIOUS_STAGE: 'source/previous-stage',
    SOURCE_TABLE_DEFAULTS: 'source/table-defaults',
    SOURCE_AGGREGATIONS: 'source/aggregations',
    SOURCE_JOINS: 'source/joins',
    SOURCE_EXPRESSIONS: 'source/expressions',
    SOURCE_IMPLICITLY_JOINABLE: 'source/implicitly-joinable'
} as const;

/**
 * `:lib/source` -- where a column came from with respect to the current stage.
 *
 * Traditionally, `:lib/source` meant something slightly different -- it denoted what part of the current stage a
 * column came from, and thus included two additional options -- `:source/fields`, for columns used by `:fields`, and
 * `:source/breakouts`, for columns used in `:breakout`. This was not really useful information and made `:lib/source`
 * itself useless for determining if a column was 'inherited' or not (i.e., whether it came from a previous stage,
 * source card, or a join, and should get field name refs instead of field ID refs --
 * see [[metabase.lib.field.util/inherited-column?]]).
 */
export type MetabaseLibSchemaMetadataColumnSource = typeof MetabaseLibSchemaMetadataColumnSource[keyof typeof MetabaseLibSchemaMetadataColumnSource];

/**
 * Do additional validation for column metadata based on `:lib/source`.
 */
export type MetabaseLibSchemaMetadataColumnValidateForSource = MetabaseLibSchemaMetadataColumnValidateForSourceCard | MetabaseLibSchemaMetadataColumnValidateForSourceNative | MetabaseLibSchemaMetadataColumnValidateForSourcePreviousStage | MetabaseLibSchemaMetadataColumnValidateForSourceTableDefaults | MetabaseLibSchemaMetadataColumnValidateForSourceAggregations | MetabaseLibSchemaMetadataColumnValidateForSourceJoins | MetabaseLibSchemaMetadataColumnValidateForSourceExpressions | MetabaseLibSchemaMetadataColumnValidateForSourceImplicitlyJoinable | unknown;

export type MetabaseLibSchemaMetadataColumnValidateForSourceAggregations = unknown;

export type MetabaseLibSchemaMetadataColumnValidateForSourceCard = unknown;

export type MetabaseLibSchemaMetadataColumnValidateForSourceExpressions = unknown;

export type MetabaseLibSchemaMetadataColumnValidateForSourceImplicitlyJoinable = unknown;

export type MetabaseLibSchemaMetadataColumnValidateForSourceJoins = unknown;

export type MetabaseLibSchemaMetadataColumnValidateForSourceNative = unknown;

export type MetabaseLibSchemaMetadataColumnValidateForSourcePreviousStage = unknown;

export type MetabaseLibSchemaMetadataColumnValidateForSourceTableDefaults = unknown;

export const MetabaseLibSchemaMetadataColumnVisibilityType = {
    RETIRED: 'retired',
    SENSITIVE: 'sensitive',
    NORMAL: 'normal',
    HIDDEN: 'hidden',
    DETAILS_ONLY: 'details-only'
} as const;

export type MetabaseLibSchemaMetadataColumnVisibilityType = typeof MetabaseLibSchemaMetadataColumnVisibilityType[keyof typeof MetabaseLibSchemaMetadataColumnVisibilityType];

/**
 * Malli schema for a valid map of column metadata, which can mean one of two things:
 *
 * 1. Metadata about a particular Field in the application database. This will always have an `:id`
 *
 * 2. Results metadata from a column in `data.cols` and/or `data.results_metadata.columns` in a Query Processor
 * response, or saved in something like `Card.result_metadata`. These *may* have an `:id`, or may not -- columns
 * coming back from native queries or things like `SELECT count(*)` aren't associated with any particular `Field`
 * and thus will not have an `:id`.
 *
 * Now maybe these should be two different schemas, but `:id` being there or not is the only real difference; besides
 * that they are largely compatible. So they're the same for now. We can revisit this in the future if we actually want
 * to differentiate between the two versions.
 */
export type MetabaseLibSchemaMetadataColumn = {
    'visibility-type'?: MetabaseLibSchemaMetadataColumnVisibilityType;
    'fk-join-alias'?: MetabaseLibSchemaJoinAlias;
    'lib/external-remap'?: MetabaseLibSchemaMetadataColumnRemappingExternal;
    'inherited-temporal-unit'?: MetabaseLibSchemaTemporalBucketingUnit;
    'lib/source-column-alias'?: MetabaseLibSchemaMetadataSourceColumnAlias;
    'database-type'?: string;
    'lib/type': 'metadata/column';
    settings?: {
        [key: string]: unknown;
    };
    fingerprint?: MetabaseLibSchemaMetadataFingerprintFingerprint;
    'display-name'?: string;
    'lib/source-uuid'?: MetabaseLibSchemaCommonUuid;
    'qp/implicit-field?'?: boolean;
    'lib/ref-name'?: string;
    id?: MetabaseLibSchemaIdField;
    'effective-type'?: MetabaseLibSchemaCommonBaseType;
    'lib/deduplicated-name'?: MetabaseLibSchemaMetadataDeduplicatedName;
    'base-type': MetabaseLibSchemaCommonBaseType;
    'lib/original-expression-name'?: MetabaseLibSchemaCommonNonBlankString;
    'fk-field-name'?: string;
    name: string;
    'lib/card-id'?: MetabaseLibSchemaIdCard;
    'lib/expression-name'?: MetabaseLibSchemaCommonNonBlankString;
    'lib/breakout?'?: boolean;
    'metabase.lib.field/temporal-unit'?: MetabaseLibSchemaTemporalBucketingUnit;
    'metabase.lib.field/binning'?: MetabaseLibSchemaBinningBinning;
    'nfc-path'?: Array<string>;
    'lib/model-display-name'?: string;
    'has-field-values'?: MetabaseLibSchemaMetadataColumnHasFieldValues;
    'lib/internal-remap'?: MetabaseLibSchemaMetadataColumnRemappingInternal;
    'selected?'?: boolean;
    'source-alias'?: MetabaseLibSchemaCommonNonBlankString;
    source?: MetabaseLibSchemaMetadataColumnLegacySource;
    'metabase.lib.join/join-alias'?: MetabaseLibSchemaJoinAlias;
    'fk-field-id'?: MetabaseLibSchemaIdField;
    'lib/original-binning'?: MetabaseLibSchemaBinningBinning;
    'lib/original-join-alias'?: MetabaseLibSchemaJoinAlias;
    'lib/original-display-name'?: string;
    'lib/source'?: MetabaseLibSchemaMetadataColumnSource;
    active?: boolean;
    'lib/ref-display-name'?: string;
    'lib/original-name'?: MetabaseLibSchemaMetadataOriginalName;
    'semantic-type'?: MetabaseLibSchemaCommonSemanticOrRelationType;
    'fk-target-field-id'?: MetabaseLibSchemaIdField;
    'field-ref'?: MetabaseLegacyMbqlSchemaReference;
    'lib/desired-column-alias'?: MetabaseLibSchemaMetadataDesiredColumnAlias;
} & MetabaseLibSchemaCommonKebabCasedMap & MetabaseLibSchemaMetadataColumnValidateForSource;

/**
 * The simply-deduplicated name that was historically used in QP results metadata (originally calculated by
 * the [[metabase.query-processor.middleware.annotate]] middleware, now calculated
 * by [[metabase.lib.middleware.result-metadata]]). This just adds suffixes to column names e.g. `ID` and `ID` become
 * `ID` and `ID_2`, respectively. Kept around because many old field refs use this column name.
 */
export type MetabaseLibSchemaMetadataDeduplicatedName = string;

/**
 * Name we should use as a column alias for a column in this stage of a query. The desired column alias in stage N
 * becomes the source column alias in stage N+1. The right-hand side (RHS) in
 *
 * SELECT lhs AS rhs
 */
export type MetabaseLibSchemaMetadataDesiredColumnAlias = string;

/**
 * Fingerprint values that Fields of all types should have.
 */
export type MetabaseLibSchemaMetadataFingerprintFingerprintGlobal = {
    'distinct-count'?: number;
    'nil%'?: MetabaseLibSchemaMetadataFingerprintPercent;
};

/**
 * Schema for fingerprint information for Fields deriving from `:type/Number`.
 */
export type MetabaseLibSchemaMetadataFingerprintFingerprintNumber = {
    avg?: number;
    max?: number;
    min?: number;
    q1?: number;
    q3?: number;
    sd?: number;
};

/**
 * Schema for fingerprint information for Fields deriving from `:type/Temporal`.
 */
export type MetabaseLibSchemaMetadataFingerprintFingerprintTemporal = {
    earliest?: string;
    latest?: string;
};

/**
 * Schema for fingerprint information for Fields deriving from `:type/Text`.
 */
export type MetabaseLibSchemaMetadataFingerprintFingerprintText = {
    'average-length'?: number;
    'percent-email'?: MetabaseLibSchemaMetadataFingerprintPercent;
    'percent-json'?: MetabaseLibSchemaMetadataFingerprintPercent;
    'percent-state'?: MetabaseLibSchemaMetadataFingerprintPercent;
    'percent-url'?: MetabaseLibSchemaMetadataFingerprintPercent;
};

/**
 * Schema for type-specific fingerprint information.
 */
export type MetabaseLibSchemaMetadataFingerprintFingerprintTypeSpecific = {
    [key: string]: {
        [key: string]: unknown;
    };
} & {
    'type/DateTime'?: MetabaseLibSchemaMetadataFingerprintFingerprintTemporal;
    'type/Number'?: MetabaseLibSchemaMetadataFingerprintFingerprintNumber;
    'type/Text'?: MetabaseLibSchemaMetadataFingerprintFingerprintText;
};

/**
 * Schema for a Field 'fingerprint' generated as part of the analysis stage. Used to power the 'classification'
 * sub-stage of analysis. Stored as the `fingerprint` column of Field.
 */
export type MetabaseLibSchemaMetadataFingerprintFingerprint = {
    experimental?: {
        [key: string]: unknown;
    };
    global?: MetabaseLibSchemaMetadataFingerprintFingerprintGlobal;
    type?: MetabaseLibSchemaMetadataFingerprintFingerprintTypeSpecific;
};

/**
 * Schema for something represting a percentage. A floating-point value between (inclusive) 0 and 1.
 */
export type MetabaseLibSchemaMetadataFingerprintPercent = number;

/**
 * Schema for the maps in card `:result-metadata` and similar. These can be either
 * `:metabase.lib.schema.metadata/result-metadata` (i.e., kebab-cased) maps, or map snake_cased as returned by QP
 * metadata, but they should NOT be a mixture of both -- if we mixed them somehow there is a bug in our code.
 */
export type MetabaseLibSchemaMetadataLibOrLegacyColumn = ({
    'visibility-type'?: MetabaseLibSchemaMetadataColumnVisibilityType;
    'fk-join-alias'?: MetabaseLibSchemaJoinAlias;
    'lib/external-remap'?: MetabaseLibSchemaMetadataColumnRemappingExternal;
    'inherited-temporal-unit'?: MetabaseLibSchemaTemporalBucketingUnit;
    'lib/source-column-alias'?: MetabaseLibSchemaMetadataSourceColumnAlias;
    'database-type'?: string;
    'lib/type': 'metadata/column';
    settings?: {
        [key: string]: unknown;
    };
    fingerprint?: MetabaseLibSchemaMetadataFingerprintFingerprint;
    'display-name'?: string;
    'lib/source-uuid'?: MetabaseLibSchemaCommonUuid;
    'qp/implicit-field?'?: boolean;
    'lib/ref-name'?: string;
    id?: MetabaseLibSchemaIdField;
    'effective-type'?: MetabaseLibSchemaCommonBaseType;
    'lib/deduplicated-name'?: MetabaseLibSchemaMetadataDeduplicatedName;
    'base-type': MetabaseLibSchemaCommonBaseType;
    'lib/original-expression-name'?: MetabaseLibSchemaCommonNonBlankString;
    'fk-field-name'?: string;
    name: string;
    'lib/card-id'?: MetabaseLibSchemaIdCard;
    'lib/expression-name'?: MetabaseLibSchemaCommonNonBlankString;
    'lib/breakout?'?: boolean;
    'metabase.lib.field/temporal-unit'?: MetabaseLibSchemaTemporalBucketingUnit;
    'metabase.lib.field/binning'?: MetabaseLibSchemaBinningBinning;
    'nfc-path'?: Array<string>;
    'lib/model-display-name'?: string;
    'has-field-values'?: MetabaseLibSchemaMetadataColumnHasFieldValues;
    'lib/internal-remap'?: MetabaseLibSchemaMetadataColumnRemappingInternal;
    'selected?'?: boolean;
    'source-alias'?: MetabaseLibSchemaCommonNonBlankString;
    source?: MetabaseLibSchemaMetadataColumnLegacySource;
    'metabase.lib.join/join-alias'?: MetabaseLibSchemaJoinAlias;
    'fk-field-id'?: MetabaseLibSchemaIdField;
    'lib/original-binning'?: MetabaseLibSchemaBinningBinning;
    'lib/original-join-alias'?: MetabaseLibSchemaJoinAlias;
    'lib/original-display-name'?: string;
    'lib/source'?: MetabaseLibSchemaMetadataColumnSource;
    active?: boolean;
    'lib/ref-display-name'?: string;
    'lib/original-name'?: MetabaseLibSchemaMetadataOriginalName;
    'semantic-type'?: MetabaseLibSchemaCommonSemanticOrRelationType;
    'fk-target-field-id'?: MetabaseLibSchemaIdField;
    'field-ref'?: MetabaseLegacyMbqlSchemaReference;
    'lib/desired-column-alias'?: MetabaseLibSchemaMetadataDesiredColumnAlias;
} & MetabaseLibSchemaCommonKebabCasedMap & MetabaseLibSchemaMetadataColumnValidateForSource) | MetabaseLegacyMbqlSchemaLegacyColumnMetadata;

/**
 * Schema for something that satisfies the [[metabase.lib.metadata.protocols/MetadataProvider]] protocol.
 */
export type MetabaseLibSchemaMetadataMetadataProvider = MetabaseLibMetadataProtocolsMetadataProvider;

/**
 * The original name of the column as it appeared in the very first place it came from (i.e., the physical name of the
 * column in the table it appears in). This should be the same as the `:lib/source-column-alias` for the very first
 * usage of the column.
 * Allowed to be blank because some databases like SQL Server allow blank column names.
 */
export type MetabaseLibSchemaMetadataOriginalName = string;

/**
 * Name for a column as returned/projected by the previous stage of the query or source Table/source Card. The
 * left-hand side (LHS) of
 *
 * SELECT lhs AS rhs
 */
export type MetabaseLibSchemaMetadataSourceColumnAlias = string;

/**
 * Metadata about the columns returned by a particular stage of a pMBQL query. For example a single-stage native query
 * like
 *
 * {:database 1
 * :lib/type :mbql/query
 * :stages   [{:lib/type :mbql.stage/mbql
 * :native   "SELECT id, name FROM VENUES;"}]}
 *
 * might have stage metadata like
 *
 * {:columns [{:name "id", :base-type :type/Integer}
 * {:name "name", :base-type :type/Text}]}
 *
 * associated with the query's lone stage.
 *
 * At some point in the near future we will hopefully attach this metadata directly to each stage in a query, so a
 * multi-stage query will have `:lib/stage-metadata` for each stage. The main goal is to facilitate things like
 * returning lists of visible or filterable columns for a given stage of a query. This is TBD, see #28717 for a WIP
 * implementation of this idea.
 *
 * This is the same format as the results metadata returned with QP results in `data.results_metadata`. The `:columns`
 * portion of this (`data.results_metadata.columns`) is also saved as `Card.result_metadata` for Saved Questions.
 *
 * Note that queries currently actually come back with both `data.results_metadata` AND `data.cols`; it looks like the
 * Frontend actually *merges* these together -- see `applyMetadataDiff` in
 * `frontend/src/metabase/query_builder/selectors.js` -- but this is ridiculous. Let's try to merge anything missing in
 * `results_metadata` into `cols` going forward so things don't need to be manually merged in the future.
 */
export type MetabaseLibSchemaMetadataStage = {
    columns: Array<MetabaseLibSchemaMetadataColumn>;
    'lib/type': 'metadata/results';
};

/**
 * Additional options that can be used to toggle middleware on or off.
 */
export type MetabaseLibSchemaMiddlewareOptionsMiddlewareOptions = {
    /**
     * Whether to add some default `max-results` and `max-results-bare-rows` constraints. By default, none are added,
     * although the functions that ultimately power most API endpoints tend to set this to `true`. See
     * `add-constraints` middleware for more details.
     */
    'add-default-userland-constraints?'?: boolean;
    /**
     * Disable applying a default limit on the query results. Handled in the `add-default-limit` middleware. If true,
     * this will override the `:max-results` and `:max-results-bare-rows` values in `Constraints`.
     */
    'disable-max-results?'?: boolean;
    /**
     * Disable the MBQL->native middleware. If you do this, the query will not work at all, so there are no cases where
     * you should set this yourself. This is only used by the `metabase.query-processor.preprocess/preprocess` function to
     * get the fully pre-processed query without attempting to convert it to native.
     */
    'disable-mbql->native?'?: boolean;
    /**
     * Should we skip converting datetime types to ISO-8601 strings with appropriate timezone when post-processing
     * results? Used by `metabase.query-processor.middleware.format-rows`default `false`.
     */
    'format-rows?'?: boolean;
    /**
     * Whether to process a question's visualization settings and include them in the result metadata so that they can
     * incorporated into an export. Used by `metabase.query-processor.middleware.visualization-settings`; default
     * `false`.
     */
    'process-viz-settings?'?: boolean;
    /**
     * Should we skip adding `results_metadata` to query results after running the query? Used by
     * `metabase.query-processor.middleware.results-metadata`; default `false`. (Note: we may change the name of this
     * column in the near future, to `result_metadata`, to fix inconsistencies in how we name things.)
     */
    'skip-results-metadata?'?: boolean;
    /**
     * Userland queries are ones ran as a result of an API call, Pulse, or the like. Special handling is done in
     * certain userland-only middleware for such queries -- results are returned in a slightly different format, and
     * QueryExecution entries are normally saved, unless you pass `:no-save` as the option.
     */
    'userland-query?'?: boolean;
};

export type MetabaseLibSchemaOrderByOrderBy = MbqlClauseAsc | MbqlClauseDesc;

export type MetabaseLibSchemaOrderByOrderBys = Array<MetabaseLibSchemaOrderByOrderBy> & MetabaseLibSchemaUtilDistinctMbqlClauses;

/**
 * `page` = page num, starting with 1. `items` = number of items per page.
 * e.g.
 *
 * {:page 1, :items 10} = items 1-10
 * {:page 2, :items 10} = items 11-20
 */
export type MetabaseLibSchemaPage = {
    items: number;
    page: number;
};

export type MetabaseLibSchemaParameterDimensionOptions = {
    'stage-number'?: number;
};

export type MetabaseLibSchemaParameterDimensionTarget = MetabaseLegacyMbqlSchemaExpression | MetabaseLibSchemaParameterTemplateTag | MetabaseLegacyMbqlSchemaField;

export type MetabaseLibSchemaParameterParameterValue = unknown;

export type MetabaseLibSchemaParameterTargetLegacyExpressionRef = MetabaseLegacyMbqlSchemaExpression;

export type MetabaseLibSchemaParameterTargetLegacyFieldRef = MetabaseLegacyMbqlSchemaField;

export type MetabaseLibSchemaParameterVariableTarget = MetabaseLegacyMbqlSchemaField | MetabaseLibSchemaParameterTemplateTag;

export type MetabaseLibSchemaParameterDimension = unknown;

export type MetabaseLibSchemaParameterId = MetabaseLibSchemaCommonNonBlankString;

/**
 * Schema for the *value* of a parameter (e.g. a Dashboard parameter or a native query template tag) as passed in as
 * part of the `:parameters` list in a query.
 */
export type MetabaseLibSchemaParameterParameter = {
    default?: unknown;
    id?: MetabaseLibSchemaCommonNonBlankString;
    name?: MetabaseLibSchemaCommonNonBlankString;
    required?: unknown;
    slug?: MetabaseLibSchemaCommonNonBlankString;
    target?: MetabaseLibSchemaParameterTarget;
    type: MetabaseLibSchemaParameterType;
    value?: MetabaseLibSchemaParameterParameterValue;
} & MetabaseLibSchemaCommonKebabCasedMap;

/**
 * Schema for a list of `:parameters` as passed in to a query.
 */
export type MetabaseLibSchemaParameterParameters = Array<MetabaseLibSchemaParameterParameter>;

export type MetabaseLibSchemaParameterTarget = MetabaseLibSchemaParameterDimension | MetabaseLibSchemaParameterVariable | MetabaseLibSchemaParameterTextTag | MetabaseLegacyMbqlSchemaField;

/**
 * This is the reference like [:template-tag <whatever>], not the schema for native query template tags -- that lives
 * in [[metabase.lib.schema.template-tag]].
 */
export type MetabaseLibSchemaParameterTemplateTag = [
    'template-tag',
    {
        id: MetabaseLibSchemaCommonNonBlankString;
    } | MetabaseLibSchemaCommonNonBlankString
];

/**
 * A :text-tag parameter :target applies to parameterized text cards in viz settings
 */
export type MetabaseLibSchemaParameterTextTag = [
    'text-tag',
    string
];

/**
 * Valid parameter :type
 */
export const MetabaseLibSchemaParameterType = {
    NUMBER: 'number',
    TEXT: 'text',
    DATE: 'date',
    BOOLEAN: 'boolean',
    DATE_SINGLE: 'date/single',
    ID: 'id',
    CATEGORY: 'category',
    LOCATION_CITY: 'location/city',
    LOCATION_STATE: 'location/state',
    LOCATION_ZIP_CODE: 'location/zip_code',
    LOCATION_COUNTRY: 'location/country',
    DATE_RANGE: 'date/range',
    DATE_MONTH_YEAR: 'date/month-year',
    DATE_QUARTER_YEAR: 'date/quarter-year',
    DATE_RELATIVE: 'date/relative',
    DATE_ALL_OPTIONS: 'date/all-options',
    TEMPORAL_UNIT: 'temporal-unit',
    'NUMBER/!=': 'number/!=',
    'NUMBER/<=': 'number/<=',
    'NUMBER/=': 'number/=',
    'NUMBER/>=': 'number/>=',
    NUMBER_BETWEEN: 'number/between',
    'STRING/!=': 'string/!=',
    'STRING/=': 'string/=',
    STRING_CONTAINS: 'string/contains',
    STRING_DOES_NOT_CONTAIN: 'string/does-not-contain',
    STRING_ENDS_WITH: 'string/ends-with',
    STRING_STARTS_WITH: 'string/starts-with',
    'BOOLEAN/=': 'boolean/='
} as const;

/**
 * Valid parameter :type
 */
export type MetabaseLibSchemaParameterType = typeof MetabaseLibSchemaParameterType[keyof typeof MetabaseLibSchemaParameterType];

export type MetabaseLibSchemaParameterVariable = [
    'variable',
    MetabaseLibSchemaParameterVariableTarget
];

export const MetabaseLibSchemaParameterWidgetType = {
    NONE: 'none',
    NUMBER: 'number',
    TEXT: 'text',
    DATE: 'date',
    BOOLEAN: 'boolean',
    DATE_SINGLE: 'date/single',
    ID: 'id',
    CATEGORY: 'category',
    LOCATION_CITY: 'location/city',
    LOCATION_STATE: 'location/state',
    LOCATION_ZIP_CODE: 'location/zip_code',
    LOCATION_COUNTRY: 'location/country',
    DATE_RANGE: 'date/range',
    DATE_MONTH_YEAR: 'date/month-year',
    DATE_QUARTER_YEAR: 'date/quarter-year',
    DATE_RELATIVE: 'date/relative',
    DATE_ALL_OPTIONS: 'date/all-options',
    TEMPORAL_UNIT: 'temporal-unit',
    'NUMBER/!=': 'number/!=',
    'NUMBER/<=': 'number/<=',
    'NUMBER/=': 'number/=',
    'NUMBER/>=': 'number/>=',
    NUMBER_BETWEEN: 'number/between',
    'STRING/!=': 'string/!=',
    'STRING/=': 'string/=',
    STRING_CONTAINS: 'string/contains',
    STRING_DOES_NOT_CONTAIN: 'string/does-not-contain',
    STRING_ENDS_WITH: 'string/ends-with',
    STRING_STARTS_WITH: 'string/starts-with',
    'BOOLEAN/=': 'boolean/='
} as const;

export type MetabaseLibSchemaParameterWidgetType = typeof MetabaseLibSchemaParameterWidgetType[keyof typeof MetabaseLibSchemaParameterWidgetType];

export type MetabaseLibSchemaQuery = {
    'lib/metadata'?: MetabaseLibSchemaMetadataMetadataProvider;
    'update-row'?: MetabaseLibSchemaActionsRow;
    'lib/type': 'mbql/query';
    settings?: MetabaseLibSchemaSettingsSettings;
    constraints?: MetabaseLibSchemaConstraintsConstraints;
    info?: MetabaseLibSchemaInfoInfo;
    middleware?: MetabaseLibSchemaMiddlewareOptionsMiddlewareOptions;
    database?: MetabaseLibSchemaIdSavedQuestionsVirtualDatabase | MetabaseLibSchemaIdDatabase;
    stages: MetabaseLibSchemaStages;
    parameters?: MetabaseLibSchemaParameterParameters;
    'create-row'?: MetabaseLibSchemaActionsRow;
} & MetabaseLibSchemaUtilUniqueUuids & unknown;

export type MetabaseLibSchemaRefExpressionOptions = {
    'base-type'?: MetabaseLibSchemaCommonBaseType;
    'database-type'?: MetabaseLibSchemaCommonNonBlankString;
    'display-name'?: MetabaseLibSchemaCommonNonBlankString;
    'effective-type'?: MetabaseLibSchemaCommonBaseType;
    'lib/uuid': MetabaseLibSchemaCommonUuid;
    name?: MetabaseLibSchemaCommonNonBlankString;
    'semantic-type'?: MetabaseLibSchemaCommonSemanticOrRelationType;
    'temporal-unit'?: MetabaseLibSchemaTemporalBucketingUnit;
};

export type MetabaseLibSchemaRefFieldId = [
    'field',
    MetabaseLibSchemaRefFieldOptions,
    MetabaseLibSchemaIdField
];

export type MetabaseLibSchemaRefFieldLiteral = [
    'field',
    MetabaseLibSchemaRefFieldLiteralOptions,
    string
];

export type MetabaseLibSchemaRefFieldLiteralOptions = {
    binning?: MetabaseLibSchemaBinningBinning;
    'inherited-temporal-unit'?: MetabaseLibSchemaTemporalBucketingUnit;
    'database-type'?: MetabaseLibSchemaCommonNonBlankString;
    'metabase.lib.field/original-temporal-unit'?: MetabaseLibSchemaTemporalBucketingUnit;
    'display-name'?: MetabaseLibSchemaCommonNonBlankString;
    'effective-type'?: MetabaseLibSchemaCommonBaseType;
    'base-type': string;
    'lib/uuid': MetabaseLibSchemaCommonUuid;
    name?: MetabaseLibSchemaCommonNonBlankString;
    'metabase.lib.field/original-effective-type'?: MetabaseLibSchemaCommonBaseType;
    'source-field'?: MetabaseLibSchemaIdField;
    'join-alias'?: MetabaseLibSchemaJoinAlias;
    'lib/original-binning'?: MetabaseLibSchemaBinningBinning;
    'temporal-unit'?: MetabaseLibSchemaTemporalBucketingUnit;
    'semantic-type'?: MetabaseLibSchemaCommonSemanticOrRelationType;
};

export type MetabaseLibSchemaRefFieldOptions = {
    binning?: MetabaseLibSchemaBinningBinning;
    'inherited-temporal-unit'?: MetabaseLibSchemaTemporalBucketingUnit;
    'database-type'?: MetabaseLibSchemaCommonNonBlankString;
    'metabase.lib.field/original-temporal-unit'?: MetabaseLibSchemaTemporalBucketingUnit;
    'display-name'?: MetabaseLibSchemaCommonNonBlankString;
    'effective-type'?: MetabaseLibSchemaCommonBaseType;
    'base-type'?: MetabaseLibSchemaCommonBaseType;
    'lib/uuid': MetabaseLibSchemaCommonUuid;
    name?: MetabaseLibSchemaCommonNonBlankString;
    'metabase.lib.field/original-effective-type'?: MetabaseLibSchemaCommonBaseType;
    'source-field'?: MetabaseLibSchemaIdField;
    'join-alias'?: MetabaseLibSchemaJoinAlias;
    'lib/original-binning'?: MetabaseLibSchemaBinningBinning;
    'temporal-unit'?: MetabaseLibSchemaTemporalBucketingUnit;
    'semantic-type'?: MetabaseLibSchemaCommonSemanticOrRelationType;
};

export type MetabaseLibSchemaRefAggregationOptions = {
    'base-type'?: MetabaseLibSchemaCommonBaseType;
    'database-type'?: MetabaseLibSchemaCommonNonBlankString;
    'display-name'?: string;
    'effective-type'?: MetabaseLibSchemaCommonBaseType;
    'lib/source-name'?: MetabaseLibSchemaCommonNonBlankString;
    'lib/uuid': MetabaseLibSchemaCommonUuid;
    name?: string;
    'semantic-type'?: MetabaseLibSchemaCommonSemanticOrRelationType;
};

export type MetabaseLibSchemaRefRef = MetabaseLibSchemaMbqlClauseClause;

/**
 * Options that tweak the behavior of the query processor.
 */
export type MetabaseLibSchemaSettingsSettings = {
    /**
     * The timezone the query should be ran in, overriding the default report timezone for the instance.
     */
    'report-timezone'?: MetabaseLibSchemaExpressionTemporalTimezoneId;
};

export type MetabaseLibSchemaStage = {
    'lib/type': MetabaseLibSchemaStageType;
} & (MetabaseLibSchemaStageNative | MetabaseLibSchemaStageMbql) & unknown;

export type MetabaseLibSchemaStages = Array<MetabaseLibSchemaStage> & MetabaseLibSchemaStagesValidRefs;

export type MetabaseLibSchemaTemplateTagFieldFilterOptions = {
    [key: string]: unknown;
};

export const MetabaseLibSchemaTemplateTagRawValueType = {
    DATE: 'date',
    NUMBER: 'number',
    BOOLEAN: 'boolean',
    TEXT: 'text'
} as const;

export type MetabaseLibSchemaTemplateTagRawValueType = typeof MetabaseLibSchemaTemplateTagRawValueType[keyof typeof MetabaseLibSchemaTemplateTagRawValueType];

export type MetabaseLibSchemaTemplateTagTemplateTagMapValidateNames = unknown;

export type MetabaseLibSchemaTemplateTagValueCommon = {
    default?: unknown;
    'display-name': MetabaseLibSchemaCommonNonBlankString;
    id?: MetabaseLibSchemaTemplateTagId;
    name: MetabaseLibSchemaCommonNonBlankString;
    required?: boolean;
};

export type MetabaseLibSchemaTemplateTagCommon = {
    'display-name': MetabaseLibSchemaCommonNonBlankString;
    id?: MetabaseLibSchemaTemplateTagId;
    name: MetabaseLibSchemaCommonNonBlankString;
};

export type MetabaseLibSchemaTemplateTagDisallowDimension = unknown;

export type MetabaseLibSchemaTemplateTagFieldFilter = {
    'display-name': MetabaseLibSchemaCommonNonBlankString;
    id?: MetabaseLibSchemaTemplateTagId;
    name: MetabaseLibSchemaCommonNonBlankString;
    required?: boolean;
    type: 'dimension';
    alias?: string;
    options?: MetabaseLibSchemaTemplateTagFieldFilterOptions;
    dimension?: MbqlClauseField;
    default?: unknown;
    'widget-type': MetabaseLibSchemaTemplateTagWidgetType;
};

export type MetabaseLibSchemaTemplateTagId = string | MetabaseLibSchemaCommonNonBlankString;

export type MetabaseLibSchemaTemplateTagName = MetabaseLibSchemaCommonNonBlankString;

export type MetabaseLibSchemaTemplateTagRawValue = {
    default?: unknown;
    'display-name': MetabaseLibSchemaCommonNonBlankString;
    id?: MetabaseLibSchemaTemplateTagId;
    name: MetabaseLibSchemaCommonNonBlankString;
    required?: boolean;
    type: MetabaseLibSchemaTemplateTagRawValueType;
} & MetabaseLibSchemaTemplateTagDisallowDimension;

export type MetabaseLibSchemaTemplateTagSnippet = {
    database?: MetabaseLibSchemaIdDatabase;
    'display-name': MetabaseLibSchemaCommonNonBlankString;
    id?: MetabaseLibSchemaTemplateTagId;
    name: MetabaseLibSchemaCommonNonBlankString;
    'snippet-id'?: MetabaseLibSchemaIdSnippet;
    'snippet-name': MetabaseLibSchemaCommonNonBlankString;
    type: 'snippet';
} & MetabaseLibSchemaTemplateTagDisallowDimension;

export type MetabaseLibSchemaTemplateTagSourceQuery = {
    'card-id': MetabaseLibSchemaIdCard;
    'display-name': MetabaseLibSchemaCommonNonBlankString;
    id?: MetabaseLibSchemaTemplateTagId;
    name: MetabaseLibSchemaCommonNonBlankString;
    type: 'card';
} & MetabaseLibSchemaTemplateTagDisallowDimension;

export type MetabaseLibSchemaTemplateTagTemplateTag = {
    type: MetabaseLibSchemaTemplateTagType;
} & (MetabaseLibSchemaTemplateTagTemporalUnit | MetabaseLibSchemaTemplateTagFieldFilter | MetabaseLibSchemaTemplateTagSnippet | MetabaseLibSchemaTemplateTagSourceQuery | MetabaseLibSchemaTemplateTagRawValue);

export type MetabaseLibSchemaTemplateTagTemplateTagMap = {
    [key: string]: MetabaseLibSchemaTemplateTagTemplateTag;
} & MetabaseLibSchemaTemplateTagTemplateTagMapValidateNames;

export type MetabaseLibSchemaTemplateTagTemporalUnit = {
    alias?: string;
    dimension?: MbqlClauseField;
    'display-name': MetabaseLibSchemaCommonNonBlankString;
    id?: MetabaseLibSchemaTemplateTagId;
    name: MetabaseLibSchemaCommonNonBlankString;
    type: 'temporal-unit';
};

/**
 * Schema for valid values of template tag `:type`.
 */
export const MetabaseLibSchemaTemplateTagType = {
    SNIPPET: 'snippet',
    CARD: 'card',
    DIMENSION: 'dimension',
    NUMBER: 'number',
    TEXT: 'text',
    DATE: 'date',
    BOOLEAN: 'boolean',
    TEMPORAL_UNIT: 'temporal-unit'
} as const;

/**
 * Schema for valid values of template tag `:type`.
 */
export type MetabaseLibSchemaTemplateTagType = typeof MetabaseLibSchemaTemplateTagType[keyof typeof MetabaseLibSchemaTemplateTagType];

export const MetabaseLibSchemaTemplateTagWidgetType = {
    NONE: 'none',
    NUMBER: 'number',
    TEXT: 'text',
    DATE: 'date',
    BOOLEAN: 'boolean',
    DATE_SINGLE: 'date/single',
    ID: 'id',
    CATEGORY: 'category',
    LOCATION_CITY: 'location/city',
    LOCATION_STATE: 'location/state',
    LOCATION_ZIP_CODE: 'location/zip_code',
    LOCATION_COUNTRY: 'location/country',
    DATE_RANGE: 'date/range',
    DATE_MONTH_YEAR: 'date/month-year',
    DATE_QUARTER_YEAR: 'date/quarter-year',
    DATE_RELATIVE: 'date/relative',
    DATE_ALL_OPTIONS: 'date/all-options',
    TEMPORAL_UNIT: 'temporal-unit',
    'NUMBER/!=': 'number/!=',
    'NUMBER/<=': 'number/<=',
    'NUMBER/=': 'number/=',
    'NUMBER/>=': 'number/>=',
    NUMBER_BETWEEN: 'number/between',
    'STRING/!=': 'string/!=',
    'STRING/=': 'string/=',
    STRING_CONTAINS: 'string/contains',
    STRING_DOES_NOT_CONTAIN: 'string/does-not-contain',
    STRING_ENDS_WITH: 'string/ends-with',
    STRING_STARTS_WITH: 'string/starts-with',
    'BOOLEAN/=': 'boolean/='
} as const;

export type MetabaseLibSchemaTemplateTagWidgetType = typeof MetabaseLibSchemaTemplateTagWidgetType[keyof typeof MetabaseLibSchemaTemplateTagWidgetType];

export const MetabaseLibSchemaTemporalBucketingUnitDate = {
    DAY: 'day',
    DAY_OF_MONTH: 'day-of-month',
    DAY_OF_WEEK: 'day-of-week',
    DAY_OF_YEAR: 'day-of-year',
    MONTH: 'month',
    MONTH_OF_YEAR: 'month-of-year',
    QUARTER: 'quarter',
    QUARTER_OF_YEAR: 'quarter-of-year',
    WEEK: 'week',
    WEEK_OF_YEAR: 'week-of-year',
    YEAR: 'year',
    YEAR_OF_ERA: 'year-of-era'
} as const;

export type MetabaseLibSchemaTemporalBucketingUnitDate = typeof MetabaseLibSchemaTemporalBucketingUnitDate[keyof typeof MetabaseLibSchemaTemporalBucketingUnitDate];

export const MetabaseLibSchemaTemporalBucketingUnitDateTime = {
    MILLISECOND: 'millisecond',
    SECOND: 'second',
    MINUTE: 'minute',
    HOUR: 'hour',
    DAY: 'day',
    WEEK: 'week',
    MONTH: 'month',
    QUARTER: 'quarter',
    YEAR: 'year',
    SECOND_OF_MINUTE: 'second-of-minute',
    MINUTE_OF_HOUR: 'minute-of-hour',
    HOUR_OF_DAY: 'hour-of-day',
    DAY_OF_WEEK: 'day-of-week',
    DAY_OF_MONTH: 'day-of-month',
    DAY_OF_YEAR: 'day-of-year',
    WEEK_OF_YEAR: 'week-of-year',
    MONTH_OF_YEAR: 'month-of-year',
    QUARTER_OF_YEAR: 'quarter-of-year',
    YEAR_OF_ERA: 'year-of-era'
} as const;

export type MetabaseLibSchemaTemporalBucketingUnitDateTime = typeof MetabaseLibSchemaTemporalBucketingUnitDateTime[keyof typeof MetabaseLibSchemaTemporalBucketingUnitDateTime];

export const MetabaseLibSchemaTemporalBucketingUnitDateTimeInterval = {
    DAY: 'day',
    HOUR: 'hour',
    MILLISECOND: 'millisecond',
    MINUTE: 'minute',
    MONTH: 'month',
    QUARTER: 'quarter',
    SECOND: 'second',
    WEEK: 'week',
    YEAR: 'year'
} as const;

export type MetabaseLibSchemaTemporalBucketingUnitDateTimeInterval = typeof MetabaseLibSchemaTemporalBucketingUnitDateTimeInterval[keyof typeof MetabaseLibSchemaTemporalBucketingUnitDateTimeInterval];

export const MetabaseLibSchemaTemporalBucketingUnitTimeInterval = {
    HOUR: 'hour',
    MILLISECOND: 'millisecond',
    MINUTE: 'minute',
    SECOND: 'second'
} as const;

export type MetabaseLibSchemaTemporalBucketingUnitTimeInterval = typeof MetabaseLibSchemaTemporalBucketingUnitTimeInterval[keyof typeof MetabaseLibSchemaTemporalBucketingUnitTimeInterval];

export const MetabaseLibSchemaTemporalBucketingUnit = {
    DAY: 'day',
    DAY_OF_MONTH: 'day-of-month',
    DAY_OF_WEEK: 'day-of-week',
    DAY_OF_YEAR: 'day-of-year',
    DEFAULT: 'default',
    HOUR: 'hour',
    HOUR_OF_DAY: 'hour-of-day',
    MILLISECOND: 'millisecond',
    MINUTE: 'minute',
    MINUTE_OF_HOUR: 'minute-of-hour',
    MONTH: 'month',
    MONTH_OF_YEAR: 'month-of-year',
    QUARTER: 'quarter',
    QUARTER_OF_YEAR: 'quarter-of-year',
    SECOND: 'second',
    SECOND_OF_MINUTE: 'second-of-minute',
    WEEK: 'week',
    WEEK_OF_YEAR: 'week-of-year',
    YEAR: 'year',
    YEAR_OF_ERA: 'year-of-era'
} as const;

export type MetabaseLibSchemaTemporalBucketingUnit = typeof MetabaseLibSchemaTemporalBucketingUnit[keyof typeof MetabaseLibSchemaTemporalBucketingUnit];

export type MetabaseLibSchemaUtilDistinctMbqlClauses = unknown;

export type MetabaseLibSchemaUtilUniqueUuids = unknown;

export const MetabaseLoggerApiLogLevel = {
    OFF: 'off',
    FATAL: 'fatal',
    ERROR: 'error',
    WARN: 'warn',
    INFO: 'info',
    DEBUG: 'debug',
    TRACE: 'trace'
} as const;

export type MetabaseLoggerApiLogLevel = typeof MetabaseLoggerApiLogLevel[keyof typeof MetabaseLoggerApiLogLevel];

export const MetabaseLoggerApiTimeUnit = {
    DAYS: 'days',
    HOURS: 'hours',
    MINUTES: 'minutes',
    SECONDS: 'seconds',
    MILLISECONDS: 'milliseconds',
    MICROSECONDS: 'microseconds',
    NANOSECONDS: 'nanoseconds'
} as const;

export type MetabaseLoggerApiTimeUnit = typeof MetabaseLoggerApiTimeUnit[keyof typeof MetabaseLoggerApiTimeUnit];

/**
 * Fully hydrated notification.
 */
export type MetabaseNotificationModelsFullyHydratedNotification = {
    creator?: {
        [key: string]: unknown;
    };
    handlers?: Array<{
        active?: boolean;
        channel?: MetabaseChannelModelsChannelChannel;
        /**
         * value must be an integer greater than zero.
         */
        channel_id?: number;
        channel_type: unknown;
        /**
         * value must be an integer greater than zero.
         */
        notification_id?: number;
        recipients?: Array<MetabaseNotificationModelsNotificationRecipient>;
        template?: MetabaseChannelModelsChannelChannelTemplate;
        /**
         * value must be an integer greater than zero.
         */
        template_id?: number;
    }>;
    payload: MetabaseNotificationModelsNotificationCard;
    payload_id?: null;
    payload_type: 'notification/dashboard' | 'notification/system-event' | 'notification/testing' | 'notification/card';
    subscriptions?: Array<MetabaseNotificationModelsNotificationSubscription>;
} | {
    creator?: {
        [key: string]: unknown;
    };
    handlers?: Array<{
        active?: boolean;
        channel?: MetabaseChannelModelsChannelChannel;
        /**
         * value must be an integer greater than zero.
         */
        channel_id?: number;
        channel_type: unknown;
        /**
         * value must be an integer greater than zero.
         */
        notification_id?: number;
        recipients?: Array<MetabaseNotificationModelsNotificationRecipient>;
        template?: MetabaseChannelModelsChannelChannelTemplate;
        /**
         * value must be an integer greater than zero.
         */
        template_id?: number;
    }>;
    payload_id?: null;
    payload_type: 'notification/dashboard' | 'notification/system-event' | 'notification/testing' | 'notification/card';
    subscriptions?: Array<MetabaseNotificationModelsNotificationSubscription>;
} | {
    creator?: {
        [key: string]: unknown;
    };
    creator_id?: number;
    handlers?: Array<{
        active?: boolean;
        channel?: MetabaseChannelModelsChannelChannel;
        /**
         * value must be an integer greater than zero.
         */
        channel_id?: number;
        channel_type: unknown;
        /**
         * value must be an integer greater than zero.
         */
        notification_id?: number;
        recipients?: Array<MetabaseNotificationModelsNotificationRecipient>;
        template?: MetabaseChannelModelsChannelChannelTemplate;
        /**
         * value must be an integer greater than zero.
         */
        template_id?: number;
    }>;
    payload: MetabaseNotificationModelsNotificationCard;
    payload_id?: number;
    payload_type: 'notification/dashboard' | 'notification/system-event' | 'notification/testing' | 'notification/card';
    subscriptions?: Array<MetabaseNotificationModelsNotificationSubscription>;
} | {
    creator?: {
        [key: string]: unknown;
    };
    creator_id?: number;
    handlers?: Array<{
        active?: boolean;
        channel?: MetabaseChannelModelsChannelChannel;
        /**
         * value must be an integer greater than zero.
         */
        channel_id?: number;
        channel_type: unknown;
        /**
         * value must be an integer greater than zero.
         */
        notification_id?: number;
        recipients?: Array<MetabaseNotificationModelsNotificationRecipient>;
        template?: MetabaseChannelModelsChannelChannelTemplate;
        /**
         * value must be an integer greater than zero.
         */
        template_id?: number;
    }>;
    payload_id?: number;
    payload_type: 'notification/dashboard' | 'notification/system-event' | 'notification/testing' | 'notification/card';
    subscriptions?: Array<MetabaseNotificationModelsNotificationSubscription>;
} | {
    creator?: {
        [key: string]: unknown;
    };
    handlers?: Array<{
        active?: boolean;
        channel?: MetabaseChannelModelsChannelChannel;
        /**
         * value must be an integer greater than zero.
         */
        channel_id?: number;
        channel_type: unknown;
        /**
         * value must be an integer greater than zero.
         */
        notification_id?: number;
        recipients?: Array<MetabaseNotificationModelsNotificationRecipient>;
        template?: MetabaseChannelModelsChannelChannelTemplate;
        /**
         * value must be an integer greater than zero.
         */
        template_id?: number;
    }>;
    payload: MetabaseNotificationModelsNotificationCard;
    subscriptions?: Array<MetabaseNotificationModelsNotificationSubscription>;
} | {
    creator?: {
        [key: string]: unknown;
    };
    handlers?: Array<{
        active?: boolean;
        channel?: MetabaseChannelModelsChannelChannel;
        /**
         * value must be an integer greater than zero.
         */
        channel_id?: number;
        channel_type: unknown;
        /**
         * value must be an integer greater than zero.
         */
        notification_id?: number;
        recipients?: Array<MetabaseNotificationModelsNotificationRecipient>;
        template?: MetabaseChannelModelsChannelChannelTemplate;
        /**
         * value must be an integer greater than zero.
         */
        template_id?: number;
    }>;
    subscriptions?: Array<MetabaseNotificationModelsNotificationSubscription>;
};

export type MetabaseNotificationModelsNotification = {
    payload_id?: null;
    payload_type: 'notification/dashboard' | 'notification/system-event' | 'notification/testing' | 'notification/card';
} | {
    creator_id?: number;
    payload_id?: number;
    payload_type: 'notification/dashboard' | 'notification/system-event' | 'notification/testing' | 'notification/card';
} | unknown;

/**
 * Schema for :model/NotificationCard.
 */
export type MetabaseNotificationModelsNotificationCard = {
    card?: {
        [key: string]: unknown;
    };
    /**
     * value must be an integer greater than zero.
     */
    card_id: number;
    send_condition?: 'goal_below' | 'has_result' | 'goal_above';
    send_once?: boolean;
};

export type MetabaseNotificationModelsNotificationHandler = {
    active?: boolean;
    /**
     * value must be an integer greater than zero.
     */
    channel_id?: number;
    channel_type: unknown;
    /**
     * value must be an integer greater than zero.
     */
    notification_id?: number;
    /**
     * value must be an integer greater than zero.
     */
    template_id?: number;
};

/**
 * Schema for :model/NotificationRecipient.
 */
export type MetabaseNotificationModelsNotificationRecipient = {
    details?: unknown;
    /**
     * value must be an integer greater than zero.
     */
    notification_handler_id?: number;
    permissions_group_id?: unknown;
    type: 'notification-recipient/raw-value' | 'notification-recipient/user' | 'notification-recipient/template' | 'notification-recipient/group';
    /**
     * value must be an integer greater than zero.
     */
    user_id: number;
} | {
    details?: unknown;
    /**
     * value must be an integer greater than zero.
     */
    notification_handler_id?: number;
    /**
     * value must be an integer greater than zero.
     */
    permissions_group_id: number;
    type: 'notification-recipient/raw-value' | 'notification-recipient/user' | 'notification-recipient/template' | 'notification-recipient/group';
    user_id?: unknown;
} | {
    details: {
        value: unknown;
    };
    /**
     * value must be an integer greater than zero.
     */
    notification_handler_id?: number;
    permissions_group_id?: unknown;
    type: 'notification-recipient/raw-value' | 'notification-recipient/user' | 'notification-recipient/template' | 'notification-recipient/group';
    user_id?: unknown;
} | {
    details: {
        is_optional?: boolean;
        pattern: string;
    };
    /**
     * value must be an integer greater than zero.
     */
    notification_handler_id?: number;
    permissions_group_id?: unknown;
    type: 'notification-recipient/raw-value' | 'notification-recipient/user' | 'notification-recipient/template' | 'notification-recipient/group';
    user_id?: unknown;
};

/**
 * Schema for :model/NotificationSubscription.
 */
export type MetabaseNotificationModelsNotificationSubscription = {
    cron_schedule?: null;
    event_name: string;
    type: 'notification-subscription/cron' | 'notification-subscription/system-event';
} | {
    cron_schedule: string;
    event_name?: null;
    type: 'notification-subscription/cron' | 'notification-subscription/system-event';
    ui_display_type?: 'cron/raw' | 'cron/builder';
};

export type MetabaseParametersSchemaLegacyRef = MetabaseLegacyMbqlSchemaExpression | MetabaseLegacyMbqlSchemaField;

/**
 * parameter must be a map with :id and :type keys
 */
export type MetabaseParametersSchemaParameter = {
    filteringParameters?: Array<MetabaseLibSchemaCommonNonBlankString>;
    mappings?: Array<MetabaseParametersSchemaParameterMapping> | Array<MetabaseParametersSchemaParameterMapping>;
    sectionId?: MetabaseLibSchemaCommonNonBlankString;
    values_source_config?: MetabaseParametersSchemaValuesSourceConfig;
    id: MetabaseLibSchemaCommonNonBlankString;
    name?: string;
    slug?: string;
    values_query_type?: MetabaseParametersSchemaValuesQueryType;
    type: MetabaseLibSchemaParameterType;
    temporal_units?: Array<MetabaseLibSchemaTemporalBucketingUnit>;
    target?: MetabaseLibSchemaParameterTarget;
    values_source_type?: MetabaseParametersSchemaValuesSourceType;
    default?: unknown;
};

/**
 * parameter_mapping must be a map with :parameter_id and :target keys
 */
export type MetabaseParametersSchemaParameterMapping = {
    card_id?: MetabaseLibSchemaIdCard;
    dashcard?: {
        [key: string]: unknown;
    };
    parameter_id: MetabaseLibSchemaCommonNonBlankString;
    target: MetabaseLibSchemaParameterTarget;
};

export type MetabaseParametersSchemaParameterMappings = Array<MetabaseParametersSchemaParameterMapping>;

export type MetabaseParametersSchemaParameters = Array<MetabaseParametersSchemaParameter>;

export const MetabaseParametersSchemaValuesQueryType = {
    NONE: 'none',
    LIST: 'list',
    SEARCH: 'search'
} as const;

export type MetabaseParametersSchemaValuesQueryType = typeof MetabaseParametersSchemaValuesQueryType[keyof typeof MetabaseParametersSchemaValuesQueryType];

/**
 * Schema for valid source_options within a Parameter
 */
export type MetabaseParametersSchemaValuesSourceConfig = {
    card_id?: MetabaseLibSchemaIdCard;
    label_field?: MetabaseParametersSchemaLegacyRef;
    value_field?: MetabaseParametersSchemaLegacyRef;
    values?: unknown;
};

export const MetabaseParametersSchemaValuesSourceType = {
    STATIC_LIST: 'static-list',
    CARD: 'card'
} as const;

export type MetabaseParametersSchemaValuesSourceType = typeof MetabaseParametersSchemaValuesSourceType[keyof typeof MetabaseParametersSchemaValuesSourceType];

/**
 * Schema for an instance of a `:model/Card` (everything is optional to support updates).
 */
export type MetabaseQueriesSchemaCard = {
    dataset_query?: MetabaseQueriesSchemaQuery;
    id?: MetabaseLibSchemaIdCard;
    parameter_mappings?: MetabaseParametersSchemaParameterMappings;
    parameters?: MetabaseParametersSchemaParameters;
    type?: MetabaseLibSchemaMetadataCardType;
};

export type MetabaseQueriesSchemaCardType = MetabaseLibSchemaMetadataCardType;

/**
 * An empty map, allowed for Card.dataset_query for historic purposes.
 */
export type MetabaseQueriesSchemaEmptyMap = unknown;

/**
 * Schema for Card.dataset_query. Cards are for some wacko reason allowed to be saved with empty queries (`{}`), but not
 * `NULL` ones, because the column is non-null. This sorta seems like an oversight but fixing all the tests that save
 * Cards with empty queries is too much to attempt at this point. So a Card either has an empty query or a valid MBQL 5
 * query.
 */
export type MetabaseQueriesSchemaQuery = MetabaseQueriesSchemaEmptyMap | ({
    /**
     * Schema for something that satisfies the [[metabase.lib.metadata.protocols/MetadataProvider]] protocol.
     */
    'lib/metadata': unknown;
    'update-row'?: MetabaseLibSchemaActionsRow;
    'lib/type': 'mbql/query';
    settings?: MetabaseLibSchemaSettingsSettings;
    constraints?: MetabaseLibSchemaConstraintsConstraints;
    info?: MetabaseLibSchemaInfoInfo;
    middleware?: MetabaseLibSchemaMiddlewareOptionsMiddlewareOptions;
    database?: MetabaseLibSchemaIdSavedQuestionsVirtualDatabase | MetabaseLibSchemaIdDatabase;
    stages: MetabaseLibSchemaStages;
    parameters?: MetabaseLibSchemaParameterParameters;
    'create-row'?: MetabaseLibSchemaActionsRow;
} & MetabaseLibSchemaUtilUniqueUuids & unknown);

/**
 * Schema for valid export formats for downloading query results.
 */
export const MetabaseQueryProcessorSchemaExportFormat = {
    CSV: 'csv',
    API: 'api',
    XLSX: 'xlsx',
    PDF: 'pdf',
    JSON: 'json'
} as const;

/**
 * Schema for valid export formats for downloading query results.
 */
export type MetabaseQueryProcessorSchemaExportFormat = typeof MetabaseQueryProcessorSchemaExportFormat[keyof typeof MetabaseQueryProcessorSchemaExportFormat];

export const MetabaseSessionApiAvailableLocale = {
    0: ['ar', 'Arabic'],
    1: ['ar_SA', 'Arabic (Saudi Arabia)'],
    2: ['bg', 'Bulgarian'],
    3: ['ca', 'Catalan'],
    4: ['cs', 'Czech'],
    5: ['da', 'Danish'],
    6: ['de', 'German'],
    7: ['en', 'English'],
    8: ['es', 'Spanish'],
    9: ['fa', 'Persian'],
    10: ['fi', 'Finnish'],
    11: ['fr', 'French'],
    12: ['he', 'Hebrew'],
    13: ['hu', 'Hungarian'],
    14: ['id', 'Indonesian'],
    15: ['it', 'Italian'],
    16: ['ja', 'Japanese'],
    17: ['ko', 'Korean'],
    18: ['lv', 'Latvian'],
    19: ['ms', 'Malay'],
    20: ['nb', 'Norwegian Bokmål'],
    21: ['nl', 'Dutch'],
    22: ['pl', 'Polish'],
    23: ['pt_BR', 'Portuguese (Brazil)'],
    24: ['ru', 'Russian'],
    25: ['sk', 'Slovak'],
    26: ['sl', 'Slovenian'],
    27: ['sq', 'Albanian'],
    28: ['sr', 'Serbian'],
    29: ['sv', 'Swedish'],
    30: ['tr', 'Turkish'],
    31: ['uk', 'Ukrainian'],
    32: ['vi', 'Vietnamese'],
    33: ['zh_CN', 'Chinese (China)'],
    34: ['zh_HK', 'Chinese (Hong Kong SAR China)'],
    35: ['zh_TW', 'Chinese (Taiwan)']
} as const;

export type MetabaseSessionApiAvailableLocale = typeof MetabaseSessionApiAvailableLocale[keyof typeof MetabaseSessionApiAvailableLocale];

export type MetabaseSessionApiAvailableLocales = Array<MetabaseSessionApiAvailableLocale>;

/**
 * value must be a valid map of schedule maps for a DB.
 */
export type MetabaseSyncSchedulesExpandedSchedulesMap = {
    cache_field_values?: MetabaseUtilCronScheduleMap;
    metadata_sync?: MetabaseUtilCronScheduleMap;
};

/**
 * Form-encoded JSON-encoded legacy MBQL :field ref.
 */
export type MetabaseTilesApiLegacyRef = MetabaseLegacyMbqlSchemaField;

/**
 * Form-encoded JSON-encoded array of parameter maps.
 */
export type MetabaseTilesApiParameters = MetabaseParametersSchemaParameters;

/**
 * Form-encoded JSON-encoded MBQL query.
 */
export type MetabaseTilesApiQuery = MetabaseLibSchemaQuery;

export type MetabaseTimelineApiTimelineTimeline = {
    id: number;
};

export const MetabaseTimelineApiTimelineInclude = {
    EVENTS: 'events'
} as const;

export type MetabaseTimelineApiTimelineInclude = typeof MetabaseTimelineApiTimelineInclude[keyof typeof MetabaseTimelineApiTimelineInclude];

/**
 * Schema for paginated user list responses.
 */
export type MetabaseUsersApiPaginatedUsers = {
    data: Array<MetabaseUsersApiUser>;
    limit?: number;
    offset?: number;
    total: number;
};

/**
 * Schema for password update response.
 */
export type MetabaseUsersApiPasswordUpdateResponse = {
    session_id?: string;
    success?: true;
};

/**
 * Schema for simple success responses.
 */
export type MetabaseUsersApiSuccessResponse = {
    success: true;
};

/**
 * Schema for a User object returned by the API.
 */
export type MetabaseUsersApiUser = {
    has_model?: boolean;
    /**
     * login attribute keys must be a keyword or string
     */
    login_attributes?: {
        [key: string]: unknown;
    };
    sso_source?: 'google' | 'ldap' | 'jwt' | 'saml';
    /**
     * login attribute keys must be a keyword or string
     */
    jwt_attributes?: {
        [key: string]: unknown;
    };
    is_qbnewb?: boolean;
    user_group_memberships?: Array<MetabaseUsersApiUserGroupMembership>;
    is_active?: boolean;
    last_login?: unknown;
    id: number;
    /**
     * value must be a valid email address.
     */
    email: string;
    group_ids?: Array<number>;
    /**
     * String must be a valid two-letter ISO language or language-country code e.g. 'en' or 'en_US'.
     */
    locale?: string;
    structured_attributes?: {
        [key: string]: unknown;
    };
    updated_at?: unknown;
    is_datasetnewb?: boolean;
    first_login?: unknown;
    is_superuser: boolean;
    tenant_id?: number;
    custom_homepage?: {
        dashboard_id: number;
    };
    last_name?: string;
    is_installer?: boolean;
    first_name?: string;
    date_joined: unknown;
    has_invited_second_user?: boolean;
    personal_collection_id?: number;
    common_name?: string;
    has_question_and_dashboard?: boolean;
};

/**
 * Group Membership info of a User.
 * In which :is_group_manager is only included if `advanced-permissions` is enabled.
 */
export type MetabaseUsersApiUserGroupMembership = {
    /**
     * value must be an integer greater than zero.
     */
    id: number;
    /**
     * Only relevant if `advanced-permissions` is enabled. If it is, you should always include this key.
     */
    is_group_manager?: boolean;
};

export type MetabaseUtilCronCronHour = number;

export type MetabaseUtilCronCronMinute = number;

/**
 * value must be a valid Quartz cron schedule string.
 */
export type MetabaseUtilCronCronScheduleString = string;

/**
 * value must be a valid schedule map. See schema in metabase.util.cron for details.
 */
export type MetabaseUtilCronScheduleMap = {
    schedule_day?: 'sun' | 'mon' | 'tue' | 'wed' | 'thu' | 'fri' | 'sat';
    schedule_frame?: 'first' | 'mid' | 'last';
    schedule_hour?: MetabaseUtilCronCronHour;
    schedule_minute?: MetabaseUtilCronCronMinute;
    schedule_type: 'hourly' | 'daily' | 'weekly' | 'monthly';
};

/**
 * Schema for writing a valid table data authority.
 */
export const MetabaseWarehouseSchemaApiTableDataAuthorityWrite = {
    COMPUTED: 'computed',
    AUTHORITATIVE: 'authoritative',
    UNCONFIGURED: 'unconfigured',
    INGESTED: 'ingested'
} as const;

/**
 * Schema for writing a valid table data authority.
 */
export type MetabaseWarehouseSchemaApiTableDataAuthorityWrite = typeof MetabaseWarehouseSchemaApiTableDataAuthorityWrite[keyof typeof MetabaseWarehouseSchemaApiTableDataAuthorityWrite];

export type MetabaseWarehousesApiAvailableSettings = {
    [key: string]: {
        enabled: boolean;
        reasons?: Array<{
            key: string;
            message: string | unknown;
            type: 'error' | 'warning';
        }>;
    };
};

/**
 * form-encoded base-64-encoded JSON
 */
export type MetabaseXraysApiAutomagicDashboardsBase64EncodedJson = unknown;

/**
 * One of these:
 *
 * * A non-empty string with an Entity ID (including `card__<id>`-encoded Card IDs)
 *
 * * a form-encoded base-64-encoded JSON-encoded MBQL query
 *
 * * The name of a transform
 *
 * (Effectively since the names of transforms are unconstrained this parameter is allowed to be any form-encoded
 * string.)
 */
export type MetabaseXraysApiAutomagicDashboardsEntityIdOrQuery = string;

export type MetabotReactionRedirect = {
    type: 'metabot.reaction/redirect';
    url: string;
};

export type GetApiActionData = {
    body?: never;
    path?: never;
    query?: {
        'model-id'?: MetabaseLibSchemaIdCard;
    };
    url: '/api/action/';
};

export type GetApiActionErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiActionResponses = {
    /**
     * sequence of An Action as it should appear when we `SELECT` it from the app DB.
     */
    '2XX': Array<MetabaseActionsSchemaAction>;
};

export type GetApiActionResponse = GetApiActionResponses[keyof GetApiActionResponses];

export type PostApiActionData = {
    body?: MetabaseActionsSchemaActionForInsert;
    path?: never;
    query?: never;
    url: '/api/action/';
};

export type PostApiActionErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiActionResponses = {
    /**
     * An Action as it should appear when we `SELECT` it from the app DB.
     */
    '2XX': MetabaseActionsSchemaAction;
};

export type PostApiActionResponse = PostApiActionResponses[keyof PostApiActionResponses];

export type GetApiActionPublicData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/action/public';
};

export type GetApiActionPublicErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiActionPublicResponses = {
    /**
     * sequence of An Action as it should appear when we `SELECT` it from the app DB.
     */
    '2XX': Array<MetabaseActionsSchemaAction>;
};

export type GetApiActionPublicResponse = GetApiActionPublicResponses[keyof GetApiActionPublicResponses];

export type DeleteApiActionByActionIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'action-id': number;
    };
    query?: never;
    url: '/api/action/{action-id}';
};

export type DeleteApiActionByActionIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiActionByActionIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiActionByActionIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'action-id': number;
    };
    query?: never;
    url: '/api/action/{action-id}';
};

export type GetApiActionByActionIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiActionByActionIdResponses = {
    /**
     * An Action as it should appear when we `SELECT` it from the app DB.
     */
    '2XX': MetabaseActionsSchemaAction;
};

export type GetApiActionByActionIdResponse = GetApiActionByActionIdResponses[keyof GetApiActionByActionIdResponses];

export type GetApiActionByActionIdExecuteData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'action-id': number;
    };
    query: {
        /**
         * value must be a valid JSON string.
         */
        parameters: string;
    };
    url: '/api/action/{action-id}/execute';
};

export type GetApiActionByActionIdExecuteErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiActionByActionIdExecuteResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiActionByIdData = {
    body?: MetabaseActionsSchemaActionForUpdate;
    path: {
        id: MetabaseActionsSchemaId;
    };
    query?: never;
    url: '/api/action/{id}';
};

export type PutApiActionByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiActionByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiActionByIdExecuteData = {
    body?: {
        parameters?: {
            [key: string]: unknown;
        };
    };
    path: {
        id: MetabaseActionsSchemaId;
    };
    query?: never;
    url: '/api/action/{id}/execute';
};

export type PostApiActionByIdExecuteErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiActionByIdExecuteResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiActionByIdPublicLinkData = {
    body?: never;
    path: {
        id: MetabaseActionsSchemaId;
    };
    query?: never;
    url: '/api/action/{id}/public_link';
};

export type DeleteApiActionByIdPublicLinkErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiActionByIdPublicLinkResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiActionByIdPublicLinkData = {
    body?: never;
    path: {
        id: MetabaseActionsSchemaId;
    };
    query?: never;
    url: '/api/action/{id}/public_link';
};

export type PostApiActionByIdPublicLinkErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiActionByIdPublicLinkResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiActivityMostRecentlyViewedDashboardData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/activity/most_recently_viewed_dashboard';
};

export type GetApiActivityMostRecentlyViewedDashboardErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiActivityMostRecentlyViewedDashboardResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiActivityPopularItemsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/activity/popular_items';
};

export type GetApiActivityPopularItemsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiActivityPopularItemsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiActivityRecentViewsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/activity/recent_views';
};

export type GetApiActivityRecentViewsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiActivityRecentViewsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiActivityRecentsData = {
    body?: never;
    path?: never;
    query: {
        context: Array<'selections' | 'views'>;
        include_metadata?: boolean;
    };
    url: '/api/activity/recents';
};

export type GetApiActivityRecentsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiActivityRecentsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiActivityRecentsData = {
    body?: {
        context: 'selection';
        model: 'card' | 'dataset' | 'metric' | 'dashboard' | 'table' | 'collection' | 'document';
        /**
         * value must be an integer greater than zero.
         */
        model_id: number;
    };
    path?: never;
    query?: never;
    url: '/api/activity/recents';
};

export type PostApiActivityRecentsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiActivityRecentsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiAlertData = {
    body?: never;
    path?: never;
    query?: {
        archived?: boolean;
        /**
         * value must be an integer greater than zero.
         */
        user_id?: number;
    };
    url: '/api/alert/';
};

export type GetApiAlertErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiAlertResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiAlertByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/alert/{id}';
};

export type GetApiAlertByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiAlertByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiAlertByIdSubscriptionData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/alert/{id}/subscription';
};

export type DeleteApiAlertByIdSubscriptionErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiAlertByIdSubscriptionResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiAnalyticsAnonymousStatsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/analytics/anonymous-stats';
};

export type GetApiAnalyticsAnonymousStatsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiAnalyticsAnonymousStatsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiApiKeyData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/api-key/';
};

export type GetApiApiKeyErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiApiKeyResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiApiKeyData = {
    body?: {
        group_id: MetabaseApiKeysSchemaId;
        name: string;
    };
    path?: never;
    query?: never;
    url: '/api/api-key/';
};

export type PostApiApiKeyErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiApiKeyResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiApiKeyCountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/api-key/count';
};

export type GetApiApiKeyCountErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiApiKeyCountResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiApiKeyByIdData = {
    body?: never;
    path: {
        id: MetabaseApiKeysSchemaId;
    };
    query?: never;
    url: '/api/api-key/{id}';
};

export type DeleteApiApiKeyByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiApiKeyByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiApiKeyByIdData = {
    body?: {
        /**
         * value must be an integer greater than zero.
         */
        group_id?: number;
        name?: MetabaseApiKeysSchemaName;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/api-key/{id}';
};

export type PutApiApiKeyByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiApiKeyByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiApiKeyByIdRegenerateData = {
    body?: never;
    path: {
        id: MetabaseApiKeysSchemaId;
    };
    query?: never;
    url: '/api/api-key/{id}/regenerate';
};

export type PutApiApiKeyByIdRegenerateErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiApiKeyByIdRegenerateResponses = {
    /**
     * map where {:id -> <value must be an integer greater than zero.>, :unmasked_key -> <Unhashed string of the form 'mb_<base-64-bytes>'.>, :masked_key -> <Masked string like 'mb_1234**********'.>, :prefix -> <Prefix string of an API Key, suitable for passing around unmasked. This must be unique.>}
     */
    '2XX': {
        id: MetabaseApiKeysSchemaId;
        masked_key: MetabaseApiKeysSchemaKeyMasked;
        prefix: MetabaseApiKeysSchemaPrefix;
        unmasked_key: MetabaseApiKeysSchemaKeyRaw;
    };
};

export type PutApiApiKeyByIdRegenerateResponse = PutApiApiKeyByIdRegenerateResponses[keyof PutApiApiKeyByIdRegenerateResponses];

export type GetApiAutomagicDashboardsDatabaseByIdCandidatesData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/automagic-dashboards/database/{id}/candidates';
};

export type GetApiAutomagicDashboardsDatabaseByIdCandidatesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiAutomagicDashboardsDatabaseByIdCandidatesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiAutomagicDashboardsModelIndexByModelIndexIdPrimaryKeyByPkIdData = {
    body?: never;
    path: {
        'model-index-id': number;
        'pk-id': number;
    };
    query?: never;
    url: '/api/automagic-dashboards/model_index/{model-index-id}/primary_key/{pk-id}';
};

export type GetApiAutomagicDashboardsModelIndexByModelIndexIdPrimaryKeyByPkIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiAutomagicDashboardsModelIndexByModelIndexIdPrimaryKeyByPkIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryData = {
    body?: never;
    path: {
        entity: 'adhoc' | 'field' | 'model' | 'question' | 'segment' | 'table' | 'transform';
        'entity-id-or-query': MetabaseXraysApiAutomagicDashboardsEntityIdOrQuery;
    };
    query?: {
        show?: 'all' | number;
    };
    url: '/api/automagic-dashboards/{entity}/{entity-id-or-query}';
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryCellByCellQueryData = {
    body?: never;
    path: {
        entity: 'adhoc' | 'field' | 'model' | 'question' | 'segment' | 'table' | 'transform';
        'entity-id-or-query': MetabaseXraysApiAutomagicDashboardsEntityIdOrQuery;
        'cell-query': MetabaseXraysApiAutomagicDashboardsBase64EncodedJson;
    };
    query?: {
        /**
         * invalid show value
         */
        show?: 'all' | number;
    };
    url: '/api/automagic-dashboards/{entity}/{entity-id-or-query}/cell/{cell-query}';
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryCellByCellQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryCellByCellQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryCellByCellQueryCompareByComparisonEntityByComparisonEntityIdOrQueryData = {
    body?: never;
    path: {
        entity: 'adhoc' | 'field' | 'model' | 'question' | 'segment' | 'table' | 'transform';
        'entity-id-or-query': MetabaseXraysApiAutomagicDashboardsEntityIdOrQuery;
        'cell-query': MetabaseXraysApiAutomagicDashboardsBase64EncodedJson;
        /**
         * Invalid comparison entity type. Can only be one of "table", "segment", or "adhoc"
         */
        'comparison-entity': 'adhoc' | 'segment' | 'table';
        'comparison-entity-id-or-query': MetabaseXraysApiAutomagicDashboardsEntityIdOrQuery;
    };
    query?: {
        /**
         * invalid show value
         */
        show?: 'all' | number;
    };
    url: '/api/automagic-dashboards/{entity}/{entity-id-or-query}/cell/{cell-query}/compare/{comparison-entity}/{comparison-entity-id-or-query}';
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryCellByCellQueryCompareByComparisonEntityByComparisonEntityIdOrQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryCellByCellQueryCompareByComparisonEntityByComparisonEntityIdOrQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryCellByCellQueryRuleByPrefixByDashboardTemplateData = {
    body?: never;
    path: {
        entity: 'adhoc' | 'field' | 'model' | 'question' | 'segment' | 'table' | 'transform';
        'entity-id-or-query': MetabaseXraysApiAutomagicDashboardsEntityIdOrQuery;
        prefix: unknown;
        /**
         * invalid value for dashboard template name
         */
        'dashboard-template': unknown;
        'cell-query': MetabaseXraysApiAutomagicDashboardsBase64EncodedJson;
    };
    query?: {
        /**
         * invalid show value
         */
        show?: 'all' | number;
    };
    url: '/api/automagic-dashboards/{entity}/{entity-id-or-query}/cell/{cell-query}/rule/{prefix}/{dashboard-template}';
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryCellByCellQueryRuleByPrefixByDashboardTemplateErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryCellByCellQueryRuleByPrefixByDashboardTemplateResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryCellByCellQueryRuleByPrefixByDashboardTemplateCompareByComparisonEntityByComparisonEntityIdOrQueryData = {
    body?: never;
    path: {
        entity: 'adhoc' | 'field' | 'model' | 'question' | 'segment' | 'table' | 'transform';
        'entity-id-or-query': MetabaseXraysApiAutomagicDashboardsEntityIdOrQuery;
        prefix: unknown;
        /**
         * invalid value for dashboard template name
         */
        'dashboard-template': unknown;
        'cell-query': MetabaseXraysApiAutomagicDashboardsBase64EncodedJson;
        /**
         * Invalid comparison entity type. Can only be one of "table", "segment", or "adhoc"
         */
        'comparison-entity': 'adhoc' | 'segment' | 'table';
        'comparison-entity-id-or-query': MetabaseXraysApiAutomagicDashboardsEntityIdOrQuery;
    };
    query?: {
        /**
         * invalid show value
         */
        show?: 'all' | number;
    };
    url: '/api/automagic-dashboards/{entity}/{entity-id-or-query}/cell/{cell-query}/rule/{prefix}/{dashboard-template}/compare/{comparison-entity}/{comparison-entity-id-or-query}';
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryCellByCellQueryRuleByPrefixByDashboardTemplateCompareByComparisonEntityByComparisonEntityIdOrQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryCellByCellQueryRuleByPrefixByDashboardTemplateCompareByComparisonEntityByComparisonEntityIdOrQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryCompareByComparisonEntityByComparisonEntityIdOrQueryData = {
    body?: never;
    path: {
        'entity-id-or-query': MetabaseXraysApiAutomagicDashboardsEntityIdOrQuery;
        entity: 'adhoc' | 'field' | 'model' | 'question' | 'segment' | 'table' | 'transform';
        /**
         * Invalid comparison entity type. Can only be one of "table", "segment", or "adhoc"
         */
        'comparison-entity': 'adhoc' | 'segment' | 'table';
        'comparison-entity-id-or-query': MetabaseXraysApiAutomagicDashboardsEntityIdOrQuery;
    };
    query?: {
        /**
         * invalid show value
         */
        show?: 'all' | number;
    };
    url: '/api/automagic-dashboards/{entity}/{entity-id-or-query}/compare/{comparison-entity}/{comparison-entity-id-or-query}';
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryCompareByComparisonEntityByComparisonEntityIdOrQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryCompareByComparisonEntityByComparisonEntityIdOrQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryQueryMetadataData = {
    body?: never;
    path: {
        entity: 'adhoc' | 'field' | 'model' | 'question' | 'segment' | 'table' | 'transform';
        'entity-id-or-query': MetabaseXraysApiAutomagicDashboardsEntityIdOrQuery;
    };
    query?: never;
    url: '/api/automagic-dashboards/{entity}/{entity-id-or-query}/query_metadata';
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryQueryMetadataErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryQueryMetadataResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryRuleByPrefixByDashboardTemplateData = {
    body?: never;
    path: {
        entity: 'adhoc' | 'field' | 'model' | 'question' | 'segment' | 'table' | 'transform';
        'entity-id-or-query': MetabaseXraysApiAutomagicDashboardsEntityIdOrQuery;
        prefix: unknown;
        /**
         * invalid value for dashboard template name
         */
        'dashboard-template': unknown;
    };
    query?: {
        /**
         * invalid show value
         */
        show?: 'all' | number;
    };
    url: '/api/automagic-dashboards/{entity}/{entity-id-or-query}/rule/{prefix}/{dashboard-template}';
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryRuleByPrefixByDashboardTemplateErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryRuleByPrefixByDashboardTemplateResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryRuleByPrefixByDashboardTemplateCompareByComparisonEntityByComparisonEntityIdOrQueryData = {
    body?: never;
    path: {
        entity: 'adhoc' | 'field' | 'model' | 'question' | 'segment' | 'table' | 'transform';
        'entity-id-or-query': MetabaseXraysApiAutomagicDashboardsEntityIdOrQuery;
        prefix: unknown;
        /**
         * invalid value for dashboard template name
         */
        'dashboard-template': unknown;
        /**
         * Invalid comparison entity type. Can only be one of "table", "segment", or "adhoc"
         */
        'comparison-entity': 'adhoc' | 'segment' | 'table';
        'comparison-entity-id-or-query': MetabaseXraysApiAutomagicDashboardsEntityIdOrQuery;
    };
    query?: {
        /**
         * invalid show value
         */
        show?: 'all' | number;
    };
    url: '/api/automagic-dashboards/{entity}/{entity-id-or-query}/rule/{prefix}/{dashboard-template}/compare/{comparison-entity}/{comparison-entity-id-or-query}';
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryRuleByPrefixByDashboardTemplateCompareByComparisonEntityByComparisonEntityIdOrQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiAutomagicDashboardsByEntityByEntityIdOrQueryRuleByPrefixByDashboardTemplateCompareByComparisonEntityByComparisonEntityIdOrQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiBookmarkData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/bookmark/';
};

export type GetApiBookmarkErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiBookmarkResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiBookmarkOrderingData = {
    body?: {
        orderings: Array<{
            /**
             * value must be an integer greater than zero.
             */
            item_id: number;
            type: 'card' | 'dashboard' | 'collection' | 'document';
        }>;
    };
    path?: never;
    query?: never;
    url: '/api/bookmark/ordering';
};

export type PutApiBookmarkOrderingErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiBookmarkOrderingResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiBookmarkByModelByIdData = {
    body?: never;
    path: {
        model: 'card' | 'dashboard' | 'collection' | 'document';
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/bookmark/{model}/{id}';
};

export type DeleteApiBookmarkByModelByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiBookmarkByModelByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiBookmarkByModelByIdData = {
    body?: never;
    path: {
        model: 'card' | 'dashboard' | 'collection' | 'document';
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/bookmark/{model}/{id}';
};

export type PostApiBookmarkByModelByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiBookmarkByModelByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiBugReportingConnectionPoolDetailsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/bug-reporting/connection-pool-details';
};

export type GetApiBugReportingConnectionPoolDetailsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiBugReportingConnectionPoolDetailsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiBugReportingDetailsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/bug-reporting/details';
};

export type GetApiBugReportingDetailsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiBugReportingDetailsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiCacheData = {
    body?: {
        model: 'root' | 'database' | 'dashboard' | 'question';
        model_id: Array<number>;
    };
    path?: never;
    query?: never;
    url: '/api/cache/';
};

export type DeleteApiCacheErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiCacheResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiCacheData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Type of model
         */
        model: Array<'root' | 'database' | 'dashboard' | 'question'>;
        /**
         * Collection id to filter results. Returns everything if not supplied.
         */
        collection?: number;
        /**
         * Model id to get configuration for.
         */
        id?: number;
    };
    url: '/api/cache/';
};

export type GetApiCacheErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCacheResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiCacheData = {
    body?: {
        model: 'root' | 'database' | 'dashboard' | 'question';
        /**
         * value must be an integer greater or equal to than zero.
         */
        model_id: number;
        strategy: MetabaseCacheApiCacheStrategy;
    };
    path?: never;
    query?: never;
    url: '/api/cache/';
};

export type PutApiCacheErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiCacheResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiCacheInvalidateData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * All cache configuration overrides should invalidate cache too
         */
        include?: 'overrides';
        /**
         * A list of database ids
         */
        database?: Array<number>;
        /**
         * A list of dashboard ids
         */
        dashboard?: Array<number>;
        /**
         * A list of question ids
         */
        question?: Array<number>;
    };
    url: '/api/cache/invalidate';
};

export type PostApiCacheInvalidateErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiCacheInvalidateResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiCardData = {
    body?: never;
    path?: never;
    query: {
        f: 'archived' | 'table' | 'using_model' | 'bookmarked' | 'using_segment' | 'all' | 'mine' | 'database';
        /**
         * value must be an integer greater than zero.
         */
        model_id?: number;
    };
    url: '/api/card/';
};

export type GetApiCardErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCardResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiCardData = {
    body?: {
        /**
         * Value must be a map.
         */
        visualization_settings: {
            [key: string]: unknown;
        };
        /**
         * value must be an integer greater than zero.
         */
        dashboard_tab_id?: number;
        entity_id?: string;
        /**
         * Value must be a map.
         */
        dataset_query: {
            [key: string]: unknown;
        };
        parameter_mappings?: MetabaseParametersSchemaParameterMappings;
        name: string;
        /**
         * value must be an integer greater than zero.
         */
        collection_position?: number;
        result_metadata?: MetabaseAnalyzeQueryResultsResultsMetadata;
        /**
         * value must be an integer greater than zero.
         */
        collection_id?: number;
        /**
         * value must be an integer greater than zero.
         */
        cache_ttl?: number;
        type?: MetabaseLibSchemaMetadataCardType;
        display: string;
        parameters?: MetabaseParametersSchemaParameters;
        description?: string;
        /**
         * value must be an integer greater than zero.
         */
        dashboard_id?: number;
    };
    path?: never;
    query?: never;
    url: '/api/card/';
};

export type PostApiCardErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiCardResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiCardCollectionsData = {
    body?: {
        card_ids: Array<number>;
        /**
         * value must be an integer greater than zero.
         */
        collection_id?: number;
    };
    path?: never;
    query?: never;
    url: '/api/card/collections';
};

export type PostApiCardCollectionsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiCardCollectionsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiCardEmbeddableData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/card/embeddable';
};

export type GetApiCardEmbeddableErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCardEmbeddableResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiCardPivotByCardIdQueryData = {
    body?: {
        ignore_cache?: boolean;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
    };
    query?: never;
    url: '/api/card/pivot/{card-id}/query';
};

export type PostApiCardPivotByCardIdQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiCardPivotByCardIdQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiCardPublicData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/card/public';
};

export type GetApiCardPublicErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCardPublicResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiCardByCardIdParamsByParamKeySearchByQueryData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
        'param-key': MetabaseLibSchemaCommonNonBlankString;
        query: string;
    };
    query?: never;
    url: '/api/card/{card-id}/params/{param-key}/search/{query}';
};

export type GetApiCardByCardIdParamsByParamKeySearchByQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCardByCardIdParamsByParamKeySearchByQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiCardByCardIdParamsByParamKeyValuesData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
        'param-key': MetabaseLibSchemaCommonNonBlankString;
    };
    query?: never;
    url: '/api/card/{card-id}/params/{param-key}/values';
};

export type GetApiCardByCardIdParamsByParamKeyValuesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCardByCardIdParamsByParamKeyValuesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiCardByCardIdPublicLinkData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
    };
    query?: never;
    url: '/api/card/{card-id}/public_link';
};

export type DeleteApiCardByCardIdPublicLinkErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiCardByCardIdPublicLinkResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiCardByCardIdPublicLinkData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
    };
    query?: never;
    url: '/api/card/{card-id}/public_link';
};

export type PostApiCardByCardIdPublicLinkErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiCardByCardIdPublicLinkResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiCardByCardIdQueryData = {
    body?: {
        collection_preview?: boolean;
        /**
         * value must be an integer greater than zero.
         */
        dashboard_id?: number;
        ignore_cache: boolean;
    };
    path: {
        'card-id': number | string;
    };
    query?: never;
    url: '/api/card/{card-id}/query';
};

export type PostApiCardByCardIdQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiCardByCardIdQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiCardByCardIdQueryByExportFormatData = {
    body?: {
        format_rows: boolean;
        parameters?: Array<{
            [key: string]: unknown;
        }>;
        pivot_results: boolean;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
        'export-format': MetabaseQueryProcessorSchemaExportFormat;
    };
    query?: never;
    url: '/api/card/{card-id}/query/{export-format}';
};

export type PostApiCardByCardIdQueryByExportFormatErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiCardByCardIdQueryByExportFormatResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiCardByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/card/{id}';
};

export type DeleteApiCardByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiCardByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiCardByIdData = {
    body?: never;
    path: {
        id: number | string;
    };
    query?: {
        ignore_view?: boolean;
        context?: 'collection';
        'legacy-mbql'?: boolean;
    };
    url: '/api/card/{id}';
};

export type GetApiCardByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCardByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiCardByIdData = {
    body?: {
        enable_embedding?: boolean;
        /**
         * Value must be a map.
         */
        visualization_settings?: {
            [key: string]: unknown;
        };
        /**
         * value must be an integer greater than zero.
         */
        dashboard_tab_id?: number;
        collection_preview?: boolean;
        /**
         * Value must be a map.
         */
        dataset_query?: {
            [key: string]: unknown;
        };
        parameter_mappings?: MetabaseParametersSchemaParameterMappings;
        name?: string;
        archived?: boolean;
        /**
         * value must be an integer greater than zero.
         */
        collection_position?: number;
        /**
         * value must be a valid embedding params map.
         */
        embedding_params?: {
            [key: string]: 'disabled' | 'enabled' | 'locked';
        };
        result_metadata?: MetabaseAnalyzeQueryResultsResultsMetadata;
        /**
         * value must be an integer greater than zero.
         */
        collection_id?: number;
        /**
         * value must be an integer greater than zero.
         */
        cache_ttl?: number;
        type?: MetabaseLibSchemaMetadataCardType;
        display?: string;
        parameters?: MetabaseParametersSchemaParameters;
        description?: string;
        /**
         * value must be an integer greater than zero.
         */
        dashboard_id?: number;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: {
        delete_old_dashcards?: boolean;
    };
    url: '/api/card/{id}';
};

export type PutApiCardByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiCardByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiCardByIdCopyData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/card/{id}/copy';
};

export type PostApiCardByIdCopyErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiCardByIdCopyResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiCardByIdDashboardsData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/card/{id}/dashboards';
};

export type GetApiCardByIdDashboardsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCardByIdDashboardsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiCardByIdParamsByParamKeyRemappingData = {
    body?: never;
    path: {
        id: MetabaseLibSchemaIdCard;
        'param-key': MetabaseLibSchemaCommonNonBlankString;
    };
    query: {
        value: string;
    };
    url: '/api/card/{id}/params/{param-key}/remapping';
};

export type GetApiCardByIdParamsByParamKeyRemappingErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCardByIdParamsByParamKeyRemappingResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiCardByIdQueryMetadataData = {
    body?: never;
    path: {
        id: number | string;
    };
    query?: never;
    url: '/api/card/{id}/query_metadata';
};

export type GetApiCardByIdQueryMetadataErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCardByIdQueryMetadataResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiCardByIdSeriesData = {
    body?: never;
    path: {
        id: number;
    };
    query?: {
        /**
         * value must be an integer greater than zero.
         */
        last_cursor?: number;
        query?: string;
        exclude_ids?: unknown;
    };
    url: '/api/card/{id}/series';
};

export type GetApiCardByIdSeriesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCardByIdSeriesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiCardsDashboardsData = {
    body?: {
        card_ids: Array<number>;
    };
    path?: never;
    query?: never;
    url: '/api/cards/dashboards';
};

export type PostApiCardsDashboardsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiCardsDashboardsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiCardsMoveData = {
    body?: {
        card_ids: Array<number>;
        /**
         * value must be an integer greater than zero.
         */
        collection_id?: number;
        /**
         * value must be an integer greater than zero.
         */
        dashboard_id?: number;
    };
    path?: never;
    query?: never;
    url: '/api/cards/move';
};

export type PostApiCardsMoveErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiCardsMoveResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiChannelData = {
    body?: {
        include_inactive?: boolean;
    };
    path?: never;
    query?: never;
    url: '/api/channel/';
};

export type GetApiChannelErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiChannelResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiChannelData = {
    body?: {
        active?: boolean;
        description?: string;
        details: {
            [key: string]: unknown;
        };
        name: string;
        /**
         * Must be a namespaced channel. E.g: channel/http
         */
        type: unknown;
    };
    path?: never;
    query?: never;
    url: '/api/channel/';
};

export type PostApiChannelErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiChannelResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiChannelTestData = {
    body?: {
        details: {
            [key: string]: unknown;
        };
        /**
         * Must be a namespaced channel. E.g: channel/http
         */
        type: unknown;
    };
    path?: never;
    query?: never;
    url: '/api/channel/test';
};

export type PostApiChannelTestErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiChannelTestResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiChannelByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/channel/{id}';
};

export type GetApiChannelByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiChannelByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiChannelByIdData = {
    body?: {
        active?: boolean;
        description?: string;
        details?: {
            [key: string]: unknown;
        };
        name?: string;
        /**
         * Must be a namespaced channel. E.g: channel/http
         */
        type?: unknown;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/channel/{id}';
};

export type PutApiChannelByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiChannelByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiCloudMigrationData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/cloud-migration/';
};

export type GetApiCloudMigrationErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCloudMigrationResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiCloudMigrationData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/cloud-migration/';
};

export type PostApiCloudMigrationErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiCloudMigrationResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiCloudMigrationCancelData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/cloud-migration/cancel';
};

export type PutApiCloudMigrationCancelErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiCloudMigrationCancelResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiCollectionData = {
    body?: never;
    path?: never;
    query?: {
        archived?: boolean;
        'exclude-other-user-collections'?: boolean;
        namespace?: string;
        'personal-only'?: boolean;
    };
    url: '/api/collection/';
};

export type GetApiCollectionErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCollectionResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiCollectionData = {
    body?: {
        authority_level?: 'official';
        description?: string;
        name: string;
        namespace?: string;
        /**
         * value must be an integer greater than zero.
         */
        parent_id?: number;
    };
    path?: never;
    query?: never;
    url: '/api/collection/';
};

export type PostApiCollectionErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiCollectionResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiCollectionGraphData = {
    body?: never;
    path?: never;
    query?: {
        namespace?: string;
    };
    url: '/api/collection/graph';
};

export type GetApiCollectionGraphErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCollectionGraphResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiCollectionGraphData = {
    body?: {
        groups: {
            [key: string]: unknown;
        };
        namespace?: string;
        /**
         * value must be an integer.
         */
        revision?: number;
    };
    path?: never;
    query?: {
        force?: boolean;
        'skip-graph'?: boolean;
    };
    url: '/api/collection/graph';
};

export type PutApiCollectionGraphErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiCollectionGraphResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiCollectionRootData = {
    body?: never;
    path?: never;
    query?: {
        namespace?: string;
    };
    url: '/api/collection/root';
};

export type GetApiCollectionRootErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCollectionRootResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiCollectionRootDashboardQuestionCandidatesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/collection/root/dashboard-question-candidates';
};

export type GetApiCollectionRootDashboardQuestionCandidatesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCollectionRootDashboardQuestionCandidatesResponses = {
    /**
     * map where {:data -> <sequence of map where {:id -> <integer greater than 0>, :name -> <string>, :description -> <nullable string>, :sole_dashboard_info -> <map where {:id -> <integer greater than 0>, :name -> <string>, :description -> <nullable string>}>}>, :total -> <integer>}
     */
    '2XX': MetabaseCollectionsApiDashboardQuestionCandidatesResponse;
};

export type GetApiCollectionRootDashboardQuestionCandidatesResponse = GetApiCollectionRootDashboardQuestionCandidatesResponses[keyof GetApiCollectionRootDashboardQuestionCandidatesResponses];

export type GetApiCollectionRootItemsData = {
    body?: never;
    path?: never;
    query?: {
        models?: Array<'dashboard' | 'dataset' | 'no_models' | 'timeline' | 'snippet' | 'collection' | 'document' | 'pulse' | 'metric' | 'card'>;
        include_can_run_adhoc_query?: boolean;
        archived?: boolean;
        namespace?: string;
        pinned_state?: 'is_not_pinned' | 'is_pinned' | 'all';
        sort_column?: 'model' | 'name' | 'last_edited_by' | 'last_edited_at';
        sort_direction?: 'desc' | 'asc';
        official_collections_first?: boolean;
        show_dashboard_questions?: boolean;
    };
    url: '/api/collection/root/items';
};

export type GetApiCollectionRootItemsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCollectionRootItemsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiCollectionRootMoveDashboardQuestionCandidatesData = {
    body?: {
        card_ids?: Array<number>;
    };
    path?: never;
    query?: never;
    url: '/api/collection/root/move-dashboard-question-candidates';
};

export type PostApiCollectionRootMoveDashboardQuestionCandidatesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiCollectionRootMoveDashboardQuestionCandidatesResponses = {
    /**
     * map where {:moved -> <sequence of value must be an integer greater than zero.>}
     */
    '2XX': MetabaseCollectionsApiMoveDashboardQuestionCandidatesResponse;
};

export type PostApiCollectionRootMoveDashboardQuestionCandidatesResponse = PostApiCollectionRootMoveDashboardQuestionCandidatesResponses[keyof PostApiCollectionRootMoveDashboardQuestionCandidatesResponses];

export type GetApiCollectionTrashData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/collection/trash';
};

export type GetApiCollectionTrashErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCollectionTrashResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiCollectionTreeData = {
    body?: never;
    path?: never;
    query?: {
        'exclude-archived'?: boolean;
        'exclude-other-user-collections'?: boolean;
        namespace?: string;
        shallow?: boolean;
        /**
         * value must be an integer greater than zero.
         */
        'collection-id'?: number;
    };
    url: '/api/collection/tree';
};

export type GetApiCollectionTreeErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCollectionTreeResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiCollectionByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/collection/{id}';
};

export type DeleteApiCollectionByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiCollectionByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiCollectionByIdData = {
    body?: never;
    path: {
        id: number | string;
    };
    query?: never;
    url: '/api/collection/{id}';
};

export type GetApiCollectionByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCollectionByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiCollectionByIdData = {
    body?: {
        archived?: boolean;
        authority_level?: 'official';
        description?: string;
        name?: string;
        /**
         * value must be an integer greater than zero.
         */
        parent_id?: number;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/collection/{id}';
};

export type PutApiCollectionByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiCollectionByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiCollectionByIdDashboardQuestionCandidatesData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/collection/{id}/dashboard-question-candidates';
};

export type GetApiCollectionByIdDashboardQuestionCandidatesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCollectionByIdDashboardQuestionCandidatesResponses = {
    /**
     * map where {:data -> <sequence of map where {:id -> <integer greater than 0>, :name -> <string>, :description -> <nullable string>, :sole_dashboard_info -> <map where {:id -> <integer greater than 0>, :name -> <string>, :description -> <nullable string>}>}>, :total -> <integer>}
     */
    '2XX': MetabaseCollectionsApiDashboardQuestionCandidatesResponse;
};

export type GetApiCollectionByIdDashboardQuestionCandidatesResponse = GetApiCollectionByIdDashboardQuestionCandidatesResponses[keyof GetApiCollectionByIdDashboardQuestionCandidatesResponses];

export type GetApiCollectionByIdItemsData = {
    body?: never;
    path: {
        id: number | string;
    };
    query?: {
        models?: Array<'dashboard' | 'dataset' | 'no_models' | 'timeline' | 'snippet' | 'collection' | 'document' | 'pulse' | 'metric' | 'card'>;
        archived?: boolean;
        include_can_run_adhoc_query?: boolean;
        pinned_state?: 'is_not_pinned' | 'is_pinned' | 'all';
        sort_column?: 'model' | 'name' | 'last_edited_by' | 'last_edited_at';
        sort_direction?: 'desc' | 'asc';
        official_collections_first?: boolean;
        show_dashboard_questions?: boolean;
    };
    url: '/api/collection/{id}/items';
};

export type GetApiCollectionByIdItemsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiCollectionByIdItemsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiCollectionByIdMoveDashboardQuestionCandidatesData = {
    body?: {
        card_ids?: Array<number>;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/collection/{id}/move-dashboard-question-candidates';
};

export type PostApiCollectionByIdMoveDashboardQuestionCandidatesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiCollectionByIdMoveDashboardQuestionCandidatesResponses = {
    /**
     * map where {:moved -> <sequence of value must be an integer greater than zero.>}
     */
    '2XX': MetabaseCollectionsApiMoveDashboardQuestionCandidatesResponse;
};

export type PostApiCollectionByIdMoveDashboardQuestionCandidatesResponse = PostApiCollectionByIdMoveDashboardQuestionCandidatesResponses[keyof PostApiCollectionByIdMoveDashboardQuestionCandidatesResponses];

export type GetApiDashboardData = {
    body?: never;
    path?: never;
    query?: {
        f?: 'all' | 'mine' | 'archived';
    };
    url: '/api/dashboard/';
};

export type GetApiDashboardErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDashboardResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDashboardData = {
    body?: {
        /**
         * value must be an integer greater than zero.
         */
        cache_ttl?: number;
        /**
         * value must be an integer greater than zero.
         */
        collection_id?: number;
        /**
         * value must be an integer greater than zero.
         */
        collection_position?: number;
        description?: string;
        name: string;
        parameters?: MetabaseParametersSchemaParameters;
    };
    path?: never;
    query?: never;
    url: '/api/dashboard/';
};

export type PostApiDashboardErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDashboardResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDashboardEmbeddableData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/dashboard/embeddable';
};

export type GetApiDashboardEmbeddableErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDashboardEmbeddableResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDashboardParamsValidFilterFieldsData = {
    body?: never;
    path?: never;
    query: {
        filtered: Array<MetabaseLibSchemaIdField>;
        filtering?: Array<MetabaseLibSchemaIdField>;
    };
    url: '/api/dashboard/params/valid-filter-fields';
};

export type GetApiDashboardParamsValidFilterFieldsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDashboardParamsValidFilterFieldsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDashboardPivotByDashboardIdDashcardByDashcardIdCardByCardIdQueryData = {
    body?: {
        /**
         * value must be a parameter map with an 'id' key
         */
        parameters?: Array<{
            id: string;
        } & {
            [key: string]: unknown;
        }>;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'dashboard-id': number;
        /**
         * value must be an integer greater than zero.
         */
        'dashcard-id': number;
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
    };
    query?: never;
    url: '/api/dashboard/pivot/{dashboard-id}/dashcard/{dashcard-id}/card/{card-id}/query';
};

export type PostApiDashboardPivotByDashboardIdDashcardByDashcardIdCardByCardIdQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDashboardPivotByDashboardIdDashcardByDashcardIdCardByCardIdQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDashboardPublicData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/dashboard/public';
};

export type GetApiDashboardPublicErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDashboardPublicResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDashboardSaveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/dashboard/save';
};

export type PostApiDashboardSaveErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDashboardSaveResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDashboardSaveCollectionByParentCollectionIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'parent-collection-id': number;
    };
    query?: never;
    url: '/api/dashboard/save/collection/{parent-collection-id}';
};

export type PostApiDashboardSaveCollectionByParentCollectionIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDashboardSaveCollectionByParentCollectionIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDashboardByDashboardIdDashcardByDashcardIdCardByCardIdQueryData = {
    body?: {
        dashboard_load_id?: string;
        /**
         * value must be a parameter map with an 'id' key
         */
        parameters?: Array<{
            id: string;
        } & {
            [key: string]: unknown;
        }>;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'dashboard-id': number;
        /**
         * value must be an integer greater than zero.
         */
        'dashcard-id': number;
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
    };
    query?: never;
    url: '/api/dashboard/{dashboard-id}/dashcard/{dashcard-id}/card/{card-id}/query';
};

export type PostApiDashboardByDashboardIdDashcardByDashcardIdCardByCardIdQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDashboardByDashboardIdDashcardByDashcardIdCardByCardIdQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDashboardByDashboardIdDashcardByDashcardIdCardByCardIdQueryByExportFormatData = {
    body?: {
        format_rows: boolean;
        parameters?: Array<{
            id: string;
        } & {
            [key: string]: unknown;
        }> | string;
        pivot_results: boolean;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'dashboard-id': number;
        /**
         * value must be an integer greater than zero.
         */
        'dashcard-id': number;
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
        'export-format': MetabaseQueryProcessorSchemaExportFormat;
    };
    query?: never;
    url: '/api/dashboard/{dashboard-id}/dashcard/{dashcard-id}/card/{card-id}/query/{export-format}';
};

export type PostApiDashboardByDashboardIdDashcardByDashcardIdCardByCardIdQueryByExportFormatErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDashboardByDashboardIdDashcardByDashcardIdCardByCardIdQueryByExportFormatResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDashboardByDashboardIdDashcardByDashcardIdExecuteData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'dashboard-id': number;
        /**
         * value must be an integer greater than zero.
         */
        'dashcard-id': number;
    };
    query?: {
        /**
         * value must be a valid JSON string.
         */
        parameters?: string;
    };
    url: '/api/dashboard/{dashboard-id}/dashcard/{dashcard-id}/execute';
};

export type GetApiDashboardByDashboardIdDashcardByDashcardIdExecuteErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDashboardByDashboardIdDashcardByDashcardIdExecuteResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDashboardByDashboardIdDashcardByDashcardIdExecuteData = {
    body?: {
        parameters?: {
            [key: string]: unknown;
        };
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'dashboard-id': number;
        /**
         * value must be an integer greater than zero.
         */
        'dashcard-id': number;
    };
    query?: never;
    url: '/api/dashboard/{dashboard-id}/dashcard/{dashcard-id}/execute';
};

export type PostApiDashboardByDashboardIdDashcardByDashcardIdExecuteErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDashboardByDashboardIdDashcardByDashcardIdExecuteResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiDashboardByDashboardIdPublicLinkData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'dashboard-id': number;
    };
    query?: never;
    url: '/api/dashboard/{dashboard-id}/public_link';
};

export type DeleteApiDashboardByDashboardIdPublicLinkErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiDashboardByDashboardIdPublicLinkResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDashboardByDashboardIdPublicLinkData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'dashboard-id': number;
    };
    query?: never;
    url: '/api/dashboard/{dashboard-id}/public_link';
};

export type PostApiDashboardByDashboardIdPublicLinkErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDashboardByDashboardIdPublicLinkResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDashboardByFromDashboardIdCopyData = {
    body?: {
        /**
         * value must be an integer greater than zero.
         */
        collection_id?: number;
        /**
         * value must be an integer greater than zero.
         */
        collection_position?: number;
        description?: string;
        is_deep_copy?: boolean;
        name?: string;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'from-dashboard-id': number;
    };
    query?: never;
    url: '/api/dashboard/{from-dashboard-id}/copy';
};

export type PostApiDashboardByFromDashboardIdCopyErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDashboardByFromDashboardIdCopyResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiDashboardByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/dashboard/{id}';
};

export type DeleteApiDashboardByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiDashboardByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDashboardByIdData = {
    body?: never;
    path: {
        id: number | string;
    };
    query?: never;
    url: '/api/dashboard/{id}';
};

export type GetApiDashboardByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDashboardByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiDashboardByIdData = {
    body?: {
        points_of_interest?: string;
        enable_embedding?: boolean;
        width?: 'fixed' | 'full';
        show_in_getting_started?: boolean;
        /**
         * value must be an integer greater than zero.
         */
        position?: number;
        name?: string;
        archived?: boolean;
        /**
         * value must be an integer greater than zero.
         */
        collection_position?: number;
        /**
         * value must be a valid embedding params map.
         */
        embedding_params?: {
            [key: string]: 'disabled' | 'enabled' | 'locked';
        };
        /**
         * value must be seq of maps in which ids are unique
         */
        tabs?: Array<{
            /**
             * value must be an integer.
             */
            id: number;
            name: string;
        }>;
        /**
         * value must be an integer greater than zero.
         */
        collection_id?: number;
        /**
         * value must be an integer greater than zero.
         */
        cache_ttl?: number;
        caveats?: string;
        parameters?: MetabaseParametersSchemaParameters;
        /**
         * value must be seq of maps in which ids are unique
         */
        dashcards?: Array<{
            /**
             * value must be an integer greater or equal to than zero.
             */
            col: number;
            id: number;
            inline_parameters?: Array<string>;
            parameter_mappings?: MetabaseParametersSchemaParameterMappings;
            /**
             * value must be an integer greater or equal to than zero.
             */
            row: number;
            series?: Array<{
                [key: string]: unknown;
            }>;
            /**
             * value must be an integer greater than zero.
             */
            size_x: number;
            /**
             * value must be an integer greater than zero.
             */
            size_y: number;
        }>;
        description?: string;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/dashboard/{id}';
};

export type PutApiDashboardByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiDashboardByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiDashboardByIdCardsData = {
    body?: {
        /**
         * value must be seq of maps in which ids are unique
         */
        cards: Array<{
            /**
             * value must be an integer greater or equal to than zero.
             */
            col: number;
            id: number;
            inline_parameters?: Array<string>;
            parameter_mappings?: MetabaseParametersSchemaParameterMappings;
            /**
             * value must be an integer greater or equal to than zero.
             */
            row: number;
            series?: Array<{
                [key: string]: unknown;
            }>;
            /**
             * value must be an integer greater than zero.
             */
            size_x: number;
            /**
             * value must be an integer greater than zero.
             */
            size_y: number;
        }>;
        /**
         * value must be seq of maps in which ids are unique
         */
        tabs?: Array<{
            /**
             * value must be an integer.
             */
            id: number;
            name: string;
        }>;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/dashboard/{id}/cards';
};

export type PutApiDashboardByIdCardsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiDashboardByIdCardsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDashboardByIdItemsData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/dashboard/{id}/items';
};

export type GetApiDashboardByIdItemsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDashboardByIdItemsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDashboardByIdParamsByParamKeyRemappingData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
        'param-key': string;
    };
    query: {
        value: string;
    };
    url: '/api/dashboard/{id}/params/{param-key}/remapping';
};

export type GetApiDashboardByIdParamsByParamKeyRemappingErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDashboardByIdParamsByParamKeyRemappingResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDashboardByIdParamsByParamKeySearchByQueryData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
        query: string;
    };
    query?: never;
    url: '/api/dashboard/{id}/params/{param-key}/search/{query}';
};

export type GetApiDashboardByIdParamsByParamKeySearchByQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDashboardByIdParamsByParamKeySearchByQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDashboardByIdParamsByParamKeyValuesData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/dashboard/{id}/params/{param-key}/values';
};

export type GetApiDashboardByIdParamsByParamKeyValuesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDashboardByIdParamsByParamKeyValuesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDashboardByIdQueryMetadataData = {
    body?: never;
    path: {
        id: number | string;
    };
    query?: never;
    url: '/api/dashboard/{id}/query_metadata';
};

export type GetApiDashboardByIdQueryMetadataErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDashboardByIdQueryMetadataResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDashboardByIdRelatedData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/dashboard/{id}/related';
};

export type GetApiDashboardByIdRelatedErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDashboardByIdRelatedResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDatabaseData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * include must be either empty or the value 'tables'
         */
        include?: 'tables';
        include_analytics?: boolean;
        saved?: boolean;
        include_editable_data_model?: boolean;
        exclude_uneditable_details?: boolean;
        include_only_uploadable?: boolean;
        /**
         * value must be an integer greater than zero.
         */
        router_database_id?: number;
    };
    url: '/api/database/';
};

export type GetApiDatabaseErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDatabaseResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDatabaseData = {
    body?: {
        provider_name?: string;
        name: string;
        is_on_demand?: boolean;
        /**
         * value must be an integer greater than zero.
         */
        cache_ttl?: number;
        /**
         * value must be a valid database engine.
         */
        engine: string;
        /**
         * Value must be a map.
         */
        details: {
            [key: string]: unknown;
        };
        is_full_sync?: boolean;
        connection_source?: 'admin' | 'setup';
        auto_run_queries?: boolean;
        schedules?: MetabaseSyncSchedulesExpandedSchedulesMap;
    };
    path?: never;
    query?: never;
    url: '/api/database/';
};

export type PostApiDatabaseErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDatabaseResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDatabaseSampleDatabaseData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/database/sample_database';
};

export type PostApiDatabaseSampleDatabaseErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDatabaseSampleDatabaseResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDatabaseValidateData = {
    body?: {
        details: {
            details: {
                [key: string]: unknown;
            };
            /**
             * value must be a valid database engine.
             */
            engine: string;
        };
    };
    path?: never;
    query?: never;
    url: '/api/database/validate';
};

export type PostApiDatabaseValidateErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDatabaseValidateResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiDatabaseByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/database/{id}';
};

export type DeleteApiDatabaseByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiDatabaseByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDatabaseByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: {
        include?: 'tables' | 'tables.fields';
        include_editable_data_model?: boolean;
        exclude_uneditable_details?: boolean;
    };
    url: '/api/database/{id}';
};

export type GetApiDatabaseByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDatabaseByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiDatabaseByIdData = {
    body?: {
        points_of_interest?: string;
        provider_name?: string;
        /**
         * Value must be a map.
         */
        settings?: {
            [key: string]: unknown;
        };
        name?: string;
        /**
         * value must be an integer greater than zero.
         */
        cache_ttl?: number;
        /**
         * value must be a valid database engine.
         */
        engine?: string;
        /**
         * Value must be a map.
         */
        details?: {
            [key: string]: unknown;
        };
        auto_run_queries?: boolean;
        caveats?: string;
        refingerprint?: boolean;
        schedules?: MetabaseSyncSchedulesExpandedSchedulesMap;
        description?: string;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/database/{id}';
};

export type PutApiDatabaseByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiDatabaseByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDatabaseByIdAutocompleteSuggestionsData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: {
        prefix?: string;
        substring?: string;
    };
    url: '/api/database/{id}/autocomplete_suggestions';
};

export type GetApiDatabaseByIdAutocompleteSuggestionsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDatabaseByIdAutocompleteSuggestionsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDatabaseByIdCardAutocompleteSuggestionsData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query: {
        query: string;
        include_dashboard_questions?: boolean;
    };
    url: '/api/database/{id}/card_autocomplete_suggestions';
};

export type GetApiDatabaseByIdCardAutocompleteSuggestionsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDatabaseByIdCardAutocompleteSuggestionsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDatabaseByIdDiscardValuesData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/database/{id}/discard_values';
};

export type PostApiDatabaseByIdDiscardValuesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDatabaseByIdDiscardValuesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDatabaseByIdDismissSpinnerData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/database/{id}/dismiss_spinner';
};

export type PostApiDatabaseByIdDismissSpinnerErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDatabaseByIdDismissSpinnerResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDatabaseByIdFieldsData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/database/{id}/fields';
};

export type GetApiDatabaseByIdFieldsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDatabaseByIdFieldsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDatabaseByIdHealthcheckData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/database/{id}/healthcheck';
};

export type GetApiDatabaseByIdHealthcheckErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDatabaseByIdHealthcheckResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDatabaseByIdIdfieldsData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/database/{id}/idfields';
};

export type GetApiDatabaseByIdIdfieldsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDatabaseByIdIdfieldsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDatabaseByIdMetadataData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: {
        include_hidden?: boolean;
        include_editable_data_model?: boolean;
        remove_inactive?: boolean;
        skip_fields?: boolean;
    };
    url: '/api/database/{id}/metadata';
};

export type GetApiDatabaseByIdMetadataErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDatabaseByIdMetadataResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDatabaseByIdRescanValuesData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/database/{id}/rescan_values';
};

export type PostApiDatabaseByIdRescanValuesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDatabaseByIdRescanValuesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDatabaseByIdSchemaData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: {
        include_hidden?: boolean;
        include_editable_data_model?: boolean;
    };
    url: '/api/database/{id}/schema/';
};

export type GetApiDatabaseByIdSchemaErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDatabaseByIdSchemaResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDatabaseByIdSchemaBySchemaData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: {
        include_hidden?: boolean;
        include_editable_data_model?: boolean;
    };
    url: '/api/database/{id}/schema/{schema}';
};

export type GetApiDatabaseByIdSchemaBySchemaErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDatabaseByIdSchemaBySchemaResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDatabaseByIdSchemasData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: {
        include_editable_data_model?: boolean;
        include_hidden?: boolean;
    };
    url: '/api/database/{id}/schemas';
};

export type GetApiDatabaseByIdSchemasErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDatabaseByIdSchemasResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDatabaseByIdSettingsAvailableData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/database/{id}/settings-available';
};

export type GetApiDatabaseByIdSettingsAvailableErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDatabaseByIdSettingsAvailableResponses = {
    /**
     * map where {:settings -> <map from <keyword> to <map where {:enabled -> <boolean>, :reasons (optional) -> <sequence of map where {:key -> <keyword>, :type -> <enum of :error, :warning>, :message -> <string, or function>}>}>>}
     */
    '2XX': {
        settings: MetabaseWarehousesApiAvailableSettings;
    };
};

export type GetApiDatabaseByIdSettingsAvailableResponse = GetApiDatabaseByIdSettingsAvailableResponses[keyof GetApiDatabaseByIdSettingsAvailableResponses];

export type PostApiDatabaseByIdSyncSchemaData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/database/{id}/sync_schema';
};

export type PostApiDatabaseByIdSyncSchemaErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDatabaseByIdSyncSchemaResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDatabaseByIdSyncableSchemasData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/database/{id}/syncable_schemas';
};

export type GetApiDatabaseByIdSyncableSchemasErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDatabaseByIdSyncableSchemasResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDatabaseByIdUsageInfoData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/database/{id}/usage_info';
};

export type GetApiDatabaseByIdUsageInfoErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDatabaseByIdUsageInfoResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDatabaseByVirtualDbDatasetsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/database/{virtual-db}/datasets';
};

export type GetApiDatabaseByVirtualDbDatasetsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDatabaseByVirtualDbDatasetsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDatabaseByVirtualDbDatasetsBySchemaData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/database/{virtual-db}/datasets/{schema}';
};

export type GetApiDatabaseByVirtualDbDatasetsBySchemaErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDatabaseByVirtualDbDatasetsBySchemaResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDatabaseByVirtualDbMetadataData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/database/{virtual-db}/metadata';
};

export type GetApiDatabaseByVirtualDbMetadataErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDatabaseByVirtualDbMetadataResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDatabaseByVirtualDbSchemaBySchemaData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/database/{virtual-db}/schema/{schema}';
};

export type GetApiDatabaseByVirtualDbSchemaBySchemaErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDatabaseByVirtualDbSchemaBySchemaResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDatabaseByVirtualDbSchemasData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/database/{virtual-db}/schemas';
};

export type GetApiDatabaseByVirtualDbSchemasErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDatabaseByVirtualDbSchemasResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDatasetData = {
    body?: {
        database?: number;
    };
    path?: never;
    query?: never;
    url: '/api/dataset/';
};

export type PostApiDatasetErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDatasetResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDatasetNativeData = {
    body?: {
        /**
         * value must be an integer greater than zero.
         */
        database: number;
        pretty?: boolean;
    };
    path?: never;
    query?: never;
    url: '/api/dataset/native';
};

export type PostApiDatasetNativeErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDatasetNativeResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDatasetParameterRemappingData = {
    body?: {
        field_ids?: Array<MetabaseLibSchemaIdField>;
        parameter: MetabaseParametersSchemaParameter;
        value: unknown;
    };
    path?: never;
    query?: never;
    url: '/api/dataset/parameter/remapping';
};

export type PostApiDatasetParameterRemappingErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDatasetParameterRemappingResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDatasetParameterSearchByQueryData = {
    body?: {
        field_ids?: Array<MetabaseLibSchemaIdField>;
        parameter: MetabaseParametersSchemaParameter;
    };
    path: {
        query: string;
    };
    query?: never;
    url: '/api/dataset/parameter/search/{query}';
};

export type PostApiDatasetParameterSearchByQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDatasetParameterSearchByQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDatasetParameterValuesData = {
    body?: {
        field_ids?: Array<MetabaseLibSchemaIdField>;
        parameter: MetabaseParametersSchemaParameter;
    };
    path?: never;
    query?: never;
    url: '/api/dataset/parameter/values';
};

export type PostApiDatasetParameterValuesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDatasetParameterValuesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDatasetPivotData = {
    body?: {
        /**
         * value must be an integer greater than zero.
         */
        database: number;
    };
    path?: never;
    query?: never;
    url: '/api/dataset/pivot';
};

export type PostApiDatasetPivotErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDatasetPivotResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDatasetQueryMetadataData = {
    body?: {
        /**
         * value must be an integer greater than zero.
         */
        database: number;
    };
    path?: never;
    query?: never;
    url: '/api/dataset/query_metadata';
};

export type PostApiDatasetQueryMetadataErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDatasetQueryMetadataResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDatasetByExportFormatData = {
    body?: {
        format_rows: boolean;
        pivot_results: boolean;
        query: {
            [key: string]: unknown;
        };
        visualization_settings: {
            [key: string]: unknown;
        };
    };
    path: {
        'export-format': MetabaseQueryProcessorSchemaExportFormat;
    };
    query?: never;
    url: '/api/dataset/{export-format}';
};

export type PostApiDatasetByExportFormatErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDatasetByExportFormatResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDevPrototypeByTypeData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/dev/prototype/{type}/';
};

export type GetApiDevPrototypeByTypeErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDevPrototypeByTypeResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiDevPrototypeByTypeData = {
    body?: never;
    path: {
        type: string;
    };
    query?: never;
    url: '/api/dev/prototype/{type}/';
};

export type PostApiDevPrototypeByTypeErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiDevPrototypeByTypeResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiDevPrototypeByTypeAllData = {
    body?: never;
    path: {
        type: string;
    };
    query?: never;
    url: '/api/dev/prototype/{type}/all';
};

export type DeleteApiDevPrototypeByTypeAllErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiDevPrototypeByTypeAllResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiDevPrototypeByTypeByIdData = {
    body?: never;
    path: {
        type: string;
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/dev/prototype/{type}/{id}';
};

export type DeleteApiDevPrototypeByTypeByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiDevPrototypeByTypeByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiDevPrototypeByTypeByIdData = {
    body?: never;
    path: {
        type: string;
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/dev/prototype/{type}/{id}';
};

export type GetApiDevPrototypeByTypeByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiDevPrototypeByTypeByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiDevPrototypeByTypeByIdData = {
    body?: never;
    path: {
        type: string;
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/dev/prototype/{type}/{id}';
};

export type PutApiDevPrototypeByTypeByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiDevPrototypeByTypeByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeActionV2ExecuteData = {
    body?: {
        action: MetabaseEnterpriseActionV2ApiApiActionIdOrExpression;
        input?: {
            [key: string]: unknown;
        };
        params?: {
            [key: string]: unknown;
        };
        scope: MetabaseActionsTypesScopeRaw;
    };
    path?: never;
    query?: never;
    url: '/api/ee/action-v2/execute';
};

export type PostApiEeActionV2ExecuteErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeActionV2ExecuteResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeActionV2ExecuteBulkData = {
    body?: {
        action: MetabaseEnterpriseActionV2ApiApiActionIdOrExpression;
        inputs: Array<{
            [key: string]: unknown;
        }>;
        params?: {
            [key: string]: unknown;
        };
        scope: MetabaseActionsTypesScopeRaw;
    };
    path?: never;
    query?: never;
    url: '/api/ee/action-v2/execute-bulk';
};

export type PostApiEeActionV2ExecuteBulkErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeActionV2ExecuteBulkResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeActionV2ExecuteFormData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ee/action-v2/execute-form';
};

export type PostApiEeActionV2ExecuteFormErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeActionV2ExecuteFormResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeAdvancedPermissionsApplicationGraphData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ee/advanced-permissions/application/graph';
};

export type GetApiEeAdvancedPermissionsApplicationGraphErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeAdvancedPermissionsApplicationGraphResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiEeAdvancedPermissionsApplicationGraphData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        'skip-graph'?: boolean;
        force?: boolean;
    };
    url: '/api/ee/advanced-permissions/application/graph';
};

export type PutApiEeAdvancedPermissionsApplicationGraphErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiEeAdvancedPermissionsApplicationGraphResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeAdvancedPermissionsImpersonationData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * value must be an integer greater than zero.
         */
        group_id?: number;
        /**
         * value must be an integer greater than zero.
         */
        db_id?: number;
    };
    url: '/api/ee/advanced-permissions/impersonation/';
};

export type GetApiEeAdvancedPermissionsImpersonationErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeAdvancedPermissionsImpersonationResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiEeAdvancedPermissionsImpersonationByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/ee/advanced-permissions/impersonation/{id}';
};

export type DeleteApiEeAdvancedPermissionsImpersonationByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiEeAdvancedPermissionsImpersonationByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeAiEntityAnalysisAnalyzeChartData = {
    body?: {
        description?: string;
        image_base64: string;
        name?: string;
        timeline_events?: Array<{
            description?: string;
            name: string;
            timestamp: string;
        }>;
    };
    path?: never;
    query?: never;
    url: '/api/ee/ai-entity-analysis/analyze-chart';
};

export type PostApiEeAiEntityAnalysisAnalyzeChartErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeAiEntityAnalysisAnalyzeChartResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeAiSqlFixerFixData = {
    body?: {
        error_message: string;
        query: {
            /**
             * value must be an integer greater than zero.
             */
            database: number;
        };
    };
    path?: never;
    query?: never;
    url: '/api/ee/ai-sql-fixer/fix';
};

export type PostApiEeAiSqlFixerFixErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeAiSqlFixerFixResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeAiSqlGenerationGenerateData = {
    body?: {
        /**
         * value must be an integer greater than zero.
         */
        database_id: number;
        prompt: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/ai-sql-generation/generate';
};

export type PostApiEeAiSqlGenerationGenerateErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeAiSqlGenerationGenerateResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeAuditAppUserAuditInfoData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ee/audit-app/user/audit-info';
};

export type GetApiEeAuditAppUserAuditInfoErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeAuditAppUserAuditInfoResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiEeAuditAppUserByIdSubscriptionsData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/ee/audit-app/user/{id}/subscriptions';
};

export type DeleteApiEeAuditAppUserByIdSubscriptionsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiEeAuditAppUserByIdSubscriptionsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeAutodescribeCardSummarizeData = {
    body?: {
        /**
         * Value must be a map.
         */
        visualization_settings: {
            [key: string]: unknown;
        };
        dataset?: boolean;
        /**
         * Value must be a map.
         */
        dataset_query: {
            [key: string]: unknown;
        };
        parameter_mappings?: Array<MetabaseParametersSchemaParameterMapping>;
        /**
         * value must be an integer greater than zero.
         */
        collection_position?: number;
        result_metadata?: MetabaseAnalyzeQueryResultsResultsMetadata;
        /**
         * value must be an integer greater than zero.
         */
        collection_id?: number;
        /**
         * value must be an integer greater than zero.
         */
        cache_ttl?: number;
        display: string;
        parameters?: Array<MetabaseParametersSchemaParameter>;
        description?: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/autodescribe/card/summarize';
};

export type PostApiEeAutodescribeCardSummarizeErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeAutodescribeCardSummarizeResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeAutodescribeDashboardSummarizeByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/ee/autodescribe/dashboard/summarize/{id}';
};

export type PostApiEeAutodescribeDashboardSummarizeByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeAutodescribeDashboardSummarizeByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeBillingData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ee/billing/';
};

export type GetApiEeBillingErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeBillingResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeCloudAddOnsByProductTypeData = {
    body?: {
        terms_of_service: boolean;
    };
    path: {
        'product-type': 'metabase-ai';
    };
    query?: never;
    url: '/api/ee/cloud-add-ons/{product-type}';
};

export type PostApiEeCloudAddOnsByProductTypeErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeCloudAddOnsByProductTypeResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeCommentData = {
    body?: never;
    path?: never;
    query: {
        target_type: 'document';
        /**
         * value must be an integer greater than zero.
         */
        target_id: number;
    };
    url: '/api/ee/comment/';
};

export type GetApiEeCommentErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeCommentResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeCommentData = {
    body?: {
        child_target_id?: string;
        content: {
            [key: string]: unknown;
        };
        html: string;
        /**
         * value must be an integer greater than zero.
         */
        parent_comment_id?: number;
        /**
         * value must be an integer greater than zero.
         */
        target_id: number;
        target_type: 'document';
    };
    path?: never;
    query?: never;
    url: '/api/ee/comment/';
};

export type PostApiEeCommentErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeCommentResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeCommentMentionsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ee/comment/mentions';
};

export type GetApiEeCommentMentionsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeCommentMentionsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiEeCommentByCommentIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'comment-id': number;
    };
    query?: never;
    url: '/api/ee/comment/{comment-id}';
};

export type DeleteApiEeCommentByCommentIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiEeCommentByCommentIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiEeCommentByCommentIdData = {
    body?: {
        content?: {
            [key: string]: unknown;
        };
        html?: string;
        is_resolved?: boolean;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'comment-id': number;
    };
    query?: never;
    url: '/api/ee/comment/{comment-id}';
};

export type PutApiEeCommentByCommentIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiEeCommentByCommentIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeCommentByCommentIdReactionData = {
    body?: {
        emoji: string;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'comment-id': number;
    };
    query?: never;
    url: '/api/ee/comment/{comment-id}/reaction';
};

export type PostApiEeCommentByCommentIdReactionErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeCommentByCommentIdReactionResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeContentTranslationCsvData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ee/content-translation/csv';
};

export type GetApiEeContentTranslationCsvErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeContentTranslationCsvResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeContentTranslationDictionaryByTokenData = {
    body?: never;
    path: {
        token: string;
    };
    query?: never;
    url: '/api/ee/content-translation/dictionary/{token}';
};

export type GetApiEeContentTranslationDictionaryByTokenErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeContentTranslationDictionaryByTokenResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeContentTranslationUploadDictionaryData = {
    body?: {
        file: {
            filename: string;
            tempfile: unknown;
        };
    };
    path?: never;
    query?: never;
    url: '/api/ee/content-translation/upload-dictionary';
};

export type PostApiEeContentTranslationUploadDictionaryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeContentTranslationUploadDictionaryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiEeDatabaseReplicationConnectionByDatabaseIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'database-id': number;
    };
    query?: never;
    url: '/api/ee/database-replication/connection/{database-id}';
};

export type DeleteApiEeDatabaseReplicationConnectionByDatabaseIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiEeDatabaseReplicationConnectionByDatabaseIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeDatabaseReplicationConnectionByDatabaseIdData = {
    body?: {
        replicationSchemaFilters?: {
            'schema-filters-patterns': string;
            'schema-filters-type': 'inclusion' | 'exclusion' | 'all';
        };
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'database-id': number;
    };
    query?: never;
    url: '/api/ee/database-replication/connection/{database-id}';
};

export type PostApiEeDatabaseReplicationConnectionByDatabaseIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeDatabaseReplicationConnectionByDatabaseIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeDatabaseReplicationConnectionByDatabaseIdPreviewData = {
    body?: {
        replicationSchemaFilters?: {
            'schema-filters-patterns': string;
            'schema-filters-type': 'inclusion' | 'exclusion' | 'all';
        };
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'database-id': number;
    };
    query?: never;
    url: '/api/ee/database-replication/connection/{database-id}/preview';
};

export type PostApiEeDatabaseReplicationConnectionByDatabaseIdPreviewErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeDatabaseReplicationConnectionByDatabaseIdPreviewResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeDatabaseRoutingDestinationDatabaseData = {
    body?: {
        destinations: Array<{
            /**
             * Value must be a map.
             */
            details: {
                [key: string]: unknown;
            };
            name: string;
        }>;
        /**
         * value must be an integer greater than zero.
         */
        router_database_id: number;
    };
    path?: never;
    query?: {
        check_connection_details?: boolean;
    };
    url: '/api/ee/database-routing/destination-database';
};

export type PostApiEeDatabaseRoutingDestinationDatabaseErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeDatabaseRoutingDestinationDatabaseResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiEeDatabaseRoutingRouterDatabaseByIdData = {
    body?: {
        user_attribute?: string;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/ee/database-routing/router-database/{id}';
};

export type PutApiEeDatabaseRoutingRouterDatabaseByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiEeDatabaseRoutingRouterDatabaseByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeDependenciesCheckCardData = {
    body?: MetabaseEnterpriseDependenciesApiCardBody;
    path?: never;
    query?: never;
    url: '/api/ee/dependencies/check_card';
};

export type PostApiEeDependenciesCheckCardErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeDependenciesCheckCardResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeDependenciesCheckSnippetData = {
    body?: {
        content?: string;
        /**
         * value must be an integer greater than zero.
         */
        id: number;
        /**
         * snippet names cannot include '}' or start with spaces
         */
        name?: unknown;
    };
    path?: never;
    query?: never;
    url: '/api/ee/dependencies/check_snippet';
};

export type PostApiEeDependenciesCheckSnippetErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeDependenciesCheckSnippetResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeDependenciesCheckTransformData = {
    body?: MetabaseEnterpriseDependenciesApiTransformBody;
    path?: never;
    query?: never;
    url: '/api/ee/dependencies/check_transform';
};

export type PostApiEeDependenciesCheckTransformErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeDependenciesCheckTransformResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeDocumentData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ee/document/';
};

export type GetApiEeDocumentErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeDocumentResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeDocumentData = {
    body?: {
        cards?: {
            [key: string]: {
                /**
                 * Value must be a map.
                 */
                visualization_settings: {
                    [key: string]: unknown;
                };
                entity_id?: string;
                /**
                 * Value must be a map.
                 */
                dataset_query: {
                    [key: string]: unknown;
                };
                parameter_mappings?: Array<{
                    [key: string]: unknown;
                }>;
                name: string;
                result_metadata?: Array<{
                    [key: string]: unknown;
                }>;
                /**
                 * value must be an integer greater than zero.
                 */
                cache_ttl?: number;
                display: string;
                parameters?: Array<{
                    [key: string]: unknown;
                }>;
                description?: string;
            };
        };
        /**
         * value must be an integer greater than zero.
         */
        collection_id?: number;
        /**
         * value must be an integer greater than zero.
         */
        collection_position?: number;
        document: unknown;
        name: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/document/';
};

export type PostApiEeDocumentErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeDocumentResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiEeDocumentByDocumentIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'document-id': number;
    };
    query?: never;
    url: '/api/ee/document/{document-id}';
};

export type DeleteApiEeDocumentByDocumentIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiEeDocumentByDocumentIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeDocumentByDocumentIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'document-id': number;
    };
    query?: never;
    url: '/api/ee/document/{document-id}';
};

export type GetApiEeDocumentByDocumentIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeDocumentByDocumentIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiEeDocumentByDocumentIdData = {
    body?: {
        archived?: boolean;
        cards?: {
            [key: string]: {
                /**
                 * Value must be a map.
                 */
                visualization_settings: {
                    [key: string]: unknown;
                };
                entity_id?: string;
                /**
                 * Value must be a map.
                 */
                dataset_query: {
                    [key: string]: unknown;
                };
                parameter_mappings?: Array<{
                    [key: string]: unknown;
                }>;
                name: string;
                result_metadata?: Array<{
                    [key: string]: unknown;
                }>;
                /**
                 * value must be an integer greater than zero.
                 */
                cache_ttl?: number;
                display: string;
                parameters?: Array<{
                    [key: string]: unknown;
                }>;
                description?: string;
            };
        };
        /**
         * value must be an integer greater than zero.
         */
        collection_id?: number;
        /**
         * value must be an integer greater than zero.
         */
        collection_position?: number;
        document?: unknown;
        name?: string;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'document-id': number;
    };
    query?: never;
    url: '/api/ee/document/{document-id}';
};

export type PutApiEeDocumentByDocumentIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiEeDocumentByDocumentIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiEeEmailOverrideData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ee/email/override';
};

export type DeleteApiEeEmailOverrideErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiEeEmailOverrideResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiEeEmailOverrideData = {
    body?: {
        'email-smtp-host-override'?: string | null;
        'email-smtp-password-override'?: string | null;
        'email-smtp-port-override'?: number | null;
        'email-smtp-security-override'?: string | null;
        'email-smtp-username-override'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/ee/email/override';
};

export type PutApiEeEmailOverrideErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiEeEmailOverrideResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeEmbeddingHubChecklistData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ee/embedding-hub/checklist';
};

export type GetApiEeEmbeddingHubChecklistErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeEmbeddingHubChecklistResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiEeGsheetsConnectionData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ee/gsheets/connection';
};

export type DeleteApiEeGsheetsConnectionErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiEeGsheetsConnectionResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeGsheetsConnectionData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ee/gsheets/connection';
};

export type GetApiEeGsheetsConnectionErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeGsheetsConnectionResponses = {
    /**
     * map where {:error -> <true>, :message -> <value must be a non-blank string.>}, or one of <not-connected = map | syncing = map where {:url -> <value must be a non-blank string.>, :created_at -> <integer greater than 0>, :sync_started_at -> <integer greater than 0>, :created_by_id -> <integer greater than 0>, :db_id -> <integer greater than 0>} | active = map where {:url -> <value must be a non-blank string.>, :created_at -> <integer greater than 0>, :last_sync_at -> <integer greater than 0>, :next_sync_at -> <integer greater than 0>, :created_by_id -> <integer greater than 0>, :db_id -> <integer greater than 0>} | error = map where {:url -> <value must be a non-blank string.>, :created_at -> <integer greater than 0>, :error_message -> <value must be a non-blank string.>, :created_by_id -> <integer greater than 0>, :db_id -> <integer greater than 0>}> dispatched by :status
     */
    '2XX': GsheetsResponse;
};

export type GetApiEeGsheetsConnectionResponse = GetApiEeGsheetsConnectionResponses[keyof GetApiEeGsheetsConnectionResponses];

export type PostApiEeGsheetsConnectionData = {
    body?: {
        url: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/gsheets/connection';
};

export type PostApiEeGsheetsConnectionErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeGsheetsConnectionResponses = {
    /**
     * map where {:error -> <true>, :message -> <value must be a non-blank string.>}, or one of <not-connected = map | syncing = map where {:url -> <value must be a non-blank string.>, :created_at -> <integer greater than 0>, :sync_started_at -> <integer greater than 0>, :created_by_id -> <integer greater than 0>, :db_id -> <integer greater than 0>} | active = map where {:url -> <value must be a non-blank string.>, :created_at -> <integer greater than 0>, :last_sync_at -> <integer greater than 0>, :next_sync_at -> <integer greater than 0>, :created_by_id -> <integer greater than 0>, :db_id -> <integer greater than 0>} | error = map where {:url -> <value must be a non-blank string.>, :created_at -> <integer greater than 0>, :error_message -> <value must be a non-blank string.>, :created_by_id -> <integer greater than 0>, :db_id -> <integer greater than 0>}> dispatched by :status
     */
    '2XX': GsheetsResponse;
};

export type PostApiEeGsheetsConnectionResponse = PostApiEeGsheetsConnectionResponses[keyof PostApiEeGsheetsConnectionResponses];

export type PostApiEeGsheetsConnectionSyncData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ee/gsheets/connection/sync';
};

export type PostApiEeGsheetsConnectionSyncErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeGsheetsConnectionSyncResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeGsheetsServiceAccountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ee/gsheets/service-account';
};

export type GetApiEeGsheetsServiceAccountErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeGsheetsServiceAccountResponses = {
    /**
     * map where {:email -> <nullable string>}
     */
    '2XX': {
        email?: string;
    };
};

export type GetApiEeGsheetsServiceAccountResponse = GetApiEeGsheetsServiceAccountResponses[keyof GetApiEeGsheetsServiceAccountResponses];

export type GetApiEeLogsQueryExecutionByYyyyMmData = {
    body?: never;
    path: {
        /**
         * Must be a string like 2020-04 or 2222-11.
         */
        'yyyy-mm': string;
    };
    query?: never;
    url: '/api/ee/logs/query_execution/{yyyy-mm}';
};

export type GetApiEeLogsQueryExecutionByYyyyMmErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeLogsQueryExecutionByYyyyMmResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeMetabotToolsAnswerSourcesData = {
    body?: {
        arguments?: MetabaseEnterpriseMetabotV3ToolsApiAnswerSourcesArguments;
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-tools/answer-sources';
};

export type PostApiEeMetabotToolsAnswerSourcesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotToolsAnswerSourcesResponses = {
    /**
     * map where {:conversation_id -> <value must be a valid UUID.>}
     */
    '2XX': {
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
};

export type PostApiEeMetabotToolsAnswerSourcesResponse = PostApiEeMetabotToolsAnswerSourcesResponses[keyof PostApiEeMetabotToolsAnswerSourcesResponses];

export type PostApiEeMetabotToolsCreateDashboardSubscriptionData = {
    body?: {
        arguments: MetabaseEnterpriseMetabotV3ToolsApiCreateDashboardSubscriptionArguments;
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-tools/create-dashboard-subscription';
};

export type PostApiEeMetabotToolsCreateDashboardSubscriptionErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotToolsCreateDashboardSubscriptionResponses = {
    /**
     * map where {:output -> <string>, :conversation_id -> <value must be a valid UUID.>}
     */
    '2XX': {
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
        output: string;
    };
};

export type PostApiEeMetabotToolsCreateDashboardSubscriptionResponse = PostApiEeMetabotToolsCreateDashboardSubscriptionResponses[keyof PostApiEeMetabotToolsCreateDashboardSubscriptionResponses];

export type PostApiEeMetabotToolsFieldValuesData = {
    body?: {
        arguments: MetabaseEnterpriseMetabotV3ToolsApiFieldValuesArguments;
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-tools/field-values';
};

export type PostApiEeMetabotToolsFieldValuesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotToolsFieldValuesResponses = {
    /**
     * map where {:conversation_id -> <value must be a valid UUID.>}
     */
    '2XX': {
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
};

export type PostApiEeMetabotToolsFieldValuesResponse = PostApiEeMetabotToolsFieldValuesResponses[keyof PostApiEeMetabotToolsFieldValuesResponses];

export type PostApiEeMetabotToolsFilterRecordsData = {
    body?: {
        arguments: MetabaseEnterpriseMetabotV3ToolsApiFilterRecordsArguments;
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-tools/filter-records';
};

export type PostApiEeMetabotToolsFilterRecordsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotToolsFilterRecordsResponses = {
    /**
     * map where {:conversation_id -> <value must be a valid UUID.>}
     */
    '2XX': {
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
};

export type PostApiEeMetabotToolsFilterRecordsResponse = PostApiEeMetabotToolsFilterRecordsResponses[keyof PostApiEeMetabotToolsFilterRecordsResponses];

export type PostApiEeMetabotToolsFindOutliersData = {
    body?: {
        arguments: MetabaseEnterpriseMetabotV3ToolsApiFindOutliersArguments;
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-tools/find-outliers';
};

export type PostApiEeMetabotToolsFindOutliersErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotToolsFindOutliersResponses = {
    /**
     * map where {:conversation_id -> <value must be a valid UUID.>}
     */
    '2XX': {
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
};

export type PostApiEeMetabotToolsFindOutliersResponse = PostApiEeMetabotToolsFindOutliersResponses[keyof PostApiEeMetabotToolsFindOutliersResponses];

export type PostApiEeMetabotToolsGenerateInsightsData = {
    body?: {
        arguments: MetabaseEnterpriseMetabotV3ToolsApiGenerateInsightsArguments;
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-tools/generate-insights';
};

export type PostApiEeMetabotToolsGenerateInsightsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotToolsGenerateInsightsResponses = {
    /**
     * map where {:output -> <string>, :reactions -> <sequence of map where {:type -> <must equal :metabot.reaction/redirect>, :url -> <string>}>, :conversation_id -> <value must be a valid UUID.>}
     */
    '2XX': {
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
        output: string;
        reactions: Array<MetabotReactionRedirect>;
    };
};

export type PostApiEeMetabotToolsGenerateInsightsResponse = PostApiEeMetabotToolsGenerateInsightsResponses[keyof PostApiEeMetabotToolsGenerateInsightsResponses];

export type PostApiEeMetabotToolsGetCurrentUserData = {
    body?: MetabaseEnterpriseMetabotV3ToolsApiToolRequest;
    path?: never;
    query?: never;
    url: '/api/ee/metabot-tools/get-current-user';
};

export type PostApiEeMetabotToolsGetCurrentUserErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotToolsGetCurrentUserResponses = {
    /**
     * map where {:conversation_id -> <value must be a valid UUID.>}
     */
    '2XX': {
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
};

export type PostApiEeMetabotToolsGetCurrentUserResponse = PostApiEeMetabotToolsGetCurrentUserResponses[keyof PostApiEeMetabotToolsGetCurrentUserResponses];

export type PostApiEeMetabotToolsGetDashboardDetailsData = {
    body?: {
        arguments: {
            dashboard_id: number;
        };
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-tools/get-dashboard-details';
};

export type PostApiEeMetabotToolsGetDashboardDetailsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotToolsGetDashboardDetailsResponses = {
    /**
     * map where {:conversation_id -> <value must be a valid UUID.>}
     */
    '2XX': {
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
};

export type PostApiEeMetabotToolsGetDashboardDetailsResponse = PostApiEeMetabotToolsGetDashboardDetailsResponses[keyof PostApiEeMetabotToolsGetDashboardDetailsResponses];

export type PostApiEeMetabotToolsGetDocumentDetailsData = {
    body?: {
        arguments: MetabaseEnterpriseMetabotV3ToolsApiGetDocumentDetailsArguments;
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-tools/get-document-details';
};

export type PostApiEeMetabotToolsGetDocumentDetailsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotToolsGetDocumentDetailsResponses = {
    /**
     * map where {:conversation_id -> <value must be a valid UUID.>}
     */
    '2XX': {
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
};

export type PostApiEeMetabotToolsGetDocumentDetailsResponse = PostApiEeMetabotToolsGetDocumentDetailsResponses[keyof PostApiEeMetabotToolsGetDocumentDetailsResponses];

export type PostApiEeMetabotToolsGetMetricDetailsData = {
    body?: {
        arguments: MetabaseEnterpriseMetabotV3ToolsApiGetMetricDetailsArguments;
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-tools/get-metric-details';
};

export type PostApiEeMetabotToolsGetMetricDetailsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotToolsGetMetricDetailsResponses = {
    /**
     * map where {:conversation_id -> <value must be a valid UUID.>}
     */
    '2XX': {
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
};

export type PostApiEeMetabotToolsGetMetricDetailsResponse = PostApiEeMetabotToolsGetMetricDetailsResponses[keyof PostApiEeMetabotToolsGetMetricDetailsResponses];

export type PostApiEeMetabotToolsGetQueryDetailsData = {
    body?: {
        arguments: {
            query: {
                [key: string]: unknown;
            };
        };
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-tools/get-query-details';
};

export type PostApiEeMetabotToolsGetQueryDetailsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotToolsGetQueryDetailsResponses = {
    /**
     * map where {:conversation_id -> <value must be a valid UUID.>}
     */
    '2XX': {
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
};

export type PostApiEeMetabotToolsGetQueryDetailsResponse = PostApiEeMetabotToolsGetQueryDetailsResponses[keyof PostApiEeMetabotToolsGetQueryDetailsResponses];

export type PostApiEeMetabotToolsGetReportDetailsData = {
    body?: {
        arguments: MetabaseEnterpriseMetabotV3ToolsApiGetReportDetailsArguments;
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-tools/get-report-details';
};

export type PostApiEeMetabotToolsGetReportDetailsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotToolsGetReportDetailsResponses = {
    /**
     * map where {:conversation_id -> <value must be a valid UUID.>}
     */
    '2XX': {
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
};

export type PostApiEeMetabotToolsGetReportDetailsResponse = PostApiEeMetabotToolsGetReportDetailsResponses[keyof PostApiEeMetabotToolsGetReportDetailsResponses];

export type PostApiEeMetabotToolsGetTableDetailsData = {
    body?: {
        arguments: MetabaseEnterpriseMetabotV3ToolsApiGetTableDetailsArguments;
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-tools/get-table-details';
};

export type PostApiEeMetabotToolsGetTableDetailsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotToolsGetTableDetailsResponses = {
    /**
     * map where {:conversation_id -> <value must be a valid UUID.>}
     */
    '2XX': {
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
};

export type PostApiEeMetabotToolsGetTableDetailsResponse = PostApiEeMetabotToolsGetTableDetailsResponses[keyof PostApiEeMetabotToolsGetTableDetailsResponses];

export type PostApiEeMetabotToolsGetTablesData = {
    body?: {
        arguments: MetabaseEnterpriseMetabotV3ToolsApiGetTablesArguments;
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-tools/get-tables';
};

export type PostApiEeMetabotToolsGetTablesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotToolsGetTablesResponses = {
    /**
     * map where {:conversation_id -> <value must be a valid UUID.>}
     */
    '2XX': {
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
};

export type PostApiEeMetabotToolsGetTablesResponse = PostApiEeMetabotToolsGetTablesResponses[keyof PostApiEeMetabotToolsGetTablesResponses];

export type PostApiEeMetabotToolsQueryDatasourceData = {
    body?: {
        arguments: MetabaseEnterpriseMetabotV3ToolsApiQueryDatasourceArguments;
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-tools/query-datasource';
};

export type PostApiEeMetabotToolsQueryDatasourceErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotToolsQueryDatasourceResponses = {
    /**
     * map where {:conversation_id -> <value must be a valid UUID.>}
     */
    '2XX': {
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
};

export type PostApiEeMetabotToolsQueryDatasourceResponse = PostApiEeMetabotToolsQueryDatasourceResponses[keyof PostApiEeMetabotToolsQueryDatasourceResponses];

export type PostApiEeMetabotToolsQueryMetricData = {
    body?: {
        arguments: MetabaseEnterpriseMetabotV3ToolsApiQueryMetricArguments;
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-tools/query-metric';
};

export type PostApiEeMetabotToolsQueryMetricErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotToolsQueryMetricResponses = {
    /**
     * map where {:conversation_id -> <value must be a valid UUID.>}
     */
    '2XX': {
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
};

export type PostApiEeMetabotToolsQueryMetricResponse = PostApiEeMetabotToolsQueryMetricResponses[keyof PostApiEeMetabotToolsQueryMetricResponses];

export type PostApiEeMetabotToolsQueryModelData = {
    body?: {
        arguments: MetabaseEnterpriseMetabotV3ToolsApiQueryModelArguments;
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-tools/query-model';
};

export type PostApiEeMetabotToolsQueryModelErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotToolsQueryModelResponses = {
    /**
     * map where {:conversation_id -> <value must be a valid UUID.>}
     */
    '2XX': {
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
};

export type PostApiEeMetabotToolsQueryModelResponse = PostApiEeMetabotToolsQueryModelResponses[keyof PostApiEeMetabotToolsQueryModelResponses];

export type PostApiEeMetabotToolsSearchData = {
    body?: {
        arguments?: MetabaseEnterpriseMetabotV3ToolsApiSearchArguments;
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-tools/search';
};

export type PostApiEeMetabotToolsSearchErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotToolsSearchResponses = {
    /**
     * map where {:conversation_id -> <value must be a valid UUID.>}
     */
    '2XX': {
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
    };
};

export type PostApiEeMetabotToolsSearchResponse = PostApiEeMetabotToolsSearchResponses[keyof PostApiEeMetabotToolsSearchResponses];

export type PostApiEeMetabotV3AgentStreamingData = {
    body?: {
        context: MetabaseEnterpriseMetabotV3ContextContext;
        /**
         * value must be a valid UUID.
         */
        conversation_id: string;
        history?: MetabaseEnterpriseMetabotV3ClientSchemaMessages;
        message: string;
        metabot_id?: string;
        profile_id?: string;
        state: {
            [key: string]: unknown;
        };
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-v3/agent-streaming';
};

export type PostApiEeMetabotV3AgentStreamingErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotV3AgentStreamingResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeMetabotV3DocumentGenerateContentData = {
    body?: {
        instructions: string;
        /**
         * Value must be a map.
         */
        references?: {
            [key: string]: unknown;
        };
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-v3/document/generate-content';
};

export type PostApiEeMetabotV3DocumentGenerateContentErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotV3DocumentGenerateContentResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeMetabotV3FeedbackData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: never;
    url: '/api/ee/metabot-v3/feedback';
};

export type PostApiEeMetabotV3FeedbackErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotV3FeedbackResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeMetabotV3MetabotData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ee/metabot-v3/metabot/';
};

export type GetApiEeMetabotV3MetabotErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeMetabotV3MetabotResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeMetabotV3MetabotByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/ee/metabot-v3/metabot/{id}';
};

export type GetApiEeMetabotV3MetabotByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeMetabotV3MetabotByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiEeMetabotV3MetabotByIdData = {
    body?: {
        collection_id?: number;
        use_verified_content?: boolean;
    };
    path: {
        id: number;
    };
    query?: never;
    url: '/api/ee/metabot-v3/metabot/{id}';
};

export type PutApiEeMetabotV3MetabotByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiEeMetabotV3MetabotByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiEeMetabotV3MetabotByIdPromptSuggestionsData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/ee/metabot-v3/metabot/{id}/prompt-suggestions';
};

export type DeleteApiEeMetabotV3MetabotByIdPromptSuggestionsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiEeMetabotV3MetabotByIdPromptSuggestionsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeMetabotV3MetabotByIdPromptSuggestionsData = {
    body?: never;
    path: {
        id: number;
    };
    query?: {
        sample?: boolean;
        model?: 'metric' | 'model';
        model_id?: number;
    };
    url: '/api/ee/metabot-v3/metabot/{id}/prompt-suggestions';
};

export type GetApiEeMetabotV3MetabotByIdPromptSuggestionsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeMetabotV3MetabotByIdPromptSuggestionsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeMetabotV3MetabotByIdPromptSuggestionsRegenerateData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/ee/metabot-v3/metabot/{id}/prompt-suggestions/regenerate';
};

export type PostApiEeMetabotV3MetabotByIdPromptSuggestionsRegenerateErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeMetabotV3MetabotByIdPromptSuggestionsRegenerateResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiEeMetabotV3MetabotByIdPromptSuggestionsByPromptIdData = {
    body?: never;
    path: {
        id: number;
        'prompt-id': number;
    };
    query?: never;
    url: '/api/ee/metabot-v3/metabot/{id}/prompt-suggestions/{prompt-id}';
};

export type DeleteApiEeMetabotV3MetabotByIdPromptSuggestionsByPromptIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiEeMetabotV3MetabotByIdPromptSuggestionsByPromptIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEePermissionDebugData = {
    body?: never;
    path?: never;
    query: {
        user_id: number;
        model_id: string;
        action_type: 'card/read' | 'card/query' | 'card/download-data';
    };
    url: '/api/ee/permission_debug/';
};

export type GetApiEePermissionDebugErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEePermissionDebugResponses = {
    /**
     * map where {:model-type -> <enum of card, invalid>, :model-id -> <string>, :decision -> <enum of allow, denied, limited>, :segment -> <set of enum of sandboxed, impersonated, routed>, :message -> <sequence of string>, :data -> <map>, :suggestions -> <map from <integer> to <string>>}
     */
    '2XX': MetabaseEnterprisePermissionDebugImplPermDebugInfo;
};

export type GetApiEePermissionDebugResponse = GetApiEePermissionDebugResponses[keyof GetApiEePermissionDebugResponses];

export type GetApiEeScimApiKeyData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ee/scim/api_key';
};

export type GetApiEeScimApiKeyErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeScimApiKeyResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeScimApiKeyData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ee/scim/api_key';
};

export type PostApiEeScimApiKeyErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeScimApiKeyResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeScimV2GroupsData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * value must be an integer greater than zero.
         */
        startIndex?: number;
        /**
         * value must be an integer greater than zero.
         */
        count?: number;
        filter?: string;
    };
    url: '/api/ee/scim/v2/Groups';
};

export type GetApiEeScimV2GroupsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeScimV2GroupsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeScimV2GroupsData = {
    body?: {
        displayName: string;
        id?: string;
        members?: Array<{
            $ref?: string;
            value: string;
        }>;
        schemas: Array<string>;
    };
    path?: never;
    query?: never;
    url: '/api/ee/scim/v2/Groups';
};

export type PostApiEeScimV2GroupsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeScimV2GroupsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiEeScimV2GroupsByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/ee/scim/v2/Groups/{id}';
};

export type DeleteApiEeScimV2GroupsByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiEeScimV2GroupsByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeScimV2GroupsByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/ee/scim/v2/Groups/{id}';
};

export type GetApiEeScimV2GroupsByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeScimV2GroupsByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiEeScimV2GroupsByIdData = {
    body?: {
        displayName: string;
        id?: string;
        members?: Array<{
            $ref?: string;
            value: string;
        }>;
        schemas: Array<string>;
    };
    path?: never;
    query?: never;
    url: '/api/ee/scim/v2/Groups/{id}';
};

export type PutApiEeScimV2GroupsByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiEeScimV2GroupsByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeScimV2UsersData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * value must be an integer greater than zero.
         */
        startIndex?: number;
        /**
         * value must be an integer greater than zero.
         */
        count?: number;
        filter?: string;
    };
    url: '/api/ee/scim/v2/Users';
};

export type GetApiEeScimV2UsersErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeScimV2UsersResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeScimV2UsersData = {
    body?: {
        active?: boolean;
        emails: Array<{
            primary?: boolean;
            type?: string;
            value: string;
        }>;
        groups?: Array<{
            $ref?: string;
            display: string;
            value: string;
        }>;
        id?: string;
        locale?: string;
        name: {
            familyName: string;
            givenName: string;
        };
        schemas: Array<string>;
        userName: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/scim/v2/Users';
};

export type PostApiEeScimV2UsersErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeScimV2UsersResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeScimV2UsersByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/ee/scim/v2/Users/{id}';
};

export type GetApiEeScimV2UsersByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeScimV2UsersByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PatchApiEeScimV2UsersByIdData = {
    body?: {
        Operations: Array<{
            op: string;
            value: {
                [key: string]: string | boolean;
            } | string | boolean;
        }>;
        schemas: Array<string>;
    };
    path: {
        id: string;
    };
    query?: never;
    url: '/api/ee/scim/v2/Users/{id}';
};

export type PatchApiEeScimV2UsersByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PatchApiEeScimV2UsersByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiEeScimV2UsersByIdData = {
    body?: {
        active?: boolean;
        emails: Array<{
            primary?: boolean;
            type?: string;
            value: string;
        }>;
        groups?: Array<{
            $ref?: string;
            display: string;
            value: string;
        }>;
        id?: string;
        locale?: string;
        name: {
            familyName: string;
            givenName: string;
        };
        schemas: Array<string>;
        userName: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/scim/v2/Users/{id}';
};

export type PutApiEeScimV2UsersByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiEeScimV2UsersByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeSemanticSearchStatusData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ee/semantic-search/status';
};

export type GetApiEeSemanticSearchStatusErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeSemanticSearchStatusResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeSerializationExportData = {
    body?: never;
    path?: never;
    query: {
        /**
         * name of directory and archive file (default: `<instance-name>-<YYYY-MM-dd_HH-mm>`)
         */
        dirname?: string;
        /**
         * collections' db ids/entity-ids to serialize
         */
        collection?: Array<number | string | string>;
        all_collections: boolean;
        settings: boolean;
        data_model: boolean;
        field_values: boolean;
        database_secrets: boolean;
        continue_on_error: boolean;
        full_stacktrace: boolean;
    };
    url: '/api/ee/serialization/export';
};

export type PostApiEeSerializationExportErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeSerializationExportResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeSerializationImportData = {
    body?: {
        /**
         * .tgz with serialization data
         */
        file: {
            'content-type': string;
            filename: string;
            size: number;
            tempfile: unknown;
        };
    };
    path?: never;
    query: {
        continue_on_error: boolean;
        full_stacktrace: boolean;
    };
    url: '/api/ee/serialization/import';
};

export type PostApiEeSerializationImportErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeSerializationImportResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeStaleByIdData = {
    body?: never;
    path: {
        id: number | 'root';
    };
    query: {
        before_date?: string;
        is_recursive: boolean;
        sort_column: 'name' | 'last_used_at';
        sort_direction: 'asc' | 'desc';
    };
    url: '/api/ee/stale/{id}';
};

export type GetApiEeStaleByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeStaleByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeTransformJobData = {
    body?: never;
    path?: never;
    query?: {
        last_run_start_time?: string;
        next_run_start_time?: string;
        last_run_statuses?: Array<'started' | 'succeeded' | 'failed' | 'timeout'>;
        tag_ids?: Array<number>;
    };
    url: '/api/ee/transform-job/';
};

export type GetApiEeTransformJobErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeTransformJobResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeTransformJobData = {
    body?: {
        description?: string;
        name: string;
        schedule: string;
        tag_ids?: Array<number>;
        ui_display_type: 'cron/raw' | 'cron/builder';
    };
    path?: never;
    query?: never;
    url: '/api/ee/transform-job/';
};

export type PostApiEeTransformJobErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeTransformJobResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiEeTransformJobByJobIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'job-id': number;
    };
    query?: never;
    url: '/api/ee/transform-job/{job-id}';
};

export type DeleteApiEeTransformJobByJobIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiEeTransformJobByJobIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeTransformJobByJobIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'job-id': number;
    };
    query?: never;
    url: '/api/ee/transform-job/{job-id}';
};

export type GetApiEeTransformJobByJobIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeTransformJobByJobIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiEeTransformJobByJobIdData = {
    body?: {
        description?: string;
        name?: string;
        schedule?: string;
        tag_ids?: Array<number>;
        ui_display_type?: 'cron/raw' | 'cron/builder';
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'job-id': number;
    };
    query?: never;
    url: '/api/ee/transform-job/{job-id}';
};

export type PutApiEeTransformJobByJobIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiEeTransformJobByJobIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeTransformJobByJobIdRunData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'job-id': number;
    };
    query?: never;
    url: '/api/ee/transform-job/{job-id}/run';
};

export type PostApiEeTransformJobByJobIdRunErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeTransformJobByJobIdRunResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeTransformJobByJobIdTransformsData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'job-id': number;
    };
    query?: never;
    url: '/api/ee/transform-job/{job-id}/transforms';
};

export type GetApiEeTransformJobByJobIdTransformsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeTransformJobByJobIdTransformsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeTransformTagData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ee/transform-tag/';
};

export type GetApiEeTransformTagErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeTransformTagResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeTransformTagData = {
    body?: {
        name: string;
    };
    path?: never;
    query?: never;
    url: '/api/ee/transform-tag/';
};

export type PostApiEeTransformTagErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeTransformTagResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiEeTransformTagByTagIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'tag-id': number;
    };
    query?: never;
    url: '/api/ee/transform-tag/{tag-id}';
};

export type DeleteApiEeTransformTagByTagIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiEeTransformTagByTagIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiEeTransformTagByTagIdData = {
    body?: {
        name: string;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'tag-id': number;
    };
    query?: never;
    url: '/api/ee/transform-tag/{tag-id}';
};

export type PutApiEeTransformTagByTagIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiEeTransformTagByTagIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeTransformData = {
    body?: never;
    path?: never;
    query?: {
        last_run_start_time?: string;
        last_run_statuses?: Array<'started' | 'succeeded' | 'failed' | 'timeout'>;
        tag_ids?: Array<number>;
    };
    url: '/api/ee/transform/';
};

export type GetApiEeTransformErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeTransformResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeTransformData = {
    body?: {
        description?: string;
        name: string;
        run_trigger?: MetabaseEnterpriseTransformsApiRunTrigger;
        source: MetabaseEnterpriseTransformsApiTransformSource;
        tag_ids?: Array<number>;
        target: MetabaseEnterpriseTransformsApiTransformTarget;
    };
    path?: never;
    query?: never;
    url: '/api/ee/transform/';
};

export type PostApiEeTransformErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeTransformResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeTransformRunData = {
    body?: never;
    path?: never;
    query?: {
        sort_column?: 'started_at' | 'ended_at';
        sort_direction?: 'asc' | 'desc';
        transform_ids?: Array<number>;
        statuses?: Array<'started' | 'succeeded' | 'failed' | 'timeout'>;
        transform_tag_ids?: Array<number>;
        start_time?: string;
        end_time?: string;
        run_methods?: Array<'manual' | 'cron'>;
    };
    url: '/api/ee/transform/run';
};

export type GetApiEeTransformRunErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeTransformRunResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiEeTransformByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/ee/transform/{id}';
};

export type DeleteApiEeTransformByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiEeTransformByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeTransformByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/ee/transform/{id}';
};

export type GetApiEeTransformByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeTransformByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiEeTransformByIdData = {
    body?: {
        description?: string;
        name?: string;
        run_trigger?: MetabaseEnterpriseTransformsApiRunTrigger;
        source?: MetabaseEnterpriseTransformsApiTransformSource;
        tag_ids?: Array<number>;
        target?: MetabaseEnterpriseTransformsApiTransformTarget;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/ee/transform/{id}';
};

export type PutApiEeTransformByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiEeTransformByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeTransformByIdCancelData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/ee/transform/{id}/cancel';
};

export type PostApiEeTransformByIdCancelErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeTransformByIdCancelResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeTransformByIdDependenciesData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/ee/transform/{id}/dependencies';
};

export type GetApiEeTransformByIdDependenciesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeTransformByIdDependenciesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeTransformByIdRunData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/ee/transform/{id}/run';
};

export type PostApiEeTransformByIdRunErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeTransformByIdRunResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiEeTransformByIdTableData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/ee/transform/{id}/table';
};

export type DeleteApiEeTransformByIdTableErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiEeTransformByIdTableResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEeTransformsPythonLibraryByPathData = {
    body?: never;
    path: {
        path: string;
    };
    query?: never;
    url: '/api/ee/transforms-python/library/{path}';
};

export type GetApiEeTransformsPythonLibraryByPathErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeTransformsPythonLibraryByPathResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiEeTransformsPythonLibraryByPathData = {
    body?: {
        source: string;
    };
    path: {
        path: string;
    };
    query?: never;
    url: '/api/ee/transforms-python/library/{path}';
};

export type PutApiEeTransformsPythonLibraryByPathErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiEeTransformsPythonLibraryByPathResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEeTransformsPythonTestRunData = {
    body?: {
        code: string;
        output_row_limit?: number & number & number;
        per_input_row_limit?: number & number & number;
        source_tables: {
            [key: string]: number;
        };
    };
    path?: never;
    query?: never;
    url: '/api/ee/transforms-python/test-run';
};

export type PostApiEeTransformsPythonTestRunErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEeTransformsPythonTestRunResponses = {
    /**
     * map where {:logs -> <string>, :error (optional) -> <map where {:message -> <function, or function>}>, :output (optional) -> <map where {:cols -> <sequence of map where {:name -> <string>}>, :rows -> <sequence of anything>}>}
     */
    '2XX': {
        error?: {
            message: unknown;
        };
        logs: string;
        output?: {
            cols: Array<{
                name: string;
            }>;
            rows: Array<unknown>;
        };
    };
};

export type PostApiEeTransformsPythonTestRunResponse = PostApiEeTransformsPythonTestRunResponses[keyof PostApiEeTransformsPythonTestRunResponses];

export type GetApiEeUploadManagementTablesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ee/upload-management/tables';
};

export type GetApiEeUploadManagementTablesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEeUploadManagementTablesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiEeUploadManagementTablesByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: {
        'archive-cards'?: boolean;
    };
    url: '/api/ee/upload-management/tables/{id}';
};

export type DeleteApiEeUploadManagementTablesByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiEeUploadManagementTablesByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEidTranslationTranslateData = {
    body?: {
        entity_ids: {
            [key: string]: unknown;
        };
    };
    path?: never;
    query?: never;
    url: '/api/eid-translation/translate';
};

export type PostApiEidTranslationTranslateErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEidTranslationTranslateResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiEmailData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/email/';
};

export type DeleteApiEmailErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiEmailResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiEmailData = {
    body?: {
        'email-smtp-host'?: string | null;
        'email-smtp-password'?: string | null;
        'email-smtp-port'?: number | null;
        'email-smtp-security'?: string | null;
        'email-smtp-username'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/email/';
};

export type PutApiEmailErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiEmailResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiEmailTestData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/email/test';
};

export type PostApiEmailTestErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiEmailTestResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEmbedCardByTokenData = {
    body?: never;
    path: {
        token: string;
    };
    query?: never;
    url: '/api/embed/card/{token}';
};

export type GetApiEmbedCardByTokenErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEmbedCardByTokenResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEmbedCardByTokenParamsByParamKeyRemappingData = {
    body?: never;
    path: {
        token: string;
        'param-key': string;
    };
    query: {
        value: string;
    };
    url: '/api/embed/card/{token}/params/{param-key}/remapping';
};

export type GetApiEmbedCardByTokenParamsByParamKeyRemappingErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEmbedCardByTokenParamsByParamKeyRemappingResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEmbedCardByTokenParamsByParamKeySearchByPrefixData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/embed/card/{token}/params/{param-key}/search/{prefix}';
};

export type GetApiEmbedCardByTokenParamsByParamKeySearchByPrefixErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEmbedCardByTokenParamsByParamKeySearchByPrefixResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEmbedCardByTokenParamsByParamKeyValuesData = {
    body?: never;
    path: {
        token: string;
        'param-key': string;
    };
    query?: never;
    url: '/api/embed/card/{token}/params/{param-key}/values';
};

export type GetApiEmbedCardByTokenParamsByParamKeyValuesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEmbedCardByTokenParamsByParamKeyValuesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEmbedCardByTokenQueryData = {
    body?: never;
    path: {
        token: string;
    };
    query?: never;
    url: '/api/embed/card/{token}/query';
};

export type GetApiEmbedCardByTokenQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEmbedCardByTokenQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEmbedCardByTokenQueryByExportFormatData = {
    body?: never;
    path: {
        token: string;
        'export-format': MetabaseQueryProcessorSchemaExportFormat;
    };
    query: {
        format_rows: boolean;
        pivot_results: boolean;
    };
    url: '/api/embed/card/{token}/query/{export-format}';
};

export type GetApiEmbedCardByTokenQueryByExportFormatErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEmbedCardByTokenQueryByExportFormatResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEmbedDashboardByTokenData = {
    body?: never;
    path: {
        token: string;
    };
    query?: never;
    url: '/api/embed/dashboard/{token}';
};

export type GetApiEmbedDashboardByTokenErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEmbedDashboardByTokenResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEmbedDashboardByTokenDashcardByDashcardIdCardByCardIdData = {
    body?: never;
    path: {
        token: string;
        /**
         * value must be an integer greater than zero.
         */
        'dashcard-id': number;
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
    };
    query?: never;
    url: '/api/embed/dashboard/{token}/dashcard/{dashcard-id}/card/{card-id}';
};

export type GetApiEmbedDashboardByTokenDashcardByDashcardIdCardByCardIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEmbedDashboardByTokenDashcardByDashcardIdCardByCardIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEmbedDashboardByTokenDashcardByDashcardIdCardByCardIdByExportFormatData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'dashcard-id': number;
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
        'export-format': MetabaseQueryProcessorSchemaExportFormat;
    };
    query: {
        format_rows: boolean;
        pivot_results: boolean;
    };
    url: '/api/embed/dashboard/{token}/dashcard/{dashcard-id}/card/{card-id}/{export-format}';
};

export type GetApiEmbedDashboardByTokenDashcardByDashcardIdCardByCardIdByExportFormatErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEmbedDashboardByTokenDashcardByDashcardIdCardByCardIdByExportFormatResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEmbedDashboardByTokenParamsByParamKeyRemappingData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/embed/dashboard/{token}/params/{param-key}/remapping';
};

export type GetApiEmbedDashboardByTokenParamsByParamKeyRemappingErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEmbedDashboardByTokenParamsByParamKeyRemappingResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEmbedDashboardByTokenParamsByParamKeySearchByPrefixData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/embed/dashboard/{token}/params/{param-key}/search/{prefix}';
};

export type GetApiEmbedDashboardByTokenParamsByParamKeySearchByPrefixErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEmbedDashboardByTokenParamsByParamKeySearchByPrefixResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEmbedDashboardByTokenParamsByParamKeyValuesData = {
    body?: never;
    path: {
        token: string;
        'param-key': string;
    };
    query?: never;
    url: '/api/embed/dashboard/{token}/params/{param-key}/values';
};

export type GetApiEmbedDashboardByTokenParamsByParamKeyValuesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEmbedDashboardByTokenParamsByParamKeyValuesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEmbedPivotCardByTokenQueryData = {
    body?: never;
    path: {
        token: string;
    };
    query?: never;
    url: '/api/embed/pivot/card/{token}/query';
};

export type GetApiEmbedPivotCardByTokenQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEmbedPivotCardByTokenQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEmbedPivotDashboardByTokenDashcardByDashcardIdCardByCardIdData = {
    body?: never;
    path: {
        token: string;
        /**
         * value must be an integer greater than zero.
         */
        'dashcard-id': number;
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
    };
    query?: never;
    url: '/api/embed/pivot/dashboard/{token}/dashcard/{dashcard-id}/card/{card-id}';
};

export type GetApiEmbedPivotDashboardByTokenDashcardByDashcardIdCardByCardIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEmbedPivotDashboardByTokenDashcardByDashcardIdCardByCardIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEmbedTilesCardByTokenByZoomByXByYData = {
    body?: never;
    path: {
        token: string;
        /**
         * value must be an integer.
         */
        zoom: number;
        /**
         * value must be an integer.
         */
        x: number;
        /**
         * value must be an integer.
         */
        y: number;
    };
    query: {
        /**
         * value must be a valid JSON string.
         */
        parameters?: string;
        latField: string;
        lonField: string;
    };
    url: '/api/embed/tiles/card/{token}/{zoom}/{x}/{y}';
};

export type GetApiEmbedTilesCardByTokenByZoomByXByYErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEmbedTilesCardByTokenByZoomByXByYResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiEmbedTilesDashboardByTokenDashcardByDashcardIdCardByCardIdByZoomByXByYData = {
    body?: never;
    path: {
        token: string;
        /**
         * value must be an integer greater than zero.
         */
        'dashcard-id': number;
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
        /**
         * value must be an integer.
         */
        zoom: number;
        /**
         * value must be an integer.
         */
        x: number;
        /**
         * value must be an integer.
         */
        y: number;
    };
    query: {
        /**
         * value must be a valid JSON string.
         */
        parameters?: string;
        latField: string;
        lonField: string;
    };
    url: '/api/embed/tiles/dashboard/{token}/dashcard/{dashcard-id}/card/{card-id}/{zoom}/{x}/{y}';
};

export type GetApiEmbedTilesDashboardByTokenDashcardByDashcardIdCardByCardIdByZoomByXByYErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiEmbedTilesDashboardByTokenDashcardByDashcardIdCardByCardIdByZoomByXByYResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiFieldByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query: {
        include_editable_data_model: boolean;
    };
    url: '/api/field/{id}';
};

export type GetApiFieldByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiFieldByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiFieldByIdData = {
    body?: {
        points_of_interest?: string;
        /**
         * Value must be a map.
         */
        settings?: {
            [key: string]: unknown;
        };
        visibility_type?: 'retired' | 'sensitive' | 'normal' | 'hidden' | 'details-only';
        /**
         * value must be a valid coercion strategy (keyword or string).
         */
        coercion_strategy?: unknown;
        json_unfolding?: boolean;
        /**
         * value must be a valid field semantic or relation type (keyword or string).
         */
        semantic_type?: unknown;
        has_field_values?: MetabaseLibSchemaMetadataColumnHasFieldValues;
        display_name?: string;
        nfc_path?: Array<string>;
        caveats?: string;
        description?: string;
        /**
         * value must be an integer greater than zero.
         */
        fk_target_field_id?: number;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/field/{id}';
};

export type PutApiFieldByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiFieldByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiFieldByIdDimensionData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/field/{id}/dimension';
};

export type DeleteApiFieldByIdDimensionErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiFieldByIdDimensionResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiFieldByIdDimensionData = {
    body?: {
        /**
         * value must be an integer greater than zero.
         */
        human_readable_field_id?: number;
        name: string;
        type: 'internal' | 'external';
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/field/{id}/dimension';
};

export type PostApiFieldByIdDimensionErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiFieldByIdDimensionResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiFieldByIdDiscardValuesData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/field/{id}/discard_values';
};

export type PostApiFieldByIdDiscardValuesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiFieldByIdDiscardValuesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiFieldByIdRelatedData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/field/{id}/related';
};

export type GetApiFieldByIdRelatedErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiFieldByIdRelatedResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiFieldByIdRemappingByRemappedIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
        /**
         * value must be an integer greater than zero.
         */
        'remapped-id': number;
    };
    query: {
        value: string;
    };
    url: '/api/field/{id}/remapping/{remapped-id}';
};

export type GetApiFieldByIdRemappingByRemappedIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiFieldByIdRemappingByRemappedIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiFieldByIdRescanValuesData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/field/{id}/rescan_values';
};

export type PostApiFieldByIdRescanValuesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiFieldByIdRescanValuesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiFieldByIdSearchBySearchIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
        /**
         * value must be an integer greater than zero.
         */
        'search-id': number;
    };
    query?: {
        value?: string;
    };
    url: '/api/field/{id}/search/{search-id}';
};

export type GetApiFieldByIdSearchBySearchIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiFieldByIdSearchBySearchIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiFieldByIdSummaryData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/field/{id}/summary';
};

export type GetApiFieldByIdSummaryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiFieldByIdSummaryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiFieldByIdValuesData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/field/{id}/values';
};

export type GetApiFieldByIdValuesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiFieldByIdValuesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiFieldByIdValuesData = {
    body?: {
        values: Array<[
            unknown
        ] | [
            unknown,
            string
        ]>;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/field/{id}/values';
};

export type PostApiFieldByIdValuesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiFieldByIdValuesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiGeojsonData = {
    body?: never;
    path?: never;
    query: {
        url: string;
    };
    url: '/api/geojson/';
};

export type GetApiGeojsonErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiGeojsonResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiGeojsonByKeyData = {
    body?: never;
    path: {
        key: string;
    };
    query?: never;
    url: '/api/geojson/{key}';
};

export type GetApiGeojsonByKeyErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiGeojsonByKeyResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiGlossaryData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/glossary/';
};

export type GetApiGlossaryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiGlossaryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiGlossaryData = {
    body?: {
        definition: string;
        term: string;
    };
    path?: never;
    query?: never;
    url: '/api/glossary/';
};

export type PostApiGlossaryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiGlossaryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiGlossaryByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/glossary/{id}';
};

export type DeleteApiGlossaryByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiGlossaryByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiGlossaryByIdData = {
    body?: {
        definition: string;
        term: string;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/glossary/{id}';
};

export type PutApiGlossaryByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiGlossaryByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiGoogleSettingsData = {
    body?: {
        'google-auth-auto-create-accounts-domain'?: string;
        'google-auth-client-id'?: string;
        'google-auth-enabled'?: boolean;
    };
    path?: never;
    query?: never;
    url: '/api/google/settings';
};

export type PutApiGoogleSettingsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiGoogleSettingsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiLdapSettingsData = {
    body?: {
        'ldap-enabled'?: boolean;
        'ldap-host'?: string;
        'ldap-password'?: string;
        'ldap-port'?: number;
    };
    path?: never;
    query?: never;
    url: '/api/ldap/settings';
};

export type PutApiLdapSettingsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiLdapSettingsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiLoggerAdjustmentData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/logger/adjustment';
};

export type DeleteApiLoggerAdjustmentErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiLoggerAdjustmentResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiLoggerAdjustmentData = {
    body?: {
        duration: number;
        duration_unit: MetabaseLoggerApiTimeUnit;
        log_levels: unknown;
    };
    path?: never;
    query?: never;
    url: '/api/logger/adjustment';
};

export type PostApiLoggerAdjustmentErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiLoggerAdjustmentResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiLoggerLogsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/logger/logs';
};

export type GetApiLoggerLogsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiLoggerLogsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiLoggerPresetsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/logger/presets';
};

export type GetApiLoggerPresetsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiLoggerPresetsResponses = {
    /**
     * sequence of map where {:id -> <keyword>, :display_name -> <string>, :loggers -> <sequence of map where {:name -> <string>, :level -> <enum of :off, :fatal, :error, :warn, :info, :debug, :trace>}>}
     */
    '2XX': Array<{
        display_name: string;
        id: string;
        loggers: Array<{
            level: MetabaseLoggerApiLogLevel;
            name: string;
        }>;
    }>;
};

export type GetApiLoggerPresetsResponse = GetApiLoggerPresetsResponses[keyof GetApiLoggerPresetsResponses];

export type GetApiLoginHistoryCurrentData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/login-history/current';
};

export type GetApiLoginHistoryCurrentErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiLoginHistoryCurrentResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiModelIndexData = {
    body?: never;
    path?: never;
    query: {
        /**
         * value must be an integer greater than zero.
         */
        model_id: number;
    };
    url: '/api/model-index/';
};

export type GetApiModelIndexErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiModelIndexResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiModelIndexData = {
    body?: {
        /**
         * value must be an integer greater than zero.
         */
        model_id: number;
        pk_ref: unknown;
        value_ref: unknown;
    };
    path?: never;
    query?: never;
    url: '/api/model-index/';
};

export type PostApiModelIndexErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiModelIndexResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiModelIndexByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/model-index/{id}';
};

export type DeleteApiModelIndexByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiModelIndexByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiModelIndexByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/model-index/{id}';
};

export type GetApiModelIndexByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiModelIndexByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiModerationReviewData = {
    body?: {
        /**
         * value must be an integer greater than zero.
         */
        moderated_item_id: number;
        moderated_item_type: 'card' | 'dashboard';
        status?: 'verified';
        text?: string;
    };
    path?: never;
    query?: never;
    url: '/api/moderation-review/';
};

export type PostApiModerationReviewErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiModerationReviewResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiMtGtapData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * value must be an integer greater than zero.
         */
        group_id?: number;
        /**
         * value must be an integer greater than zero.
         */
        table_id?: number;
    };
    url: '/api/mt/gtap/';
};

export type GetApiMtGtapErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiMtGtapResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiMtGtapData = {
    body?: {
        attribute_remappings?: unknown;
        /**
         * value must be an integer greater than zero.
         */
        card_id?: number;
        /**
         * value must be an integer greater than zero.
         */
        group_id: number;
        /**
         * value must be an integer greater than zero.
         */
        table_id: number;
    };
    path?: never;
    query?: never;
    url: '/api/mt/gtap/';
};

export type PostApiMtGtapErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiMtGtapResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiMtGtapValidateData = {
    body?: {
        /**
         * value must be an integer greater than zero.
         */
        card_id?: number;
        /**
         * value must be an integer greater than zero.
         */
        table_id: number;
    };
    path?: never;
    query?: never;
    url: '/api/mt/gtap/validate';
};

export type PostApiMtGtapValidateErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiMtGtapValidateResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiMtGtapByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/mt/gtap/{id}';
};

export type DeleteApiMtGtapByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiMtGtapByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiMtGtapByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/mt/gtap/{id}';
};

export type GetApiMtGtapByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiMtGtapByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiMtGtapByIdData = {
    body?: {
        attribute_remappings?: unknown;
        /**
         * value must be an integer greater than zero.
         */
        card_id?: number;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/mt/gtap/{id}';
};

export type PutApiMtGtapByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiMtGtapByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiMtUserAttributesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/mt/user/attributes';
};

export type GetApiMtUserAttributesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiMtUserAttributesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiMtUserByIdAttributesData = {
    body?: {
        /**
         * value must be a valid user attributes map (name -> value)
         */
        login_attributes?: {
            [key: string]: unknown;
        };
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/mt/user/{id}/attributes';
};

export type PutApiMtUserByIdAttributesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiMtUserByIdAttributesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiNativeQuerySnippetData = {
    body?: never;
    path?: never;
    query?: {
        archived?: boolean;
    };
    url: '/api/native-query-snippet/';
};

export type GetApiNativeQuerySnippetErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiNativeQuerySnippetResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiNativeQuerySnippetData = {
    body?: {
        /**
         * value must be an integer greater than zero.
         */
        collection_id?: number;
        content: string;
        description?: string;
        /**
         * snippet names cannot include '}' or start with spaces
         */
        name: unknown;
    };
    path?: never;
    query?: never;
    url: '/api/native-query-snippet/';
};

export type PostApiNativeQuerySnippetErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiNativeQuerySnippetResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiNativeQuerySnippetByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/native-query-snippet/{id}';
};

export type GetApiNativeQuerySnippetByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiNativeQuerySnippetByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiNativeQuerySnippetByIdData = {
    body?: {
        archived?: boolean;
        /**
         * value must be an integer greater than zero.
         */
        collection_id?: number;
        content?: string;
        description?: string;
        /**
         * snippet names cannot include '}' or start with spaces
         */
        name?: unknown;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/native-query-snippet/{id}';
};

export type PutApiNativeQuerySnippetByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiNativeQuerySnippetByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiNotificationData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * value must be an integer greater than zero.
         */
        creator_id?: number;
        /**
         * value must be an integer greater than zero.
         */
        recipient_id?: number;
        /**
         * value must be an integer greater than zero.
         */
        creator_or_recipient_id?: number;
        /**
         * value must be an integer greater than zero.
         */
        card_id?: number;
        include_inactive?: boolean;
        payload_type?: 'notification/dashboard' | 'notification/system-event' | 'notification/testing' | 'notification/card';
    };
    url: '/api/notification/';
};

export type GetApiNotificationErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiNotificationResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiNotificationData = {
    body?: MetabaseNotificationModelsFullyHydratedNotification;
    path?: never;
    query?: never;
    url: '/api/notification/';
};

export type PostApiNotificationErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiNotificationResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiNotificationSendData = {
    body?: MetabaseNotificationModelsFullyHydratedNotification;
    path?: never;
    query?: never;
    url: '/api/notification/send';
};

export type PostApiNotificationSendErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiNotificationSendResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiNotificationUnsubscribeData = {
    body?: {
        email: string;
        hash: string;
        /**
         * value must be an integer greater than zero.
         */
        'notification-handler-id': number;
    };
    path?: never;
    query?: never;
    url: '/api/notification/unsubscribe/';
};

export type PostApiNotificationUnsubscribeErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiNotificationUnsubscribeResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiNotificationUnsubscribeUndoData = {
    body?: {
        email: string;
        hash: string;
        /**
         * value must be an integer greater than zero.
         */
        'notification-handler-id': number;
    };
    path?: never;
    query?: never;
    url: '/api/notification/unsubscribe/undo';
};

export type PostApiNotificationUnsubscribeUndoErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiNotificationUnsubscribeUndoResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiNotificationByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/notification/{id}';
};

export type GetApiNotificationByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiNotificationByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiNotificationByIdData = {
    body?: MetabaseNotificationModelsFullyHydratedNotification;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/notification/{id}';
};

export type PutApiNotificationByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiNotificationByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiNotificationByIdSendData = {
    body?: {
        handler_ids?: Array<number>;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/notification/{id}/send';
};

export type PostApiNotificationByIdSendErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiNotificationByIdSendResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiNotificationByIdUnsubscribeData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/notification/{id}/unsubscribe';
};

export type PostApiNotificationByIdUnsubscribeErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiNotificationByIdUnsubscribeResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiNotifyDbAttachedDatawarehouseData = {
    body?: {
        schema_name?: string;
        'synchronous?'?: boolean;
        table_name?: string;
    };
    path?: never;
    query?: never;
    url: '/api/notify/db/attached_datawarehouse';
};

export type PostApiNotifyDbAttachedDatawarehouseErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiNotifyDbAttachedDatawarehouseResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiNotifyDbByIdData = {
    body?: {
        scan?: 'full' | 'schema';
        /**
         * value must be an integer greater than zero.
         */
        table_id?: number;
        table_name?: string;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/notify/db/{id}';
};

export type PostApiNotifyDbByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiNotifyDbByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiNotifyDbByIdNewTableData = {
    body?: {
        schema_name: string;
        table_name: string;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/notify/db/{id}/new-table';
};

export type PostApiNotifyDbByIdNewTableErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiNotifyDbByIdNewTableResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPermissionsGraphData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/permissions/graph';
};

export type GetApiPermissionsGraphErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPermissionsGraphResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiPermissionsGraphData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        'skip-graph'?: boolean;
        force?: boolean;
    };
    url: '/api/permissions/graph';
};

export type PutApiPermissionsGraphErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiPermissionsGraphResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPermissionsGraphDbByDbIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'db-id': number;
    };
    query?: never;
    url: '/api/permissions/graph/db/{db-id}';
};

export type GetApiPermissionsGraphDbByDbIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPermissionsGraphDbByDbIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPermissionsGraphGroupByGroupIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'group-id': number;
    };
    query?: never;
    url: '/api/permissions/graph/group/{group-id}';
};

export type GetApiPermissionsGraphGroupByGroupIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPermissionsGraphGroupByGroupIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPermissionsGroupData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/permissions/group';
};

export type GetApiPermissionsGroupErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPermissionsGroupResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiPermissionsGroupData = {
    body?: {
        name: string;
    };
    path?: never;
    query?: never;
    url: '/api/permissions/group';
};

export type PostApiPermissionsGroupErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiPermissionsGroupResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiPermissionsGroupByGroupIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'group-id': number;
    };
    query?: never;
    url: '/api/permissions/group/{group-id}';
};

export type DeleteApiPermissionsGroupByGroupIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiPermissionsGroupByGroupIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiPermissionsGroupByGroupIdData = {
    body?: {
        name: string;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'group-id': number;
    };
    query?: never;
    url: '/api/permissions/group/{group-id}';
};

export type PutApiPermissionsGroupByGroupIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiPermissionsGroupByGroupIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPermissionsGroupByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/permissions/group/{id}';
};

export type GetApiPermissionsGroupByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPermissionsGroupByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPermissionsMembershipData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/permissions/membership';
};

export type GetApiPermissionsMembershipErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPermissionsMembershipResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiPermissionsMembershipData = {
    body?: {
        /**
         * value must be an integer greater than zero.
         */
        group_id: number;
        is_group_manager?: boolean;
        /**
         * value must be an integer greater than zero.
         */
        user_id: number;
    };
    path?: never;
    query?: never;
    url: '/api/permissions/membership';
};

export type PostApiPermissionsMembershipErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiPermissionsMembershipResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiPermissionsMembershipByGroupIdClearData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'group-id': number;
    };
    query?: never;
    url: '/api/permissions/membership/{group-id}/clear';
};

export type PutApiPermissionsMembershipByGroupIdClearErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiPermissionsMembershipByGroupIdClearResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiPermissionsMembershipByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/permissions/membership/{id}';
};

export type DeleteApiPermissionsMembershipByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiPermissionsMembershipByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiPermissionsMembershipByIdData = {
    body?: {
        is_group_manager: boolean;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/permissions/membership/{id}';
};

export type PutApiPermissionsMembershipByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiPermissionsMembershipByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPersistData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/persist/';
};

export type GetApiPersistErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPersistResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPersistCardByCardIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
    };
    query?: never;
    url: '/api/persist/card/{card-id}';
};

export type GetApiPersistCardByCardIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPersistCardByCardIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiPersistCardByCardIdPersistData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
    };
    query?: never;
    url: '/api/persist/card/{card-id}/persist';
};

export type PostApiPersistCardByCardIdPersistErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiPersistCardByCardIdPersistResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiPersistCardByCardIdRefreshData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
    };
    query?: never;
    url: '/api/persist/card/{card-id}/refresh';
};

export type PostApiPersistCardByCardIdRefreshErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiPersistCardByCardIdRefreshResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiPersistCardByCardIdUnpersistData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
    };
    query?: never;
    url: '/api/persist/card/{card-id}/unpersist';
};

export type PostApiPersistCardByCardIdUnpersistErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiPersistCardByCardIdUnpersistResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiPersistDatabaseByIdPersistData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/persist/database/{id}/persist';
};

export type PostApiPersistDatabaseByIdPersistErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiPersistDatabaseByIdPersistResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiPersistDatabaseByIdUnpersistData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/persist/database/{id}/unpersist';
};

export type PostApiPersistDatabaseByIdUnpersistErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiPersistDatabaseByIdUnpersistResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiPersistDisableData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/persist/disable';
};

export type PostApiPersistDisableErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiPersistDisableResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiPersistEnableData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/persist/enable';
};

export type PostApiPersistEnableErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiPersistEnableResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiPersistSetRefreshScheduleData = {
    body?: {
        /**
         * Value must be a string representing a cron schedule of format <seconds> <minutes> <hours> <day of month> <month> <day of week> <year>
         */
        cron: string;
    };
    path?: never;
    query?: never;
    url: '/api/persist/set-refresh-schedule';
};

export type PostApiPersistSetRefreshScheduleErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiPersistSetRefreshScheduleResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPersistByPersistedInfoIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'persisted-info-id': number;
    };
    query?: never;
    url: '/api/persist/{persisted-info-id}';
};

export type GetApiPersistByPersistedInfoIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPersistByPersistedInfoIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPremiumFeaturesTokenStatusData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/premium-features/token/status';
};

export type GetApiPremiumFeaturesTokenStatusErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPremiumFeaturesTokenStatusResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPreviewEmbedCardByTokenData = {
    body?: never;
    path: {
        token: string;
    };
    query?: never;
    url: '/api/preview_embed/card/{token}';
};

export type GetApiPreviewEmbedCardByTokenErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPreviewEmbedCardByTokenResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPreviewEmbedCardByTokenParamsByParamKeyRemappingData = {
    body?: never;
    path: {
        token: string;
        'param-key': string;
    };
    query: {
        value: string;
    };
    url: '/api/preview_embed/card/{token}/params/{param-key}/remapping';
};

export type GetApiPreviewEmbedCardByTokenParamsByParamKeyRemappingErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPreviewEmbedCardByTokenParamsByParamKeyRemappingResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPreviewEmbedCardByTokenQueryData = {
    body?: never;
    path: {
        token: string;
    };
    query?: never;
    url: '/api/preview_embed/card/{token}/query';
};

export type GetApiPreviewEmbedCardByTokenQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPreviewEmbedCardByTokenQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPreviewEmbedDashboardByTokenData = {
    body?: never;
    path: {
        token: string;
    };
    query?: never;
    url: '/api/preview_embed/dashboard/{token}';
};

export type GetApiPreviewEmbedDashboardByTokenErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPreviewEmbedDashboardByTokenResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPreviewEmbedDashboardByTokenDashcardByDashcardIdCardByCardIdData = {
    body?: never;
    path: {
        token: string;
        /**
         * value must be an integer greater than zero.
         */
        'dashcard-id': number;
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
    };
    query?: never;
    url: '/api/preview_embed/dashboard/{token}/dashcard/{dashcard-id}/card/{card-id}';
};

export type GetApiPreviewEmbedDashboardByTokenDashcardByDashcardIdCardByCardIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPreviewEmbedDashboardByTokenDashcardByDashcardIdCardByCardIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPreviewEmbedDashboardByTokenParamsByParamKeyRemappingData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/preview_embed/dashboard/{token}/params/{param-key}/remapping';
};

export type GetApiPreviewEmbedDashboardByTokenParamsByParamKeyRemappingErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPreviewEmbedDashboardByTokenParamsByParamKeyRemappingResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPreviewEmbedDashboardByTokenParamsByParamKeyValuesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/preview_embed/dashboard/{token}/params/{param-key}/values';
};

export type GetApiPreviewEmbedDashboardByTokenParamsByParamKeyValuesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPreviewEmbedDashboardByTokenParamsByParamKeyValuesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPreviewEmbedPivotCardByTokenQueryData = {
    body?: never;
    path: {
        token: string;
    };
    query?: never;
    url: '/api/preview_embed/pivot/card/{token}/query';
};

export type GetApiPreviewEmbedPivotCardByTokenQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPreviewEmbedPivotCardByTokenQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPreviewEmbedPivotDashboardByTokenDashcardByDashcardIdCardByCardIdData = {
    body?: never;
    path: {
        token: string;
        /**
         * value must be an integer greater than zero.
         */
        'dashcard-id': number;
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
    };
    query?: never;
    url: '/api/preview_embed/pivot/dashboard/{token}/dashcard/{dashcard-id}/card/{card-id}';
};

export type GetApiPreviewEmbedPivotDashboardByTokenDashcardByDashcardIdCardByCardIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPreviewEmbedPivotDashboardByTokenDashcardByDashcardIdCardByCardIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPreviewEmbedTilesCardByTokenByZoomByXByYData = {
    body?: never;
    path: {
        token: string;
        /**
         * value must be an integer.
         */
        zoom: number;
        /**
         * value must be an integer.
         */
        x: number;
        /**
         * value must be an integer.
         */
        y: number;
    };
    query: {
        /**
         * value must be a valid JSON string.
         */
        parameters?: string;
        latField: string;
        lonField: string;
    };
    url: '/api/preview_embed/tiles/card/{token}/{zoom}/{x}/{y}';
};

export type GetApiPreviewEmbedTilesCardByTokenByZoomByXByYErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPreviewEmbedTilesCardByTokenByZoomByXByYResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPreviewEmbedTilesDashboardByTokenDashcardByDashcardIdCardByCardIdByZoomByXByYData = {
    body?: never;
    path: {
        token: string;
        /**
         * value must be an integer greater than zero.
         */
        'dashcard-id': number;
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
        /**
         * value must be an integer.
         */
        zoom: number;
        /**
         * value must be an integer.
         */
        x: number;
        /**
         * value must be an integer.
         */
        y: number;
    };
    query: {
        /**
         * value must be a valid JSON string.
         */
        parameters?: string;
        latField: string;
        lonField: string;
    };
    url: '/api/preview_embed/tiles/dashboard/{token}/dashcard/{dashcard-id}/card/{card-id}/{zoom}/{x}/{y}';
};

export type GetApiPreviewEmbedTilesDashboardByTokenDashcardByDashcardIdCardByCardIdByZoomByXByYErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPreviewEmbedTilesDashboardByTokenDashcardByDashcardIdCardByCardIdByZoomByXByYResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiProductFeedbackData = {
    body?: {
        comments?: string;
        email?: string;
        source: string;
    };
    path?: never;
    query?: never;
    url: '/api/product-feedback/';
};

export type PostApiProductFeedbackErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiProductFeedbackResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPublicActionByUuidData = {
    body?: never;
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
    };
    query?: never;
    url: '/api/public/action/{uuid}';
};

export type GetApiPublicActionByUuidErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPublicActionByUuidResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiPublicActionByUuidExecuteData = {
    body?: {
        parameters?: {
            [key: string]: unknown;
        };
    };
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
    };
    query?: never;
    url: '/api/public/action/{uuid}/execute';
};

export type PostApiPublicActionByUuidExecuteErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiPublicActionByUuidExecuteResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPublicCardByUuidData = {
    body?: never;
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
    };
    query?: never;
    url: '/api/public/card/{uuid}';
};

export type GetApiPublicCardByUuidErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPublicCardByUuidResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPublicCardByUuidParamsByParamKeyRemappingData = {
    body?: never;
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
        'param-key': string;
    };
    query: {
        value: unknown;
    };
    url: '/api/public/card/{uuid}/params/{param-key}/remapping';
};

export type GetApiPublicCardByUuidParamsByParamKeyRemappingErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPublicCardByUuidParamsByParamKeyRemappingResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPublicCardByUuidParamsByParamKeySearchByQueryData = {
    body?: never;
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
        'param-key': string;
        query: string;
    };
    query?: never;
    url: '/api/public/card/{uuid}/params/{param-key}/search/{query}';
};

export type GetApiPublicCardByUuidParamsByParamKeySearchByQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPublicCardByUuidParamsByParamKeySearchByQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPublicCardByUuidParamsByParamKeyValuesData = {
    body?: never;
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
        'param-key': string;
    };
    query?: never;
    url: '/api/public/card/{uuid}/params/{param-key}/values';
};

export type GetApiPublicCardByUuidParamsByParamKeyValuesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPublicCardByUuidParamsByParamKeyValuesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPublicCardByUuidQueryData = {
    body?: never;
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
    };
    query?: {
        /**
         * value must be a valid JSON string.
         */
        parameters?: string;
    };
    url: '/api/public/card/{uuid}/query';
};

export type GetApiPublicCardByUuidQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPublicCardByUuidQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPublicCardByUuidQueryByExportFormatData = {
    body?: never;
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
        'export-format': MetabaseQueryProcessorSchemaExportFormat;
    };
    query: {
        format_rows: boolean;
        pivot_results: boolean;
        /**
         * value must be a valid JSON string.
         */
        parameters?: string;
    };
    url: '/api/public/card/{uuid}/query/{export-format}';
};

export type GetApiPublicCardByUuidQueryByExportFormatErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPublicCardByUuidQueryByExportFormatResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPublicDashboardByUuidData = {
    body?: never;
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
    };
    query?: never;
    url: '/api/public/dashboard/{uuid}';
};

export type GetApiPublicDashboardByUuidErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPublicDashboardByUuidResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPublicDashboardByUuidDashcardByDashcardIdCardByCardIdData = {
    body?: never;
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
        /**
         * value must be an integer greater than zero.
         */
        'dashcard-id': number;
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
    };
    query?: {
        /**
         * value must be a valid JSON string.
         */
        parameters?: string;
    };
    url: '/api/public/dashboard/{uuid}/dashcard/{dashcard-id}/card/{card-id}';
};

export type GetApiPublicDashboardByUuidDashcardByDashcardIdCardByCardIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPublicDashboardByUuidDashcardByDashcardIdCardByCardIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiPublicDashboardByUuidDashcardByDashcardIdCardByCardIdByExportFormatData = {
    body?: {
        format_rows: boolean;
        parameters?: Array<{
            [key: string]: unknown;
        }>;
        pivot_results: boolean;
    };
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
        /**
         * value must be an integer greater than zero.
         */
        'dashcard-id': number;
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
        'export-format': MetabaseQueryProcessorSchemaExportFormat;
    };
    query?: never;
    url: '/api/public/dashboard/{uuid}/dashcard/{dashcard-id}/card/{card-id}/{export-format}';
};

export type PostApiPublicDashboardByUuidDashcardByDashcardIdCardByCardIdByExportFormatErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiPublicDashboardByUuidDashcardByDashcardIdCardByCardIdByExportFormatResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPublicDashboardByUuidDashcardByDashcardIdExecuteData = {
    body?: never;
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
        /**
         * value must be an integer greater than zero.
         */
        'dashcard-id': number;
    };
    query: {
        /**
         * value must be a valid JSON string.
         */
        parameters: string;
    };
    url: '/api/public/dashboard/{uuid}/dashcard/{dashcard-id}/execute';
};

export type GetApiPublicDashboardByUuidDashcardByDashcardIdExecuteErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPublicDashboardByUuidDashcardByDashcardIdExecuteResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiPublicDashboardByUuidDashcardByDashcardIdExecuteData = {
    body?: {
        parameters?: {
            [key: string]: unknown;
        };
    };
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
        /**
         * value must be an integer greater than zero.
         */
        'dashcard-id': number;
    };
    query?: never;
    url: '/api/public/dashboard/{uuid}/dashcard/{dashcard-id}/execute';
};

export type PostApiPublicDashboardByUuidDashcardByDashcardIdExecuteErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiPublicDashboardByUuidDashcardByDashcardIdExecuteResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPublicDashboardByUuidParamsByParamKeyRemappingData = {
    body?: never;
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
        'param-key': string;
    };
    query: {
        value: unknown;
    };
    url: '/api/public/dashboard/{uuid}/params/{param-key}/remapping';
};

export type GetApiPublicDashboardByUuidParamsByParamKeyRemappingErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPublicDashboardByUuidParamsByParamKeyRemappingResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPublicDashboardByUuidParamsByParamKeySearchByQueryData = {
    body?: never;
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
        'param-key': string;
        query: string;
    };
    query?: never;
    url: '/api/public/dashboard/{uuid}/params/{param-key}/search/{query}';
};

export type GetApiPublicDashboardByUuidParamsByParamKeySearchByQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPublicDashboardByUuidParamsByParamKeySearchByQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPublicDashboardByUuidParamsByParamKeyValuesData = {
    body?: never;
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
        'param-key': string;
    };
    query?: never;
    url: '/api/public/dashboard/{uuid}/params/{param-key}/values';
};

export type GetApiPublicDashboardByUuidParamsByParamKeyValuesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPublicDashboardByUuidParamsByParamKeyValuesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPublicOembedData = {
    body?: never;
    path?: never;
    query: {
        url: string;
        /**
         * The format param is not used by the API, but is required as part of the oEmbed spec: http://oembed.com/#section2 just return an error if `format` is specified and it's anything other than `json`.
         */
        format?: 'json';
        maxheight: number;
        maxwidth: number;
    };
    url: '/api/public/oembed';
};

export type GetApiPublicOembedErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPublicOembedResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPublicPivotCardByUuidQueryData = {
    body?: never;
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
    };
    query?: {
        /**
         * value must be a valid JSON string.
         */
        parameters?: string;
    };
    url: '/api/public/pivot/card/{uuid}/query';
};

export type GetApiPublicPivotCardByUuidQueryErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPublicPivotCardByUuidQueryResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPublicPivotDashboardByUuidDashcardByDashcardIdCardByCardIdData = {
    body?: never;
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
        /**
         * value must be an integer greater than zero.
         */
        'dashcard-id': number;
    };
    query?: {
        /**
         * value must be a valid JSON string.
         */
        parameters?: string;
    };
    url: '/api/public/pivot/dashboard/{uuid}/dashcard/{dashcard-id}/card/{card-id}';
};

export type GetApiPublicPivotDashboardByUuidDashcardByDashcardIdCardByCardIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPublicPivotDashboardByUuidDashcardByDashcardIdCardByCardIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPublicTilesCardByUuidByZoomByXByYData = {
    body?: never;
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
        /**
         * value must be an integer.
         */
        zoom: number;
        /**
         * value must be an integer.
         */
        x: number;
        /**
         * value must be an integer.
         */
        y: number;
    };
    query: {
        /**
         * value must be a valid JSON string.
         */
        parameters?: string;
        latField: string;
        lonField: string;
    };
    url: '/api/public/tiles/card/{uuid}/{zoom}/{x}/{y}';
};

export type GetApiPublicTilesCardByUuidByZoomByXByYErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPublicTilesCardByUuidByZoomByXByYResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPublicTilesDashboardByUuidDashcardByDashcardIdCardByCardIdByZoomByXByYData = {
    body?: never;
    path: {
        /**
         * value must be a valid UUID.
         */
        uuid: string;
        /**
         * value must be an integer greater than zero.
         */
        'dashcard-id': number;
        /**
         * value must be an integer greater than zero.
         */
        'card-id': number;
        /**
         * value must be an integer.
         */
        zoom: number;
        /**
         * value must be an integer.
         */
        x: number;
        /**
         * value must be an integer.
         */
        y: number;
    };
    query: {
        /**
         * value must be a valid JSON string.
         */
        parameters?: string;
        latField: string;
        lonField: string;
    };
    url: '/api/public/tiles/dashboard/{uuid}/dashcard/{dashcard-id}/card/{card-id}/{zoom}/{x}/{y}';
};

export type GetApiPublicTilesDashboardByUuidDashcardByDashcardIdCardByCardIdByZoomByXByYErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPublicTilesDashboardByUuidDashcardByDashcardIdCardByCardIdByZoomByXByYResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPulseData = {
    body?: never;
    path?: never;
    query?: {
        archived?: boolean;
        /**
         * value must be an integer greater than zero.
         */
        dashboard_id?: number;
        creator_or_recipient?: boolean;
    };
    url: '/api/pulse/';
};

export type GetApiPulseErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPulseResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiPulseData = {
    body?: {
        cards: unknown;
        channels: unknown;
        /**
         * value must be an integer greater than zero.
         */
        collection_id?: number;
        /**
         * value must be an integer greater than zero.
         */
        collection_position?: number;
        /**
         * value must be an integer greater than zero.
         */
        dashboard_id?: number;
        name: string;
        parameters?: Array<{
            [key: string]: unknown;
        }>;
        skip_if_empty?: boolean;
    };
    path?: never;
    query?: never;
    url: '/api/pulse/';
};

export type PostApiPulseErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiPulseResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPulseFormInputData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/pulse/form_input';
};

export type GetApiPulseFormInputErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPulseFormInputResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPulsePreviewCardByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/pulse/preview_card/{id}';
};

export type GetApiPulsePreviewCardByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPulsePreviewCardByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPulsePreviewCardInfoByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/pulse/preview_card_info/{id}';
};

export type GetApiPulsePreviewCardInfoByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPulsePreviewCardInfoByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPulsePreviewCardPngByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: {
        /**
         * value must be an integer greater than zero.
         */
        width?: number;
    };
    url: '/api/pulse/preview_card_png/{id}';
};

export type GetApiPulsePreviewCardPngByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPulsePreviewCardPngByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPulsePreviewDashboardByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/pulse/preview_dashboard/{id}';
};

export type GetApiPulsePreviewDashboardByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPulsePreviewDashboardByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiPulseTestData = {
    body?: {
        cards: unknown;
        channels: unknown;
        /**
         * value must be an integer greater than zero.
         */
        collection_id?: number;
        /**
         * value must be an integer greater than zero.
         */
        collection_position?: number;
        /**
         * value must be an integer greater than zero.
         */
        dashboard_id?: number;
        name: string;
        skip_if_empty?: boolean;
    };
    path?: never;
    query?: never;
    url: '/api/pulse/test';
};

export type PostApiPulseTestErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiPulseTestResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiPulseUnsubscribeData = {
    body?: {
        email: string;
        hash: string;
        /**
         * value must be an integer greater than zero.
         */
        'pulse-id': number;
    };
    path?: never;
    query?: never;
    url: '/api/pulse/unsubscribe/';
};

export type PostApiPulseUnsubscribeErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiPulseUnsubscribeResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiPulseUnsubscribeUndoData = {
    body?: {
        email: string;
        hash: string;
        /**
         * value must be an integer greater than zero.
         */
        'pulse-id': number;
    };
    path?: never;
    query?: never;
    url: '/api/pulse/unsubscribe/undo';
};

export type PostApiPulseUnsubscribeUndoErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiPulseUnsubscribeUndoResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiPulseByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/pulse/{id}';
};

export type GetApiPulseByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiPulseByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiPulseByIdData = {
    body?: {
        archived?: boolean;
        cards?: unknown;
        channels?: unknown;
        /**
         * value must be an integer greater than zero.
         */
        collection_id?: number;
        name?: string;
        parameters?: Array<{
            [key: string]: unknown;
        }>;
        skip_if_empty?: boolean;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/pulse/{id}';
};

export type PutApiPulseByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiPulseByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiPulseByIdSubscriptionData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/pulse/{id}/subscription';
};

export type DeleteApiPulseByIdSubscriptionErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiPulseByIdSubscriptionResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiRevisionData = {
    body?: never;
    path?: never;
    query: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
        entity: 'card' | 'dashboard' | 'document' | 'segment';
    };
    url: '/api/revision/';
};

export type GetApiRevisionErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiRevisionResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiRevisionRevertData = {
    body?: {
        entity: 'card' | 'dashboard' | 'document' | 'segment';
        /**
         * value must be an integer greater than zero.
         */
        id: number;
        /**
         * value must be an integer greater than zero.
         */
        revision_id: number;
    };
    path?: never;
    query?: never;
    url: '/api/revision/revert';
};

export type PostApiRevisionRevertErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiRevisionRevertResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiRevisionByEntityByIdData = {
    body?: never;
    path: {
        entity: 'card' | 'dashboard' | 'document' | 'segment';
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/revision/{entity}/{id}';
};

export type GetApiRevisionByEntityByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiRevisionByEntityByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiSearchData = {
    body?: never;
    path?: never;
    query?: {
        q?: string;
        context?: string;
        archived?: boolean;
        /**
         * value must be an integer greater than zero.
         */
        table_db_id?: number;
        models?: Array<'dashboard' | 'table' | 'dataset' | 'segment' | 'collection' | 'document' | 'database' | 'action' | 'indexed-entity' | 'metric' | 'card'>;
        filter_items_in_personal_collection?: 'all' | 'only' | 'only-mine' | 'exclude' | 'exclude-others';
        created_at?: string;
        created_by?: Array<number>;
        display_type?: Array<string>;
        last_edited_at?: string;
        last_edited_by?: Array<number>;
        model_ancestors?: boolean;
        search_engine?: string;
        search_native_query?: boolean;
        verified?: boolean;
        ids?: Array<number>;
        calculate_available_models?: boolean;
        include_dashboard_questions?: boolean;
        include_metadata?: boolean;
        non_temporal_dim_ids?: string;
        has_temporal_dim?: boolean;
    };
    url: '/api/search/';
};

export type GetApiSearchErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiSearchResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiSearchForceReindexData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/search/force-reindex';
};

export type PostApiSearchForceReindexErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiSearchForceReindexResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiSearchReInitData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/search/re-init';
};

export type PostApiSearchReInitErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiSearchReInitResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiSearchWeightsData = {
    body?: never;
    path?: never;
    query: {
        context: string;
        search_engine?: unknown;
    };
    url: '/api/search/weights';
};

export type GetApiSearchWeightsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiSearchWeightsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiSearchWeightsData = {
    body?: never;
    path?: never;
    query: {
        context: string;
        search_engine?: unknown;
    };
    url: '/api/search/weights';
};

export type PutApiSearchWeightsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiSearchWeightsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiSegmentData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/segment/';
};

export type GetApiSegmentErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiSegmentResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiSegmentData = {
    body?: {
        /**
         * Value must be a map.
         */
        definition: {
            [key: string]: unknown;
        };
        description?: string;
        name: string;
        /**
         * value must be an integer greater than zero.
         */
        table_id: number;
    };
    path?: never;
    query?: never;
    url: '/api/segment/';
};

export type PostApiSegmentErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiSegmentResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiSegmentByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query: {
        revision_message: string;
    };
    url: '/api/segment/{id}';
};

export type DeleteApiSegmentByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiSegmentByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiSegmentByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/segment/{id}';
};

export type GetApiSegmentByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiSegmentByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiSegmentByIdData = {
    body?: {
        archived?: boolean;
        caveats?: string;
        definition?: {
            [key: string]: unknown;
        };
        description?: string;
        name?: string;
        points_of_interest?: string;
        revision_message: string;
        show_in_getting_started?: boolean;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/segment/{id}';
};

export type PutApiSegmentByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiSegmentByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiSegmentByIdRelatedData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/segment/{id}/related';
};

export type GetApiSegmentByIdRelatedErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiSegmentByIdRelatedResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiSessionData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/session/';
};

export type DeleteApiSessionErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiSessionResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiSessionData = {
    body?: {
        password: string;
        username: string;
    };
    path?: never;
    query?: never;
    url: '/api/session/';
};

export type PostApiSessionErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiSessionResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiSessionForgotPasswordData = {
    body?: {
        /**
         * value must be a valid email address.
         */
        email: string;
    };
    path?: never;
    query?: never;
    url: '/api/session/forgot_password';
};

export type PostApiSessionForgotPasswordErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiSessionForgotPasswordResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiSessionGoogleAuthData = {
    body?: {
        token: string;
    };
    path?: never;
    query?: never;
    url: '/api/session/google_auth';
};

export type PostApiSessionGoogleAuthErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiSessionGoogleAuthResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiSessionPasswordCheckData = {
    body?: {
        /**
         * password is too common.
         */
        password: string;
    };
    path?: never;
    query?: never;
    url: '/api/session/password-check';
};

export type PostApiSessionPasswordCheckErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiSessionPasswordCheckResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiSessionPasswordResetTokenValidData = {
    body?: never;
    path?: never;
    query: {
        token: string;
    };
    url: '/api/session/password_reset_token_valid';
};

export type GetApiSessionPasswordResetTokenValidErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiSessionPasswordResetTokenValidResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiSessionPropertiesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/session/properties';
};

export type GetApiSessionPropertiesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiSessionPropertiesResponses = {
    /**
     * map where {:available-locales -> <sequence of enum of ["ar" "Arabic"], ["ar_SA" "Arabic (Saudi Arabia)"], ["bg" "Bulgarian"], ["ca" "Catalan"], ["cs" "Czech"], ["da" "Danish"], ["de" "German"], ["en" "English"], ["es" "Spanish"], ["fa" "Persian"], ["fi" "Finnish"], ["fr" "French"], ["he" "Hebrew"], ["hu" "Hungarian"], ["id" "Indonesian"], ["it" "Italian"], ["ja" "Japanese"], ["ko" "Korean"], ["lv" "Latvian"], ["ms" "Malay"], ["nb" "Norwegian Bokmål"], ["nl" "Dutch"], ["pl" "Polish"], ["pt_BR" "Portuguese (Brazil)"], ["ru" "Russian"], ["sk" "Slovak"], ["sl" "Slovenian"], ["sq" "Albanian"], ["sr" "Serbian"], ["sv" "Swedish"], ["tr" "Turkish"], ["uk" "Ukrainian"], ["vi" "Vietnamese"], ["zh_CN" "Chinese (China)"], ["zh_HK" "Chinese (Hong Kong SAR China)"], ["zh_TW" "Chinese (Taiwan)"]>}
     */
    '2XX': {
        'available-locales': MetabaseSessionApiAvailableLocales;
    };
};

export type GetApiSessionPropertiesResponse = GetApiSessionPropertiesResponses[keyof GetApiSessionPropertiesResponses];

export type PostApiSessionResetPasswordData = {
    body?: {
        /**
         * password is too common.
         */
        password: string;
        token: string;
    };
    path?: never;
    query?: never;
    url: '/api/session/reset_password';
};

export type PostApiSessionResetPasswordErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiSessionResetPasswordResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiSettingData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/setting/';
};

export type GetApiSettingErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiSettingResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiSettingData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: never;
    url: '/api/setting/';
};

export type PutApiSettingErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiSettingResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiSettingByKeyData = {
    body?: never;
    path: {
        key: string;
    };
    query?: never;
    url: '/api/setting/{key}';
};

export type GetApiSettingByKeyErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiSettingByKeyResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiSettingByKeyData = {
    body?: {
        value: unknown;
    };
    path: {
        key: string;
    };
    query?: never;
    url: '/api/setting/{key}';
};

export type PutApiSettingByKeyErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiSettingByKeyResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiSetupData = {
    body?: {
        prefs: {
            /**
             * String must be a valid two-letter ISO language or language-country code e.g. 'en' or 'en_US'.
             */
            site_locale?: string;
            site_name: string;
        };
        /**
         * Token does not match the setup token.
         */
        token: string;
        user: {
            /**
             * value must be a valid email address.
             */
            email: string;
            first_name?: string;
            last_name?: string;
            /**
             * password is too common.
             */
            password: string;
        };
    };
    path?: never;
    query?: never;
    url: '/api/setup/';
};

export type PostApiSetupErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiSetupResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiSetupUserDefaultsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/setup/user_defaults';
};

export type GetApiSetupUserDefaultsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiSetupUserDefaultsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiSlackBugReportData = {
    body?: {
        diagnosticInfo: {
            [key: string]: unknown;
        };
    };
    path?: never;
    query?: never;
    url: '/api/slack/bug-report';
};

export type PostApiSlackBugReportErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiSlackBugReportResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiSlackManifestData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/slack/manifest';
};

export type GetApiSlackManifestErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiSlackManifestResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiSlackSettingsData = {
    body?: {
        'slack-app-token'?: string;
        'slack-bug-report-channel'?: string;
    };
    path?: never;
    query?: never;
    url: '/api/slack/settings';
};

export type PutApiSlackSettingsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiSlackSettingsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiTableData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/table/';
};

export type GetApiTableErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTableResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiTableData = {
    body?: {
        points_of_interest?: string;
        visibility_type?: 'technical' | 'hidden' | 'cruft';
        data_authority?: MetabaseWarehouseSchemaApiTableDataAuthorityWrite;
        show_in_getting_started?: boolean;
        ids: Array<number>;
        display_name?: string;
        caveats?: string;
        /**
         * value must be a valid entity type (keyword or string).
         */
        entity_type?: unknown;
        description?: string;
    };
    path?: never;
    query?: never;
    url: '/api/table/';
};

export type PutApiTableErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiTableResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiTableCardIdFksData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/table/card__:id/fks';
};

export type GetApiTableCardIdFksErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTableCardIdFksResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiTableCardIdQueryMetadataData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/table/card__:id/query_metadata';
};

export type GetApiTableCardIdQueryMetadataErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTableCardIdQueryMetadataResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiTableByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: {
        include_editable_data_model?: boolean;
    };
    url: '/api/table/{id}';
};

export type GetApiTableByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTableByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiTableByIdData = {
    body?: {
        points_of_interest?: string;
        visibility_type?: 'technical' | 'hidden' | 'cruft';
        data_authority?: MetabaseWarehouseSchemaApiTableDataAuthorityWrite;
        show_in_getting_started?: boolean;
        display_name?: string;
        caveats?: string;
        /**
         * value must be a valid entity type (keyword or string).
         */
        entity_type?: unknown;
        field_order?: 'alphabetical' | 'custom' | 'database' | 'smart';
        description?: string;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/table/{id}';
};

export type PutApiTableByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiTableByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiTableByIdAppendCsvData = {
    body?: {
        file: {
            filename: string;
            tempfile: unknown;
        };
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/table/{id}/append-csv';
};

export type PostApiTableByIdAppendCsvErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiTableByIdAppendCsvResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiTableByIdDiscardValuesData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/table/{id}/discard_values';
};

export type PostApiTableByIdDiscardValuesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiTableByIdDiscardValuesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiTableByIdFieldsOrderData = {
    body?: Array<number>;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/table/{id}/fields/order';
};

export type PutApiTableByIdFieldsOrderErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiTableByIdFieldsOrderResponses = {
    /**
     * map where {:success -> <must equal true>}
     */
    '2XX': {
        success: true;
    };
};

export type PutApiTableByIdFieldsOrderResponse = PutApiTableByIdFieldsOrderResponses[keyof PutApiTableByIdFieldsOrderResponses];

export type GetApiTableByIdFksData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/table/{id}/fks';
};

export type GetApiTableByIdFksErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTableByIdFksResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiTableByIdQueryMetadataData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: {
        include_sensitive_fields?: boolean;
        include_hidden_fields?: boolean;
        include_editable_data_model?: boolean;
    };
    url: '/api/table/{id}/query_metadata';
};

export type GetApiTableByIdQueryMetadataErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTableByIdQueryMetadataResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiTableByIdRelatedData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/table/{id}/related';
};

export type GetApiTableByIdRelatedErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTableByIdRelatedResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiTableByIdReplaceCsvData = {
    body?: {
        file: {
            filename: string;
            tempfile: unknown;
        };
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/table/{id}/replace-csv';
};

export type PostApiTableByIdReplaceCsvErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiTableByIdReplaceCsvResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiTableByIdRescanValuesData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/table/{id}/rescan_values';
};

export type PostApiTableByIdRescanValuesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiTableByIdRescanValuesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiTableByIdSyncSchemaData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/table/{id}/sync_schema';
};

export type PostApiTableByIdSyncSchemaErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiTableByIdSyncSchemaResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiTableByTableIdDataData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        'table-id': number;
    };
    query?: never;
    url: '/api/table/{table-id}/data';
};

export type GetApiTableByTableIdDataErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTableByTableIdDataResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiTaskData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/task/';
};

export type GetApiTaskErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTaskResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiTaskInfoData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/task/info';
};

export type GetApiTaskInfoErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTaskInfoResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiTaskUniqueTasksData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/task/unique-tasks';
};

export type GetApiTaskUniqueTasksErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTaskUniqueTasksResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiTaskByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/task/{id}';
};

export type GetApiTaskByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTaskByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiTestingEchoData = {
    body?: never;
    path?: never;
    query: {
        fail: boolean;
        /**
         * value must be a valid JSON string.
         */
        body: string;
    };
    url: '/api/testing/echo';
};

export type GetApiTestingEchoErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTestingEchoResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiTestingEchoData = {
    body?: never;
    path?: never;
    query: {
        fail: boolean;
    };
    url: '/api/testing/echo';
};

export type PostApiTestingEchoErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiTestingEchoResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiTestingMarkStaleData = {
    body?: {
        'date-str'?: string;
        /**
         * value must be an integer greater than zero.
         */
        id: number;
        model: string;
    };
    path?: never;
    query?: never;
    url: '/api/testing/mark-stale';
};

export type PostApiTestingMarkStaleErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiTestingMarkStaleResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiTestingRefreshCachesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/testing/refresh-caches';
};

export type PostApiTestingRefreshCachesErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiTestingRefreshCachesResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiTestingRestoreByNameData = {
    body?: never;
    path: {
        name: string;
    };
    query?: never;
    url: '/api/testing/restore/{name}';
};

export type PostApiTestingRestoreByNameErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiTestingRestoreByNameResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiTestingSetTimeData = {
    body?: {
        /**
         * value must be an integer.
         */
        'add-ms'?: number;
        /**
         * value must be a valid date string
         */
        time?: string;
    };
    path?: never;
    query?: never;
    url: '/api/testing/set-time';
};

export type PostApiTestingSetTimeErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiTestingSetTimeResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiTestingSnapshotByNameData = {
    body?: never;
    path: {
        name: string;
    };
    query?: never;
    url: '/api/testing/snapshot/{name}';
};

export type PostApiTestingSnapshotByNameErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiTestingSnapshotByNameResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiTestingStatsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/testing/stats';
};

export type PostApiTestingStatsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiTestingStatsResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiTilesByCardIdByZoomByXByYData = {
    body?: never;
    path: {
        'card-id': MetabaseLibSchemaIdCard;
        /**
         * value must be an integer.
         */
        zoom: number;
        /**
         * value must be an integer.
         */
        x: number;
        /**
         * value must be an integer.
         */
        y: number;
    };
    query: {
        parameters?: MetabaseTilesApiParameters;
        latField: MetabaseTilesApiLegacyRef;
        lonField: MetabaseTilesApiLegacyRef;
    };
    url: '/api/tiles/{card-id}/{zoom}/{x}/{y}';
};

export type GetApiTilesByCardIdByZoomByXByYErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTilesByCardIdByZoomByXByYResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiTilesByDashboardIdDashcardByDashcardIdCardByCardIdByZoomByXByYData = {
    body?: never;
    path: {
        'dashboard-id': MetabaseLibSchemaIdDashboard;
        'dashcard-id': MetabaseLibSchemaIdDashcard;
        'card-id': MetabaseLibSchemaIdCard;
        /**
         * value must be an integer.
         */
        zoom: number;
        /**
         * value must be an integer.
         */
        x: number;
        /**
         * value must be an integer.
         */
        y: number;
    };
    query: {
        parameters?: MetabaseTilesApiParameters;
        latField: MetabaseTilesApiLegacyRef;
        lonField: MetabaseTilesApiLegacyRef;
    };
    url: '/api/tiles/{dashboard-id}/dashcard/{dashcard-id}/card/{card-id}/{zoom}/{x}/{y}';
};

export type GetApiTilesByDashboardIdDashcardByDashcardIdCardByCardIdByZoomByXByYErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTilesByDashboardIdDashcardByDashcardIdCardByCardIdByZoomByXByYResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiTilesByZoomByXByYData = {
    body?: never;
    path: {
        /**
         * value must be an integer.
         */
        zoom: number;
        /**
         * value must be an integer.
         */
        x: number;
        /**
         * value must be an integer.
         */
        y: number;
    };
    query: {
        query: MetabaseTilesApiQuery;
        latField: MetabaseTilesApiLegacyRef;
        lonField: MetabaseTilesApiLegacyRef;
    };
    url: '/api/tiles/{zoom}/{x}/{y}';
};

export type GetApiTilesByZoomByXByYErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTilesByZoomByXByYResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiTimelineEventData = {
    body?: {
        /**
         * value must be an integer greater than zero.
         */
        question_id?: number;
        timezone: string;
        /**
         * value must be a valid date string
         */
        timestamp: string;
        name: string;
        archived?: boolean;
        /**
         * value must be an integer greater than zero.
         */
        timeline_id: number;
        source?: 'collections' | 'question';
        time_matters?: boolean;
        description?: string;
        icon?: 'star' | 'cake' | 'mail' | 'warning' | 'bell' | 'cloud';
    };
    path?: never;
    query?: never;
    url: '/api/timeline-event/';
};

export type PostApiTimelineEventErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiTimelineEventResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiTimelineEventByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/timeline-event/{id}';
};

export type DeleteApiTimelineEventByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiTimelineEventByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiTimelineEventByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/timeline-event/{id}';
};

export type GetApiTimelineEventByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTimelineEventByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiTimelineEventByIdData = {
    body?: {
        archived?: boolean;
        description?: string;
        icon?: 'star' | 'cake' | 'mail' | 'warning' | 'bell' | 'cloud';
        name?: string;
        time_matters?: boolean;
        /**
         * value must be an integer greater than zero.
         */
        timeline_id?: number;
        /**
         * value must be a valid date string
         */
        timestamp?: string;
        timezone?: string;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/timeline-event/{id}';
};

export type PutApiTimelineEventByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiTimelineEventByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiTimelineData = {
    body?: never;
    path?: never;
    query: {
        include?: MetabaseTimelineApiTimelineInclude;
        archived: boolean;
    };
    url: '/api/timeline/';
};

export type GetApiTimelineErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTimelineResponses = {
    /**
     * sequence of map where {:id -> <integer greater than 0>}
     */
    '2XX': Array<MetabaseTimelineApiTimelineTimeline>;
};

export type GetApiTimelineResponse = GetApiTimelineResponses[keyof GetApiTimelineResponses];

export type PostApiTimelineData = {
    body?: {
        archived?: boolean;
        /**
         * value must be an integer greater than zero.
         */
        collection_id?: number;
        default?: boolean;
        description?: string;
        icon?: 'star' | 'cake' | 'mail' | 'warning' | 'bell' | 'cloud';
        name: string;
    };
    path?: never;
    query?: never;
    url: '/api/timeline/';
};

export type PostApiTimelineErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiTimelineResponses = {
    /**
     * map where {:id -> <integer greater than 0>}
     */
    '2XX': MetabaseTimelineApiTimelineTimeline;
};

export type PostApiTimelineResponse = PostApiTimelineResponses[keyof PostApiTimelineResponses];

export type GetApiTimelineCollectionRootData = {
    body?: never;
    path?: never;
    query?: {
        include?: 'events';
        archived?: boolean;
    };
    url: '/api/timeline/collection/root';
};

export type GetApiTimelineCollectionRootErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTimelineCollectionRootResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiTimelineCollectionByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: {
        include?: 'events';
        archived?: boolean;
    };
    url: '/api/timeline/collection/{id}';
};

export type GetApiTimelineCollectionByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTimelineCollectionByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiTimelineByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/timeline/{id}';
};

export type DeleteApiTimelineByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiTimelineByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiTimelineByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query: {
        include?: MetabaseTimelineApiTimelineInclude;
        archived: boolean;
        /**
         * value must be a valid date string
         */
        start?: string;
        /**
         * value must be a valid date string
         */
        end?: string;
    };
    url: '/api/timeline/{id}';
};

export type GetApiTimelineByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiTimelineByIdResponses = {
    /**
     * map where {:id -> <integer greater than 0>}
     */
    '2XX': MetabaseTimelineApiTimelineTimeline;
};

export type GetApiTimelineByIdResponse = GetApiTimelineByIdResponses[keyof GetApiTimelineByIdResponses];

export type PutApiTimelineByIdData = {
    body?: {
        archived?: boolean;
        /**
         * value must be an integer greater than zero.
         */
        collection_id?: number;
        default?: boolean;
        description?: string;
        icon?: 'star' | 'cake' | 'mail' | 'warning' | 'bell' | 'cloud';
        name?: string;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/timeline/{id}';
};

export type PutApiTimelineByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiTimelineByIdResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PostApiUploadCsvData = {
    body?: {
        collection_id?: number;
        file: {
            filename: string;
            tempfile: unknown;
        };
    };
    path?: never;
    query?: never;
    url: '/api/upload/csv';
};

export type PostApiUploadCsvErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiUploadCsvResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiUserKeyValueNamespaceByNamespaceData = {
    body?: never;
    path: {
        namespace: string;
    };
    query?: never;
    url: '/api/user-key-value/namespace/{namespace}';
};

export type GetApiUserKeyValueNamespaceByNamespaceErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiUserKeyValueNamespaceByNamespaceResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type DeleteApiUserKeyValueNamespaceByNamespaceKeyByKeyData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/user-key-value/namespace/{namespace}/key/{key}';
};

export type DeleteApiUserKeyValueNamespaceByNamespaceKeyByKeyErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiUserKeyValueNamespaceByNamespaceKeyByKeyResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiUserKeyValueNamespaceByNamespaceKeyByKeyData = {
    body?: never;
    path: {
        key: string;
        namespace: string;
    };
    query?: never;
    url: '/api/user-key-value/namespace/{namespace}/key/{key}';
};

export type GetApiUserKeyValueNamespaceByNamespaceKeyByKeyErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiUserKeyValueNamespaceByNamespaceKeyByKeyResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type PutApiUserKeyValueNamespaceByNamespaceKeyByKeyData = {
    body?: {
        expires_at?: MetabaseLibSchemaLiteralStringDatetime;
        value?: unknown;
    };
    path: {
        key: string;
        namespace: string;
    };
    query?: never;
    url: '/api/user-key-value/namespace/{namespace}/key/{key}';
};

export type PutApiUserKeyValueNamespaceByNamespaceKeyByKeyErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiUserKeyValueNamespaceByNamespaceKeyByKeyResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};

export type GetApiUserData = {
    body?: never;
    path?: never;
    query?: {
        status?: string;
        query?: string;
        /**
         * value must be an integer greater than zero.
         */
        group_id?: number;
        include_deactivated?: boolean;
    };
    url: '/api/user/';
};

export type GetApiUserErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiUserResponses = {
    /**
     * Schema for paginated user list responses.
     */
    '2XX': MetabaseUsersApiPaginatedUsers;
};

export type GetApiUserResponse = GetApiUserResponses[keyof GetApiUserResponses];

export type PostApiUserData = {
    body?: {
        /**
         * value must be a valid email address.
         */
        email: string;
        first_name?: string;
        last_name?: string;
        /**
         * login attribute keys must be a keyword or string
         */
        login_attributes?: {
            [key: string]: unknown;
        };
        source?: string;
        user_group_memberships?: Array<MetabaseUsersApiUserGroupMembership>;
    };
    path?: never;
    query?: never;
    url: '/api/user/';
};

export type PostApiUserErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PostApiUserResponses = {
    /**
     * Schema for a User object returned by the API.
     */
    '2XX': MetabaseUsersApiUser;
};

export type PostApiUserResponse = PostApiUserResponses[keyof PostApiUserResponses];

export type GetApiUserCurrentData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/user/current';
};

export type GetApiUserCurrentErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiUserCurrentResponses = {
    /**
     * Schema for a User object returned by the API.
     */
    '2XX': MetabaseUsersApiUser;
};

export type GetApiUserCurrentResponse = GetApiUserCurrentResponses[keyof GetApiUserCurrentResponses];

export type GetApiUserRecipientsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/user/recipients';
};

export type GetApiUserRecipientsErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiUserRecipientsResponses = {
    /**
     * Schema for paginated user list responses.
     */
    '2XX': MetabaseUsersApiPaginatedUsers;
};

export type GetApiUserRecipientsResponse = GetApiUserRecipientsResponses[keyof GetApiUserRecipientsResponses];

export type DeleteApiUserByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/user/{id}';
};

export type DeleteApiUserByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type DeleteApiUserByIdResponses = {
    /**
     * Schema for simple success responses.
     */
    '2XX': MetabaseUsersApiSuccessResponse;
};

export type DeleteApiUserByIdResponse = DeleteApiUserByIdResponses[keyof DeleteApiUserByIdResponses];

export type GetApiUserByIdData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/user/{id}';
};

export type GetApiUserByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiUserByIdResponses = {
    /**
     * Schema for a User object returned by the API.
     */
    '2XX': MetabaseUsersApiUser;
};

export type GetApiUserByIdResponse = GetApiUserByIdResponses[keyof GetApiUserByIdResponses];

export type PutApiUserByIdData = {
    body?: {
        /**
         * value must be a valid email address.
         */
        email?: string;
        first_name?: string;
        is_group_manager?: boolean;
        is_superuser?: boolean;
        last_name?: string;
        /**
         * String must be a valid two-letter ISO language or language-country code e.g. 'en' or 'en_US'.
         */
        locale?: string;
        /**
         * login attribute keys must be a keyword or string
         */
        login_attributes?: {
            [key: string]: unknown;
        };
        user_group_memberships?: Array<MetabaseUsersApiUserGroupMembership>;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/user/{id}';
};

export type PutApiUserByIdErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiUserByIdResponses = {
    /**
     * Schema for a User object returned by the API.
     */
    '2XX': MetabaseUsersApiUser;
};

export type PutApiUserByIdResponse = PutApiUserByIdResponses[keyof PutApiUserByIdResponses];

export type PutApiUserByIdModalByModalData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
        modal: string;
    };
    query?: never;
    url: '/api/user/{id}/modal/{modal}';
};

export type PutApiUserByIdModalByModalErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiUserByIdModalByModalResponses = {
    /**
     * Schema for simple success responses.
     */
    '2XX': MetabaseUsersApiSuccessResponse;
};

export type PutApiUserByIdModalByModalResponse = PutApiUserByIdModalByModalResponses[keyof PutApiUserByIdModalByModalResponses];

export type PutApiUserByIdPasswordData = {
    body?: {
        old_password?: string;
        /**
         * password is too common.
         */
        password: string;
    };
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/user/{id}/password';
};

export type PutApiUserByIdPasswordErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiUserByIdPasswordResponses = {
    /**
     * Schema for password update response.
     */
    '2XX': MetabaseUsersApiPasswordUpdateResponse;
};

export type PutApiUserByIdPasswordResponse = PutApiUserByIdPasswordResponses[keyof PutApiUserByIdPasswordResponses];

export type PutApiUserByIdReactivateData = {
    body?: never;
    path: {
        /**
         * value must be an integer greater than zero.
         */
        id: number;
    };
    query?: never;
    url: '/api/user/{id}/reactivate';
};

export type PutApiUserByIdReactivateErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type PutApiUserByIdReactivateResponses = {
    /**
     * Schema for a User object returned by the API.
     */
    '2XX': MetabaseUsersApiUser;
};

export type PutApiUserByIdReactivateResponse = PutApiUserByIdReactivateResponses[keyof PutApiUserByIdReactivateResponses];

export type GetApiUtilRandomTokenData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/util/random_token';
};

export type GetApiUtilRandomTokenErrors = {
    /**
     * Client error response
     */
    '4XX': unknown;
    /**
     * Server error response
     */
    '5XX': unknown;
};

export type GetApiUtilRandomTokenResponses = {
    /**
     * Successful response
     */
    '2XX': unknown;
};
