name: E2E Matrix Builder

on:
  workflow_call:
    inputs:
      chunks:
        required: true
        type: number
        default: 30
      specs:
        required: false
        type: string
        default: "./e2e/test/scenarios/**/*.cy.spec.*"
    outputs:
      matrix:
        value: ${{ jobs.build-matrix.outputs.matrix }}
      regularChunks:
        value: ${{ jobs.build-matrix.outputs.regularChunks }}
      isDefaultSpecPattern:
        value: ${{ jobs.build-matrix.outputs.isDefaultSpecPattern }}

jobs:
  build-matrix:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    outputs:
      matrix: ${{ steps.matrix.outputs.config }}
      regularChunks: ${{ steps.matrix.outputs.regularChunks }}
      isDefaultSpecPattern: ${{ steps.matrix.outputs.isDefaultSpecPattern }}
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
          sparse-checkout-cone-mode: false
      - uses: actions/setup-node@v4
        with:
          node-version: lts/Jod # 22.x.x
      - name: Build e2e matrix
        uses: actions/github-script@v7
        id: matrix
        env:
          chunks: ${{ inputs.chunks }}
        with:
          script: | # js
            const { buildMatrix } = require('${{ github.workspace }}/.github/scripts/build-e2e-matrix.js');
            const inputSpecs = "${{ inputs.specs }}";
            const inputChunks = Number(process.env.chunks);
            const java = 21;
            const defaultRunner = "ubuntu-22.04";
            const options = {
              java,
              defaultRunner,
            };
            const { config, regularChunks, isDefaultSpecPattern } = buildMatrix(options, inputSpecs, inputChunks);

            core.setOutput("regularChunks", JSON.stringify(regularChunks));
            core.setOutput("config", JSON.stringify({ include: config }));
            core.setOutput("isDefaultSpecPattern", JSON.stringify(isDefaultSpecPattern));

            console.log({ regularChunks });
            console.log("matrix config", config);
            console.log("isDefaultSpecPattern", isDefaultSpecPattern);
