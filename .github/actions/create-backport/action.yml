name: Create Backport PR

inputs:
  target-version: # major version number like 34 or 86
    required: true
  backport-commit:
    required: true
  github-token:
    required: true
  github-token-2: # need a second token to approve the PR
    required: true

runs:
  using: "composite"
  steps:
    - id: create_backport_pull_request
      name: Create backport pull request
      env:
        TARGET_VERSION: ${{ inputs.target-version }}
        TARGET_BRANCH: release-x.${{ inputs.target-version }}.x
        ORIGINAL_PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}
        ORIGINAL_TITLE: ${{ github.event.pull_request.title }}
        GITHUB_TOKEN: ${{ inputs.github-token }}
        COMMIT: ${{ inputs.backport-commit }}
      shell: bash
      run: |
        git config --global user.email "metabase-bot@metabase.com"
        git config --global user.name "Metabase bot"

        BACKPORT_BRANCH="backport-$TARGET_VERSION-$COMMIT"

        # Checkout the target branch and create a new backport branch
        git checkout ${TARGET_BRANCH}
        git fetch --all
        git checkout -b ${BACKPORT_BRANCH}
        git cherry-pick ${COMMIT} || true

        CONFLICTS=$(git ls-files -u | wc -l)
        if [ "$CONFLICTS" -gt 0 ]; then
          git cherry-pick --abort

          echo "Could not cherry pick because of a conflict"
          echo "has-conflicts=true" >> $GITHUB_OUTPUT

          # Add a shell script for resolving conflicts
          echo "git reset HEAD~1" > ./backport.sh
          echo "rm ./backport.sh" >> ./backport.sh
          echo "git cherry-pick ${COMMIT}" >> ./backport.sh
          echo "echo 'Resolve conflicts and force push this branch'" >> ./backport.sh
          chmod +x ./backport.sh
          git add ./backport.sh
          git commit -m "Add backport resolution script"

          PR_BODY=$(cat <<-END
          #${ORIGINAL_PULL_REQUEST_NUMBER}
          > [!IMPORTANT]
          > Manual conflict resolution is required.
          Checkout the branch and run \`./backport.sh\` script. Force push your changes after cherry-picking.
        END
          )
        else
          echo "has-conflicts=false" >> $GITHUB_OUTPUT
          PR_BODY="#${ORIGINAL_PULL_REQUEST_NUMBER}"
        fi

        git push -u origin ${BACKPORT_BRANCH}

        BACKPORT_PR_URL=$(gh pr create --base "${TARGET_BRANCH}" --head "${BACKPORT_BRANCH}" --label "was-backported" --assignee "${GITHUB_ACTOR}" --title "ðŸ¤– backported \"${ORIGINAL_TITLE}\"" --body "${PR_BODY}")
        BACKPORT_PR_NUMBER=${BACKPORT_PR_URL##*/}

        echo "backport_pr_number=$BACKPORT_PR_NUMBER" >> $GITHUB_OUTPUT
        echo "New PR has been created: #${BACKPORT_PR_NUMBER}"

        git checkout ${{ github.sha }}

    - name: Auto approve backport PR
      if: ${{ steps.create_backport_pull_request.outputs.has-conflicts == 'false' }}
      uses: juliangruber/approve-pull-request-action@v1
      with:
        github-token: ${{ inputs.github-token-2 }}
        number: ${{ steps.create_backport_pull_request.outputs.backport_pr_number }}

    - name: Enable Pull Request Automerge
      if: ${{ steps.create_backport_pull_request.outputs.has-conflicts == 'false' }}
      uses: peter-evans/enable-pull-request-automerge@v2
      with:
        token: ${{ inputs.github-token }}
        pull-request-number: ${{ steps.create_backport_pull_request.outputs.backport_pr_number }}
        merge-method: squash

    - uses: ./.github/actions/notify-pull-request
      if: ${{ steps.create_backport_pull_request.outputs.has-conflicts == 'true' }}
      with:
        include-log: false
        message: Manual conflict resolution is required on \#${{ steps.create_backport_pull_request.outputs.backport_pr_number }}

    - uses: ./.github/actions/notify-pull-request
      if: ${{ failure() }}
      with:
        include-log: true
        message: Something went wrong while creating backport
